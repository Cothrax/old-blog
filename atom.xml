<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cothrax</title>
  <subtitle>I don&#39;t need a subtitle.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cothrax.github.io/"/>
  <updated>2016-08-15T01:35:57.114Z</updated>
  <id>https://cothrax.github.io/</id>
  
  <author>
    <name>Cothrax</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Vijos] p1023</title>
    <link href="https://cothrax.github.io/2016/08/15/Vijos-p1023/"/>
    <id>https://cothrax.github.io/2016/08/15/Vijos-p1023/</id>
    <published>2016-08-15T01:32:52.000Z</published>
    <updated>2016-08-15T01:35:57.114Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>Victoria是一位颇有成就的艺术家，他因油画作品《我爱北京天安门》闻名于世界。现在，他为了报答帮助他的同行们，准备开一个舞会。<br>Victoria准备邀请n个已经确定的人，可是问题来了：<br>这n个人每一个人都有一个小花名册，名册里面写着他能够通知到的人的名字。比如说在A的人名单里写了B，那么表示A能够通知到B；但是B的名单里不见的有A，也就是说B不见得通知到A。<br>Victoria觉得需要确定自己需要通知多少个人m，能够实际将所有人n都通知到。并求出一种方案以确定m的最小值是多少。<br>注意：自己的名单里面不会有自己的名字。Victoria可以自身通知到所有n个人。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数n。接下来n行，每i+1行表示编号为i的人的小花名册名单，名单以0结束。\<br>1&lt;=n&lt;=200。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个数，m。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>18<br>0<br>11 0<br>0<br>0<br>0<br>16 0<br>14 0<br>0<br>0<br>0<br>2 13 0<br>0<br>11 0<br>7 0<br>0<br>6 0<br>0<br>0</p>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>14</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>各个测试点1s</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>又见强连通分量，tarjan缩点，答案是入度为0的分量数</p>
<dir style="text-align:right"><a href="/2016/08/15/Vijos-p1023/p1023.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1023.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">201</span>,<span class="number">0</span>..<span class="number">201</span>] <span class="keyword">of</span> boolean;</div><div class="line">    dfn,low,scc,ind,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">201</span>] <span class="keyword">of</span> integer;</div><div class="line">    ins,used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">201</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,i,j,t,cc,tim,ans:integer;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">tarjan</span><span class="params">(v:integer)</span>;</span></div><div class="line"><span class="keyword">var</span> i:integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);dfn[v]:=tim;low[v]:=tim;</div><div class="line">    used[v]:=true;ins[v]:=true;</div><div class="line">    inc(t);s[t]:=v;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> g[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                tarjan(i);</div><div class="line">                low[v]:=min(low[v],low[i]);</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[i] <span class="keyword">then</span></div><div class="line">                low[v]:=min(low[v],dfn[i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> dfn[v]=low[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(cc);</div><div class="line">        <span class="keyword">while</span> s[t+<span class="number">1</span>]&lt;&gt;v <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            scc[s[t]]:=cc;</div><div class="line">            ins[s[t]]:=false;</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    fillchar(g,sizeof(g),false);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            g[i,j]:=true;</div><div class="line">            <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(ins,sizeof(ins),false);</div><div class="line">    fillchar(used,sizeof(used),false);</div><div class="line">    fillchar(ind,sizeof(ind),<span class="number">0</span>);</div><div class="line">    tim:=<span class="number">0</span>;cc:=<span class="number">0</span>;t:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> tarjan(i);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> g[i,j] <span class="keyword">and</span> (scc[i]&lt;&gt;scc[j]) <span class="keyword">then</span> </div><div class="line">                inc(ind[scc[j]]);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cc <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> ind[i]=<span class="number">0</span> <span class="keyword">then</span> inc(ans);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;Victoria是一位颇有成就的艺术家，他因油画作品《我爱北京天安门》闻名于世界。现在，他为了报答帮助他的同行们，准备开一个舞会。&lt;br&gt;Victoria准备邀请n个已经确定的人，可是问题来了：&lt;br&gt;这n个人每一个人都有一个小花名册，名册里面写着他能够通知到的人的名字。比如说在A的人名单里写了B，那么表示A能够通知到B；但是B的名单里不见的有A，也就是说B不见得通知到A。&lt;br&gt;Victoria觉得需要确定自己需要通知多少个人m，能够实际将所有人n都通知到。并求出一种方案以确定m的最小值是多少。&lt;br&gt;注意：自己的名单里面不会有自己的名字。Victoria可以自身通知到所有n个人。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行一个数n。接下来n行，每i+1行表示编号为i的人的小花名册名单，名单以0结束。\&lt;br&gt;1&amp;lt;=n&amp;lt;=200。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;一个数，m。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="强连通分量" scheme="https://cothrax.github.io/tags/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] p1595</title>
    <link href="https://cothrax.github.io/2016/08/15/Vijos-p1595/"/>
    <id>https://cothrax.github.io/2016/08/15/Vijos-p1595/</id>
    <published>2016-08-15T01:27:03.000Z</published>
    <updated>2016-08-15T01:33:45.756Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>一些学校的校园网连接在一个计算机网络上。学校之间存在软件支援协议。每个学校都有它应支援的学校名单（学校a支援学校b，并不表示学校b一定支援学校a）。当某校获得一个新软件时，无论是直接得到的还是从网络得到的，该校都应立即将这个软件通过网络传送给它应支援的学校。因此，若需要让所有连接在网络上的学校都能使用一个新软件，只需要将其提供给其中一些学校即可。<br>子任务a：根据学校间软件支援协议（各个学校的支援名单），计算最少需要将一个软件直接提供给多少个学校，才能使该软件通过网络传送到所有学校。<br>子任务b：如果允许在原有支援协议上添加新的支援关系，则总可以形成一个新的协议，使得此时只需要将一个新软件提供给任何一个学校，其他所有学校就都可以通过网络获得该软件。请计算出最少需要添加几条新的支援关系。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行是一个整数 n(2≤n≤100)，表示与网络连接的学校总数。接下来 n行描述了每个学校要支援的学校。第i+1行表示第i 号学校要支援的所有学校的编号，编号之间用空格隔开，每行以数字0 结束。如果某个学校不支援任何学校，则相应的行会有一个0。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>包含两行，第一行是一个正整数，表示子任务a的解。第二行也是一个正整数，表示子任务b的解。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>2 4 3 0<br>4 5 0<br>0<br>0<br>1 0</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>图结构</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的强连通分量。<br>tarjan缩点<br>统计每个强连通分量的入度和出度<br>第一问答案是入度为0的分量数<br>第二问的答案是max(入度为0的分量数，出度为0的分量数)<br>可以通过从入度0的点向出度为0的点连有向边来构造<br><strong>注意只有一个分量时，答案为1 0，不特判的话输出的是1 1</strong></p>
<dir style="text-align:right"><a href="/2016/08/15/Vijos-p1595/p1595.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1595.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>,<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> boolean; </div><div class="line">    dfn,low,scc,s,ind,outd:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> integer;</div><div class="line">    used,ins:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,i,j,t,cc,tim:integer;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">tarjan</span><span class="params">(v:integer)</span>;</span></div><div class="line"><span class="keyword">var</span> i:integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);dfn[v]:=tim;low[v]:=tim;</div><div class="line">    ins[v]:=true;used[v]:=true;</div><div class="line">    inc(t);s[t]:=v;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">        <span class="keyword">if</span> g[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                tarjan(i);</div><div class="line">                low[v]:=min(low[v],low[i]);</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[i] <span class="keyword">then</span> </div><div class="line">                low[v]:=min(low[v],dfn[i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> low[v]=dfn[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(cc);</div><div class="line">        <span class="keyword">while</span> s[t+<span class="number">1</span>]&lt;&gt;v <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            ins[s[t]]:=false;</div><div class="line">            scc[s[t]]:=cc;</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    fillchar(g,sizeof(g),false);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            g[i,j]:=true;</div><div class="line">            <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"></div><div class="line">    fillchar(used,sizeof(used),false);</div><div class="line">    fillchar(ins,sizeof(ins),false);</div><div class="line">    cc:=<span class="number">0</span>;tim:=<span class="number">0</span>;t:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> tarjan(i);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> cc=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> writeln(<span class="number">1</span>);<span class="keyword">write</span>(<span class="number">0</span>);halt <span class="keyword">end</span>;</div><div class="line">    fillchar(ind,sizeof(ind),<span class="number">0</span>);</div><div class="line">    fillchar(outd,sizeof(outd),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> (g[i,j]) <span class="keyword">and</span> (scc[i]&lt;&gt;scc[j]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                inc(outd[scc[i]]);</div><div class="line">                inc(ind[scc[j]]);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cc <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> ind[i]=<span class="number">0</span> <span class="keyword">then</span> inc(ind[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">if</span> outd[i]=<span class="number">0</span> <span class="keyword">then</span> inc(outd[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(ind[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">write</span>(max(ind[<span class="number">0</span>],outd[<span class="number">0</span>]));</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;一些学校的校园网连接在一个计算机网络上。学校之间存在软件支援协议。每个学校都有它应支援的学校名单（学校a支援学校b，并不表示学校b一定支援学校a）。当某校获得一个新软件时，无论是直接得到的还是从网络得到的，该校都应立即将这个软件通过网络传送给它应支援的学校。因此，若需要让所有连接在网络上的学校都能使用一个新软件，只需要将其提供给其中一些学校即可。&lt;br&gt;子任务a：根据学校间软件支援协议（各个学校的支援名单），计算最少需要将一个软件直接提供给多少个学校，才能使该软件通过网络传送到所有学校。&lt;br&gt;子任务b：如果允许在原有支援协议上添加新的支援关系，则总可以形成一个新的协议，使得此时只需要将一个新软件提供给任何一个学校，其他所有学校就都可以通过网络获得该软件。请计算出最少需要添加几条新的支援关系。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行是一个整数 n(2≤n≤100)，表示与网络连接的学校总数。接下来 n行描述了每个学校要支援的学校。第i+1行表示第i 号学校要支援的所有学校的编号，编号之间用空格隔开，每行以数字0 结束。如果某个学校不支援任何学校，则相应的行会有一个0。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;包含两行，第一行是一个正整数，表示子任务a的解。第二行也是一个正整数，表示子任务b的解。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="强连通分量" scheme="https://cothrax.github.io/tags/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="IOI" scheme="https://cothrax.github.io/tags/IOI/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] P1845 花匠</title>
    <link href="https://cothrax.github.io/2016/08/14/Vijos-P1845/"/>
    <id>https://cothrax.github.io/2016/08/14/Vijos-P1845/</id>
    <published>2016-08-14T13:55:22.000Z</published>
    <updated>2016-08-14T14:43:10.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>花匠栋栋种了一排花，每株花都有自己的高度。花儿越长越大，也越来越挤。栋栋决定把这排中的一部分花移走，将剩下的留在原地，使得剩下的花能有空间长大，同时，栋栋希望剩下的花排列得比较别致。<br>具体而言，栋栋的花的高度可以看成一列整数h1, h2, … , hn。设当一部分花被移走后，剩下的花的高度依次为g1, g2, … , gm，则栋栋希望下面两个条件中至少有一个满足：</p>
<p>条件 A：对于所有的<code>1&lt;i&lt;m/2</code>，<code>g(2i)&gt;g(2i-1)</code>，且<code>g(2i)&gt;g(2i+1)</code>；<br>条件 B：对于所有的<code>1&lt;i&lt;m/2</code>，<code>g(2i)&lt;g(2i−1)</code>，且<code>g(2i)&lt;g(2i+1)</code>。</p>
<p>注意上面两个条件在m=1时同时满足，当m&gt;1时最多有一个能满足。<br>请问，栋栋最多能将多少株花留在原地。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入的第一行包含一个整数 n，表示开始时花的株数。<br>第二行包含 n 个整数，依次为h1, h2,… , hn，表示每株花的高度。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，包含一个整数 m，表示最多能留在原地的花的株数。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>5 3 2 1 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 20%的数据，n ≤ 10；<br>对于 30%的数据，n ≤ 25；<br>对于 70%的数据，n ≤ 1000，0 ≤ hi ≤ 1000；<br>对于 100%的数据，1 ≤ n ≤ 100,000，0 ≤ hi ≤ 1,000,000，所有的h_i随机生成，所有随机数服从某区间内的均匀分布。</p>
<p>NOIP 2013 提高组 day 2</p>
<h2 id="水解"><a href="#水解" class="headerlink" title="水解"></a>水解</h2><p>首先想到LIS，然后5分钟DP就写好啦，80分然后TLE</p>
<blockquote>
<p>f[i,j] 以h[i]结尾的合法序列的最长长度<br>j=0时h[i]小于前一个数，j=1时h[i]大于前一个数<br>于是<br>$f[i,0]:=max{f[k,1]+1\ |\ h[k]&gt;h[i]\ and\ 1\leq k\leq i}$<br>$f[i,1]:=max{f[k,0]+1\ |\ h[k]&lt;h[i]\ and\ 1\leq k\leq i}$</p>
</blockquote>
<p><br></p>
<dir style="text-align:right"><a href="/2016/08/14/Vijos-P1845/p1845.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1845.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    i,j,n,len:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(h[i]);</div><div class="line">    fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">    f[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">1</span>;f[<span class="number">1</span>,<span class="number">1</span>]:=<span class="number">1</span>;len:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> i-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> h[i]&gt;h[j] <span class="keyword">then</span> f[i,<span class="number">1</span>]:=max(f[i,<span class="number">1</span>],f[j,<span class="number">0</span>]+<span class="number">1</span>);</div><div class="line">            <span class="keyword">if</span> h[i]&lt;h[j] <span class="keyword">then</span> f[i,<span class="number">0</span>]:=max(f[i,<span class="number">0</span>],f[j,<span class="number">1</span>]+<span class="number">1</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        len:=max(len,max(f[i,<span class="number">0</span>],f[i,<span class="number">1</span>]));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(len);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>其实LIS是可以用单调栈做的，于是这一题有了一个类似单调栈的做法，然后乱搞就A了。</p>
<dir style="text-align:right"><a href="/2016/08/14/Vijos-P1845/pp1845.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>pp1845.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    h,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    i,n,t:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(sym:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//sym=1 下一个数大</span></div><div class="line">    <span class="comment">//sym=-1 下一个数小</span></div><div class="line">    t:=<span class="number">1</span>;s[t]:=h[<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> ((sym&gt;<span class="number">0</span>) <span class="keyword">and</span> (h[i]&gt;s[t])) <span class="keyword">or</span></div><div class="line">           ((sym&lt;<span class="number">0</span>) <span class="keyword">and</span> (h[i]&lt;s[t])) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(t);</div><div class="line">            sym:=-sym;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        s[t]:=h[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    cal:=t;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(h[i]);</div><div class="line">    <span class="keyword">write</span>(max(cal(<span class="number">1</span>),cal(-<span class="number">1</span>)));</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;花匠栋栋种了一排花，每株花都有自己的高度。花儿越长越大，也越来越挤。栋栋决定把这排中的一部分花移走，将剩下的留在原地，使得剩下的花能有空间长大，同时，栋栋希望剩下的花排列得比较别致。&lt;br&gt;具体而言，栋栋的花的高度可以看成一列整数h1, h2, … , hn。设当一部分花被移走后，剩下的花的高度依次为g1, g2, … , gm，则栋栋希望下面两个条件中至少有一个满足：&lt;/p&gt;
&lt;p&gt;条件 A：对于所有的&lt;code&gt;1&amp;lt;i&amp;lt;m/2&lt;/code&gt;，&lt;code&gt;g(2i)&amp;gt;g(2i-1)&lt;/code&gt;，且&lt;code&gt;g(2i)&amp;gt;g(2i+1)&lt;/code&gt;；&lt;br&gt;条件 B：对于所有的&lt;code&gt;1&amp;lt;i&amp;lt;m/2&lt;/code&gt;，&lt;code&gt;g(2i)&amp;lt;g(2i−1)&lt;/code&gt;，且&lt;code&gt;g(2i)&amp;lt;g(2i+1)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;注意上面两个条件在m=1时同时满足，当m&amp;gt;1时最多有一个能满足。&lt;br&gt;请问，栋栋最多能将多少株花留在原地。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入的第一行包含一个整数 n，表示开始时花的株数。&lt;br&gt;第二行包含 n 个整数，依次为h1, h2,… , hn，表示每株花的高度。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出一行，包含一个整数 m，表示最多能留在原地的花的株数。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
      <category term="线性DP" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%80%A7DP/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] p1906 联合权值</title>
    <link href="https://cothrax.github.io/2016/08/14/Vijos-p1906/"/>
    <id>https://cothrax.github.io/2016/08/14/Vijos-p1906/</id>
    <published>2016-08-14T09:37:51.000Z</published>
    <updated>2016-08-14T10:02:16.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>无向连通图 G 有 n 个点，n-1 条边。点从 1 到 n 依次编号，编号为 i 的点的权值为 Wi， 每条边的长度均为 1。图上两点(u, v)的距离定义为 u 点到 v 点的最短距离。对于图 G 上的点对(u, v)，若它们的距离为 2，则它们之间会产生Wu×Wv的联合权值。<br>请问图 G 上所有可产生联合权值的有序点对中，联合权值最大的是多少？所有联合权值之和是多少？</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含 1 个整数 n。<br>接下来 n-1 行，每行包含 2 个用空格隔开的正整数 u、v，表示编号为 u 和编号为 v 的点 之间有边相连。<br>最后 1 行，包含 n 个正整数，每两个正整数之间用一个空格隔开，其中第 i 个整数表示 图 G 上编号为 i 的点的权值为Wi。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出共 1 行，包含 2 个整数，之间用一个空格隔开，依次为图 G 上联合权值的最大值 和所有联合权值之和。由于所有联合权值之和可能很大，输出它时要对10007取余。</p>
<a id="more"></a>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>1 2<br>2 3<br>3 4<br>4 5<br>1 5 2 3 10</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>20 74</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于 30%的数据，1 &lt; n ≤ 100；<br>对于 60%的数据，1 &lt; n ≤ 2000；<br>对于 100%的数据，1 &lt; n ≤ 200,000，0 &lt; WiWi ≤ 10,000。</p>
<p>NOIP2014 提高组 Day1<br>​</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>14年的题目怎么都很水。。。</p>
<p>对于点v，记与有v连边的所有点为$u_i$，两两配对所能得到的联合权值之和=$(\sum W_{u_i})^2-\sum W_{u_{i}}^2$<br>比如有与v连的有三个点，权值分别为a,b,c，那么这三个点能够成的联合权值之和=$2ab+2bc+2ca=(a+b+c)^2-a^2-b^2-c^2$<br>至于最大的权值，取$W_{u_i}$中的最大值和次大值，乘起来就是最大的联合权值。<br>于是扫一遍节点得到答案。<br>注意当v的度为1时不能构成联合权值</p>
<dir style="text-align:right"><a href="/2016/08/14/Vijos-p1906/p1906.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1906.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> z=<span class="number">10007</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,i,f,t,ans,maxw:int;</div><div class="line">    w,head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">400010</span>] <span class="keyword">of</span> edge;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u,fir,sec,sqrsum,sum:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fir:=<span class="number">0</span>;sec:=<span class="number">0</span>;sqrsum:=<span class="number">0</span>;sum:=<span class="number">0</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> w[u]&gt;fir <span class="keyword">then</span> <span class="keyword">begin</span> sec:=fir;fir:=w[u] <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> w[u]&gt;sec <span class="keyword">then</span> sec:=w[u];</div><div class="line">        sum:=(sum+w[u]) <span class="keyword">mod</span> z;</div><div class="line">        sqrsum:=(sqrsum+sqr(w[u])) <span class="keyword">mod</span> z;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> sec&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        maxw:=max(maxw,fir*sec);</div><div class="line">        ans:=(ans+sqr(sum)-sqrsum) <span class="keyword">mod</span> z;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);</div><div class="line">        add(f,t);add(t,f);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">    ans:=<span class="number">0</span>;maxw:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> solve(i);</div><div class="line">    <span class="keyword">write</span>(maxw,<span class="string">' '</span>,ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;无向连通图 G 有 n 个点，n-1 条边。点从 1 到 n 依次编号，编号为 i 的点的权值为 Wi， 每条边的长度均为 1。图上两点(u, v)的距离定义为 u 点到 v 点的最短距离。对于图 G 上的点对(u, v)，若它们的距离为 2，则它们之间会产生Wu×Wv的联合权值。&lt;br&gt;请问图 G 上所有可产生联合权值的有序点对中，联合权值最大的是多少？所有联合权值之和是多少？&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行包含 1 个整数 n。&lt;br&gt;接下来 n-1 行，每行包含 2 个用空格隔开的正整数 u、v，表示编号为 u 和编号为 v 的点 之间有边相连。&lt;br&gt;最后 1 行，包含 n 个正整数，每两个正整数之间用一个空格隔开，其中第 i 个整数表示 图 G 上编号为 i 的点的权值为Wi。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出共 1 行，包含 2 个整数，之间用一个空格隔开，依次为图 G 上联合权值的最大值 和所有联合权值之和。由于所有联合权值之和可能很大，输出它时要对10007取余。&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="Maths" scheme="https://cothrax.github.io/tags/Maths/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] p1908 无线网路发射器选址</title>
    <link href="https://cothrax.github.io/2016/08/14/Vijos-p1908/"/>
    <id>https://cothrax.github.io/2016/08/14/Vijos-p1908/</id>
    <published>2016-08-14T09:33:55.000Z</published>
    <updated>2016-08-14T09:51:07.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>随着智能手机的日益普及，人们对无线网的需求日益增大。某城市决定对城市内的公共场所覆盖无线网。<br>假设该城市的布局为由严格平行的 129 条东西向街道和 129 条南北向街道所形成的网格状，并且相邻的平行街道之间的距离都是恒定值 1 。东西向街道从北到南依次编号为0,1,2…128,南北向街道从西到东依次编号为 0,1,2…128。<br>东西向街道和南北向街道相交形成路口，规定编号为 x 的南北向街道和编号为 y 的东西向街道形成的路口的坐标是（x, y）。在某些路口存在一定数量的公共场所。<br>由于政府财政问题，只能安装一个大型无线网络发射器。该无线网络发射器的传播范围是一个以该点为中心，边长为 2*d 的正方形。传播范围包括正方形边界。<br>例如下图是一个 d = 1 的无线网络发射器的覆盖范围示意图。<br><img src="/2016/08/14/Vijos-p1908/noip2014tgday2p1.jpg" alt="noip2014tgday2p1.jpg" title=""><br>现在政府有关部门准备安装一个传播参数为 d 的无线网络发射器，希望你帮助他们在城 市内找出合适的安装地点，使得覆盖的公共场所最多。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含一个整数 d，表示无线网络发射器的传播距离。<br>第二行包含一个整数 n，表示有公共场所的路口数目。<br>接下来 n 行，每行给出三个整数 x, y, k, 中间用一个空格隔开，分别代表路口的坐标(x, y)以及该路口公共场所的数量。同一坐标只会给出一次。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，包含两个整数，用一个空格隔开，分别表示能覆盖最多公共场所的安装地点方案数，以及能覆盖的最多公共场所的数量。</p>
<a id="more"></a>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>1<br>2<br>4 4 10<br>6 6 20</p>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>1 30</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 100%的数据，1 ≤ d ≤ 20，1 ≤ n ≤ 20， 0 ≤ x ≤ 128, 0 ≤ y ≤ 128, 0 &lt; k ≤ 1,000,000。</p>
<p>NOIP2014 提高组 Day2</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>水一发，直接枚举就好啦。</p>
<dir style="text-align:right"><a href="/2016/08/14/Vijos-p1908/p1908.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1908.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,d,x,y,mx,my,i,j,tmp,ans,cnt:int;</div><div class="line">    a:<span class="keyword">array</span>[-<span class="number">21</span>..<span class="number">200</span>,-<span class="number">21</span>..<span class="number">200</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">solve</span><span class="params">(x,y:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    solve:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=x-d <span class="keyword">to</span> x+d <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=y-d <span class="keyword">to</span> y+d <span class="keyword">do</span> </div><div class="line">            inc(solve,a[i,j]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(d,n);</div><div class="line">    mx:=<span class="number">0</span>;my:=<span class="number">0</span>;</div><div class="line">    fillchar(a,sizeof(a),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(x,y);<span class="keyword">read</span>(a[x,y]);</div><div class="line">        mx:=max(x,mx);my:=max(y,my);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    inc(mx,d);inc(my,d);</div><div class="line">    ans:=<span class="number">0</span>;cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> min(mx,<span class="number">128</span>) <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> min(my,<span class="number">128</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            tmp:=solve(i,j);</div><div class="line">            <span class="keyword">if</span> tmp&gt;ans <span class="keyword">then</span> <span class="keyword">begin</span> ans:=tmp;cnt:=<span class="number">1</span> <span class="keyword">end</span></div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ans=tmp <span class="keyword">then</span> inc(cnt);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(cnt,<span class="string">' '</span>,ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;随着智能手机的日益普及，人们对无线网的需求日益增大。某城市决定对城市内的公共场所覆盖无线网。&lt;br&gt;假设该城市的布局为由严格平行的 129 条东西向街道和 129 条南北向街道所形成的网格状，并且相邻的平行街道之间的距离都是恒定值 1 。东西向街道从北到南依次编号为0,1,2…128,南北向街道从西到东依次编号为 0,1,2…128。&lt;br&gt;东西向街道和南北向街道相交形成路口，规定编号为 x 的南北向街道和编号为 y 的东西向街道形成的路口的坐标是（x, y）。在某些路口存在一定数量的公共场所。&lt;br&gt;由于政府财政问题，只能安装一个大型无线网络发射器。该无线网络发射器的传播范围是一个以该点为中心，边长为 2*d 的正方形。传播范围包括正方形边界。&lt;br&gt;例如下图是一个 d = 1 的无线网络发射器的覆盖范围示意图。&lt;br&gt;&lt;img src=&quot;/2016/08/14/Vijos-p1908/noip2014tgday2p1.jpg&quot; alt=&quot;noip2014tgday2p1.jpg&quot; title=&quot;&quot;&gt;&lt;br&gt;现在政府有关部门准备安装一个传播参数为 d 的无线网络发射器，希望你帮助他们在城 市内找出合适的安装地点，使得覆盖的公共场所最多。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行包含一个整数 d，表示无线网络发射器的传播距离。&lt;br&gt;第二行包含一个整数 n，表示有公共场所的路口数目。&lt;br&gt;接下来 n 行，每行给出三个整数 x, y, k, 中间用一个空格隔开，分别代表路口的坐标(x, y)以及该路口公共场所的数量。同一坐标只会给出一次。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出一行，包含两个整数，用一个空格隔开，分别表示能覆盖最多公共场所的安装地点方案数，以及能覆盖的最多公共场所的数量。&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
      <category term="枚举" scheme="https://cothrax.github.io/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] P1983 运输计划</title>
    <link href="https://cothrax.github.io/2016/08/13/Vijos-P1983/"/>
    <id>https://cothrax.github.io/2016/08/13/Vijos-P1983/</id>
    <published>2016-08-13T10:39:24.000Z</published>
    <updated>2016-08-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>公元 2044 年，人类进入了宇宙纪元。L 国有 n 个星球，还有 n−1 条双向航道，每条航道建立在两个星球之间，这 n−1 条 航道连通了 L 国的所有星球。<br>小 P 掌管一家物流公司，该公司有很多个运输计划，每个运输计划形如：有一艘物 流飞船需要从 ui 号星球沿最快的宇航路径飞行到 vi 号星球去。显然，飞船驶过一条航道是需要时间的，对于航道 j，任意飞船驶过它所花费的时间为 tj，并且任意两艘飞船之间不会产生任何干扰。<br>为了鼓励科技创新，L 国国王同意小 P 的物流公司参与 L 国的航道建设，即允许小 P 把某一条航道改造成虫洞，飞船驶过虫洞不消耗时间。<br>在虫洞的建设完成前小 P 的物流公司就预接了 m 个运输计划。在虫洞建设完成后， 这 m 个运输计划会同时开始，所有飞船一起出发。当这 m 个运输计划都完成时，小 P 的 物流公司的阶段性工作就完成了。<br>如果小 P 可以自由选择将哪一条航道改造成虫洞，试求出小 P 的物流公司完成阶段性工作所需要的最短时间是多少？</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包括两个正整数 n、m,表示 L 国中星球的数量及小 P 公司预接的运输计划的数量,星球从 1 到 n 编号。接下来 n-1 行描述航道的建设情况,其中第 i 行包含三个整数 ai, bi 和 ti,表示第 i 条双向航道修建在 ai 与 bi 两个星球之间,任意飞船驶过它所花费的时间为 ti。 接下来 m 行描述运输计划的情况,其中第 j 行包含两个正整数 uj 和 vj,表示第 j 个运输计划是从 uj 号星球飞往 vj 号星球。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>共 1 行,包含 1 个整数,表示小 P 的物流公司完成阶段性工作所需要的最短时间。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h3><blockquote>
<p>6 3<br>1 2 3<br>1 6 4<br>3 1 7<br>4 3 6<br>3 5 5<br>3 6<br>2 5<br>4 5</p>
</blockquote>
<h3 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h3><blockquote>
<p>11</p>
</blockquote>
<h2 id="限制​"><a href="#限制​" class="headerlink" title="限制​"></a>限制​</h2><p>一共有20组数据。<br>其中n的取值依次为：100，100，100，2000，1000，2000，3000，1000，2000，3000，80000，100000，70000，80000，90000，100000，80000，90000，100000，300000。<br>其中m的取值依次为：1，100，100，1，1000，2000，3000，1000，2000，3000，1，1，70000，80000，90000，100000，80000，90000，100000，300000。<br>其中第2，5，6，7，13，14，15，16组数据满足：第 i 条航道连接 i 号星球与 i+1 号星球。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>输入输出样例 1<br>将第 1 条航道改造成虫洞：则三个计划耗时分别为：11、12、11，故需要花费的时 间为 12。<br>将第 2 条航道改造成虫洞：则三个计划耗时分别为：7、15、11，故需要花费的时 间为 15。<br>将第 3 条航道改造成虫洞：则三个计划耗时分别为：4、8、11，故需要花费的时间 为 11。<br>将第 4 条航道改造成虫洞：则三个计划耗时分别为：11、15、5，故需要花费的时 间为 15。<br>将第 5 条航道改造成虫洞：则三个计划耗时分别为：11、10、6，故需要花费的时 间为 11。<br>故将第 3 条或第 5 条航道改造成虫洞均可使得完成阶段性工作的耗时最短，需要花 费的时间为 11。</p>
<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>NOIP 2015 提高组 Day 2 第三题<br>数据由AHdoc生成</p>
<h2 id="水解"><a href="#水解" class="headerlink" title="水解"></a>水解</h2><p>正解貌似是<strong>树链剖分</strong>，可是我不会==<br>于是写了LCA，然后$O(MlogN+logW(M+N))$，然后卡常，<del>还是只有95分</del>，然后A掉啦</p>
<p>大概是先倍增+LCA，然后二分时间，求大于给定时间x的所有路径的交，然后扫一遍交上的边j，如果有 最长路径-j的权&lt;=x 那么返回true<br><strong>路径求交</strong>：类似维护<strong>差分序列</strong>的方法，dfs维护一个。。。叫什么好呢。。。差分树吧<br>用count[i]记录记录经过边i（该边是节点i和其父节点的连边）的路径条数<br>对于一条边</p>
<ol>
<li>count[起点]+=1</li>
<li>count[终点]+=1</li>
<li>count[lca]-=2</li>
</ol>
<p>然后从根开始dfs，对一节点v，$count[v]+=\sum count[u]\ |\ u=child(v)$<br>count[1]不考虑，若count[i]=路径总数tot，那么i在路径的交上。</p>
<dir style="text-align:right"><a href="/2016/08/13/Vijos-P1983/P1983.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>P1983.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span></div><div class="line">    int=longint; </div><div class="line">    edge=<span class="keyword">record</span> f,t,w,next:int <span class="keyword">end</span>;</div><div class="line">    ask=<span class="keyword">record</span> f,t,w,lca:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">600010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,dep,count:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> int;</div><div class="line">    par,dist:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>,<span class="number">0</span>..<span class="number">20</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> ask;</div><div class="line">    n,m,logn,i,j,f0,t0,w0,l,r,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f;g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,p,d,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    dep[v]:=d;par[v,<span class="number">0</span>]:=p;dist[v,<span class="number">0</span>]:=w;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> dep[u]=<span class="number">0</span> <span class="keyword">then</span> dfs(u,v,d+<span class="number">1</span>,g[i].w);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">lca</span><span class="params">(u,v,id:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> dep[u]&lt;dep[v] <span class="keyword">then</span> <span class="keyword">begin</span> i:=u;u:=v;v:=i <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dep[par[u,i]]&gt;=dep[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(a[id].w,dist[u,i]);</div><div class="line">            u:=par[u,i];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> u=v <span class="keyword">then</span> <span class="keyword">begin</span> a[id].lca:=u;<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> par[u,i]&lt;&gt;par[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(a[id].w,dist[u,i]+dist[v,i]);</div><div class="line">            u:=par[u,i];v:=par[v,i];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    a[id].w:=a[id].w+dist[u,<span class="number">0</span>]+dist[v,<span class="number">0</span>];</div><div class="line">    a[id].lca:=par[u,<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs2</span><span class="params">(v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;par[v,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            dfs2(u);</div><div class="line">            inc(count[v],count[u]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j,w,tot:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(count,sizeof(count),<span class="number">0</span>);</div><div class="line">    w:=<span class="number">0</span>;tot:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i].w&gt;x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(count[a[i].f]);</div><div class="line">            inc(count[a[i].t]);</div><div class="line">            dec(count[a[i].lca],<span class="number">2</span>);</div><div class="line">            w:=max(w,a[i].w-x);inc(tot);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> tot=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(true);</div><div class="line">    </div><div class="line">    dfs2(<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> (count[i]=tot) <span class="keyword">and</span> (dist[i,<span class="number">0</span>]&gt;=w) <span class="keyword">then</span> <span class="keyword">exit</span>(true);</div><div class="line">    check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    logn:=floor(ln(n)/ln(<span class="number">2</span>));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">        add(f0,t0,w0);add(t0,f0,w0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i].f,a[i].t);</div><div class="line"></div><div class="line">    <span class="comment">//倍增数组和LCA</span></div><div class="line">    filldword(dist,sizeof(dist) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    fillchar(par,sizeof(par),<span class="number">0</span>);</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            par[j,i]:=par[par[j,i-<span class="number">1</span>],i-<span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span> par[j,i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></div><div class="line">                dist[j,i]:=dist[j,i-<span class="number">1</span>]+dist[par[j,i-<span class="number">1</span>],i-<span class="number">1</span>];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> lca(a[i].f,a[i].t,i);</div><div class="line"></div><div class="line">    <span class="comment">//二分</span></div><div class="line">    l:=<span class="number">0</span>;r:=inf;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p><strong>二分+树链剖分+差分序列</strong>，不就是用树链剖分代替了倍增吗，因为直接维护序列就不用dfs了，于是速度会快很多。<br><strong>差分序列</strong>就是把<strong>区间修改</strong>变成对应的<strong>单点修改</strong>，然后可以通过求<strong>前缀和</strong>来计算需要的信息。<br>典型的例子是黄学长做的 noip2012-借教室 那一题：<a href="http://hzwer.com/2959.html" target="_blank" rel="external">去围观</a><br>关于树链剖分可以看神犇的讲解：<a href="http://blog.sina.com.cn/s/blog_7a1746820100wp67.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_7a1746820100wp67.html</a></p>
<p>关于本题：<br>先树链剖分，顺便求LCA，算出所有运输计划的路径长<br>然后二分时间<br>和水解类似的，把所有大于给定时间的路径求交，然后扫一遍，找可行的边建虫洞。<br>只不过求交直接在剖分得到的树链上做差分序列。</p>
<p>说明一下我用的<strong>变量</strong></p>
<ul>
<li><p>以节点编号为下标</p>
<blockquote>
<p>par 直接父节点<br>chd 同一重链上的儿子<br>dep 深度<br>siz 子树上的节点数<br>w 与父节点的连边在树链序列中的编号<br>top 所在重链的顶端节点<br><strong>dist 到根1的距离</strong></p>
</blockquote>
</li>
<li><p>以树链序列中编号为下标的</p>
<blockquote>
<p>ev 树链序列，大小为k（最终等于n-1）<br>count 统计次数的差分序列</p>
</blockquote>
</li>
</ul>
<p>注意编号不要弄混，以及差分时注意<strong>端点</strong>的问题</p>
<dir style="text-align:right"><a href="/2016/08/13/Vijos-P1983/pp1983.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>pp1983.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span></div><div class="line">    int=longint; </div><div class="line">    edge=<span class="keyword">record</span> f,t,w,next:int <span class="keyword">end</span>;</div><div class="line">    ask=<span class="keyword">record</span> f,t,w:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,f0,t0,w0,l,r,mid,ans:int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">600010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> ask;</div><div class="line">    <span class="comment">//剖分变量</span></div><div class="line">    k:int;</div><div class="line">    par,chd,dep,w,siz,top,dist,</div><div class="line">    ev,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> int;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f;g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">//算出dep,siz,chd,par,dist</span></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs1</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    dep[v]:=dep[p]+<span class="number">1</span>;par[v]:=p;siz[v]:=<span class="number">1</span>;chd[v]:=<span class="number">0</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            dist[u]:=dist[v]+g[i].w;</div><div class="line">            dfs1(u,v);</div><div class="line">            inc(siz[v],siz[u]);</div><div class="line">            <span class="keyword">if</span> siz[u]&gt;siz[chd[v]] <span class="keyword">then</span> chd[v]:=u;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="comment">//算出w,top,ev</span></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs2</span><span class="params">(v,tp:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(k);ev[k]:=dist[v]-dist[par[v]];w[v]:=k;top[v]:=tp;</div><div class="line">    <span class="keyword">if</span> chd[v]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> dfs2(chd[v],tp);</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> (u&lt;&gt;par[v]) <span class="keyword">and</span> (u&lt;&gt;chd[v]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            dfs2(u,u);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(u,v:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> tu,tv:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> dep[u]&gt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">        tu:=top[u];tv:=top[v];</div><div class="line">        <span class="keyword">if</span> tu=tv <span class="keyword">then</span> break;</div><div class="line">        <span class="keyword">if</span> dep[tu]&lt;dep[tv] <span class="keyword">then</span> v:=par[tv] <span class="keyword">else</span> u:=par[tu];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    lca:=u;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="comment">//修改路径的cnt</span></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(u,v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tu,tv:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> dep[u]&gt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">        tu:=top[u];tv:=top[v];</div><div class="line">        <span class="keyword">if</span> tu=tv <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt[w[u]+<span class="number">1</span>]);</div><div class="line">            dec(cnt[w[v]+<span class="number">1</span>]);</div><div class="line">            break;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> dep[tu]&lt;dep[tv] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt[w[tv]+<span class="number">1</span>]);</div><div class="line">            dec(cnt[w[v]+<span class="number">1</span>]);</div><div class="line">            v:=par[tv];</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt[w[tu]+<span class="number">1</span>]);</div><div class="line">            dec(cnt[w[u]+<span class="number">1</span>]);</div><div class="line">            u:=par[tu];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,tot,maxw,cur:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</div><div class="line">    tot:=<span class="number">0</span>;maxw:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i].w&gt;x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            modify(a[i].f,a[i].t);</div><div class="line">            inc(tot);</div><div class="line">            maxw:=max(maxw,a[i].w-x);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    cur:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(cur,cnt[i]);</div><div class="line">        <span class="keyword">if</span> (cur=tot) <span class="keyword">and</span> (ev[i]&gt;=maxw) <span class="keyword">then</span> <span class="keyword">exit</span>(true);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">        add(f0,t0,w0);add(t0,f0,w0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i].f,a[i].t);</div><div class="line">    <span class="comment">//树链剖分</span></div><div class="line">    k:=<span class="number">0</span>;dfs1(<span class="number">1</span>,<span class="number">1</span>);dfs2(<span class="number">1</span>,<span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="comment">//LCA</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        j:=lca(a[i].f,a[i].t);</div><div class="line">        a[i].w:=dist[a[i].f]+dist[a[i].t]-<span class="number">2</span>*dist[j]; <span class="comment">//路径长</span></div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    <span class="comment">//二分</span></div><div class="line">    l:=<span class="number">0</span>;r:=inf;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<p>树链修改还可以用<strong>指针</strong>写，好像短一些<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(u,v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> p:^int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> top[u]&lt;&gt;top[v] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> dep[top[u]]&lt;dep[top[v]] <span class="keyword">then</span> p:=@v <span class="keyword">else</span> p:=@u;</div><div class="line">        inc(cnt[w[par[p^]]]);</div><div class="line">        dec(cnt[w[p^]]);</div><div class="line">        p^:=par[top[p^]];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> dep[u]&gt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">    inc(cnt[w[u]+<span class="number">1</span>]);</div><div class="line">    dec(cnt[w[v]+<span class="number">1</span>]);</div><div class="line"><span class="keyword">end</span>;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;公元 2044 年，人类进入了宇宙纪元。L 国有 n 个星球，还有 n−1 条双向航道，每条航道建立在两个星球之间，这 n−1 条 航道连通了 L 国的所有星球。&lt;br&gt;小 P 掌管一家物流公司，该公司有很多个运输计划，每个运输计划形如：有一艘物 流飞船需要从 ui 号星球沿最快的宇航路径飞行到 vi 号星球去。显然，飞船驶过一条航道是需要时间的，对于航道 j，任意飞船驶过它所花费的时间为 tj，并且任意两艘飞船之间不会产生任何干扰。&lt;br&gt;为了鼓励科技创新，L 国国王同意小 P 的物流公司参与 L 国的航道建设，即允许小 P 把某一条航道改造成虫洞，飞船驶过虫洞不消耗时间。&lt;br&gt;在虫洞的建设完成前小 P 的物流公司就预接了 m 个运输计划。在虫洞建设完成后， 这 m 个运输计划会同时开始，所有飞船一起出发。当这 m 个运输计划都完成时，小 P 的 物流公司的阶段性工作就完成了。&lt;br&gt;如果小 P 可以自由选择将哪一条航道改造成虫洞，试求出小 P 的物流公司完成阶段性工作所需要的最短时间是多少？&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行包括两个正整数 n、m,表示 L 国中星球的数量及小 P 公司预接的运输计划的数量,星球从 1 到 n 编号。接下来 n-1 行描述航道的建设情况,其中第 i 行包含三个整数 ai, bi 和 ti,表示第 i 条双向航道修建在 ai 与 bi 两个星球之间,任意飞船驶过它所花费的时间为 ti。 接下来 m 行描述运输计划的情况,其中第 j 行包含两个正整数 uj 和 vj,表示第 j 个运输计划是从 uj 号星球飞往 vj 号星球。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;共 1 行,包含 1 个整数,表示小 P 的物流公司完成阶段性工作所需要的最短时间。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
      <category term="树结构" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    
      <category term="二分" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="倍增" scheme="https://cothrax.github.io/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="树链剖分" scheme="https://cothrax.github.io/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] P1982 子串</title>
    <link href="https://cothrax.github.io/2016/08/13/Vijos-P1982/"/>
    <id>https://cothrax.github.io/2016/08/13/Vijos-P1982/</id>
    <published>2016-08-13T07:58:53.000Z</published>
    <updated>2016-08-14T01:08:06.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>有两个仅包含小写英文字母的字符串 A 和 B。现在要从字符串 A 中取出 k 个<strong>互不重叠</strong>的非空子串，然后把这 k 个子串按照其在字符串 A 中出现的顺序依次连接起来得到一 个新的字符串，请问有多少种方案可以使得这个新串与字符串 B 相等？注意：子串取出的位置不同也认为是不同的方案。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行是三个正整数 n，m，k，分别表示字符串 A 的长度，字符串 B 的长度，以及问 题描述中所提到的 k，每两个整数之间用一个空格隔开。第二行包含一个长度为 n 的字符串，表示字符串 A。 第三行包含一个长度为 m 的字符串，表示字符串 B。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出共一行，包含一个整数，表示所求方案数。由于答案可能很大，<strong>所以这里要求输出答案对 1,000,000,007 取模的结果。</strong><br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h3><blockquote>
<p>6 3 1<br>aabaab<br>aab</p>
</blockquote>
<h3 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h3><blockquote>
<p>2</p>
</blockquote>
<h3 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h3><blockquote>
<p>6 3 2<br>aabaab<br>aab</p>
</blockquote>
<h3 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h3><blockquote>
<p>7</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于第 1 组数据：1≤n≤500，1≤m≤50，k=1；<br>对于第 2 组至第 3 组数据：1≤n≤500，1≤m≤50，k=2；<br>对于第 4 组至第 5 组数据：1≤n≤500，1≤m≤50，k=m；<br>对于第 1 组至第 7 组数据：1≤n≤500，1≤m≤50，1≤k≤m；<br>对于第 1 组至第 9 组数据：1≤n≤1000，1≤m≤100，1≤k≤m；<br>对于所有 10 组数据：1≤n≤1000，1≤m≤200，1≤k≤m。</p>
<p>NOIP 2015 提高组 Day 2 第二题</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><strong>划分DP+滚动数组</strong><br>f[t,i,j] 在a[1..i]中取t份，与b[1..j]匹配的方法数。<br>注意初始化f[0,i,0]=1</p>
<dir style="text-align:right"><a href="/2016/08/13/Vijos-P1982/p1982.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1982.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> z=<span class="number">1000000007</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,k,i,i0,i1,j,t,l:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">210</span>] <span class="keyword">of</span> int;</div><div class="line">    a,b:ansistring;</div><div class="line"><span class="keyword">begin</span> <span class="comment">&#123;Main&#125;</span></div><div class="line">    readln(n,m,k);</div><div class="line">    readln(a);readln(b);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> f[<span class="number">0</span>,i,<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        i0:=i <span class="keyword">mod</span> <span class="number">2</span>;i1:=(i+<span class="number">1</span>) <span class="keyword">mod</span> <span class="number">2</span>;</div><div class="line">        fillchar(f[i0],sizeof(f[i0]),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                f[i0,j,t]:=f[i0,j-<span class="number">1</span>,t];</div><div class="line">                l:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">while</span> a[j-l]=b[t-l] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                    <span class="keyword">if</span> l&gt;=min(j,t) <span class="keyword">then</span> break;</div><div class="line">                    f[i0,j,t]:=(f[i0,j,t]+f[i1,j-l-<span class="number">1</span>,t-l-<span class="number">1</span>]) <span class="keyword">mod</span> z;</div><div class="line">                    inc(l);</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(f[k <span class="keyword">mod</span> <span class="number">2</span>,n,m]);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;有两个仅包含小写英文字母的字符串 A 和 B。现在要从字符串 A 中取出 k 个&lt;strong&gt;互不重叠&lt;/strong&gt;的非空子串，然后把这 k 个子串按照其在字符串 A 中出现的顺序依次连接起来得到一 个新的字符串，请问有多少种方案可以使得这个新串与字符串 B 相等？注意：子串取出的位置不同也认为是不同的方案。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行是三个正整数 n，m，k，分别表示字符串 A 的长度，字符串 B 的长度，以及问 题描述中所提到的 k，每两个整数之间用一个空格隔开。第二行包含一个长度为 n 的字符串，表示字符串 A。 第三行包含一个长度为 m 的字符串，表示字符串 B。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出共一行，包含一个整数，表示所求方案数。由于答案可能很大，&lt;strong&gt;所以这里要求输出答案对 1,000,000,007 取模的结果。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
      <category term="划分DP" scheme="https://cothrax.github.io/tags/%E5%88%92%E5%88%86DP/"/>
    
      <category term="字符串" scheme="https://cothrax.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] P1981 跳石头</title>
    <link href="https://cothrax.github.io/2016/08/13/Vijos-P1981/"/>
    <id>https://cothrax.github.io/2016/08/13/Vijos-P1981/</id>
    <published>2016-08-13T06:13:49.000Z</published>
    <updated>2016-08-14T01:08:18.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>一年一度的“跳石头”比赛又要开始了！<br>这项比赛将在一条笔直的河道中进行，河道中分布着一些巨大岩石。组委会已经选择好了两块岩石作为比赛起点和终点。在起点和终点之间，有 N 块岩石（不含起点和终 点的岩石）。在比赛过程中，选手们将从起点出发，每一步跳向相邻的岩石，直至到达终点。<br>为了提高比赛难度，组委会计划移走一些岩石，使得选手们在比赛过程中的最短跳 跃距离尽可能长。由于预算限制，组委会至多从起点和终点之间移走 M 块岩石（不能 移走起点和终点的岩石）。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入第一行包含三个整数 L，N，M，分别表示起点到终点的距离，起点和终 点之间的岩石数，以及组委会至多移走的岩石数。<br>接下来 N 行，每行一个整数，第 i 行的整数 Di（0&lt;Di&lt;L0&lt;Di&lt;L）表示第 i 块岩石与起点的距离。这些岩石按与起点距离从小到大的顺序给出，且不会有两个岩石出现在同 一个位置。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出只包含一个整数，即最短跳跃距离的最大值。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>25 5 2<br>2<br>11<br>14<br>17<br>21</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于20%的数据，0≤M≤N≤10。<br>对于50%的数据，0≤M≤N≤100。<br>对于100%的数据，0≤M≤N≤50000，1≤L≤1000000000。</p>
<p>对于样例。将与起点距离为 2 和 14 的两个岩石移走后，最短的跳跃距离为 4（从与起点距离17 的岩石跳到距离 21 的岩石，或者从距离 21 的岩石跳到终点）。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><strong>二分</strong>最大距离，不要忘记起终点的石头。</p>
<dir style="text-align:right"><a href="/2016/08/13/Vijos-P1981/p1981.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1981.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line"></div><div class="line">	l0,m,n,i,l,r,mid,ans:int;</div><div class="line">	d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,last,count:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">	count:=<span class="number">0</span>;last:=<span class="number">0</span>;i:=<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span> i&lt;=n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">		<span class="keyword">while</span> (d[i]-d[last]&lt;x) <span class="keyword">and</span> (i&lt;=n) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">			inc(i);inc(count);</div><div class="line">		<span class="keyword">end</span>;</div><div class="line">		<span class="keyword">if</span> count&gt;m <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">		last:=i;inc(i);</div><div class="line">	<span class="keyword">end</span>;</div><div class="line">	c:=true;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">	<span class="keyword">read</span>(l0,n,m);</div><div class="line">	<span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(d[i]);</div><div class="line">	d[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">	inc(n);d[n]:=l0;</div><div class="line"></div><div class="line">	l:=<span class="number">0</span>;r:=l0;ans:=-<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">		mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span> c(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">		<span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">	<span class="keyword">end</span>;</div><div class="line">	<span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;一年一度的“跳石头”比赛又要开始了！&lt;br&gt;这项比赛将在一条笔直的河道中进行，河道中分布着一些巨大岩石。组委会已经选择好了两块岩石作为比赛起点和终点。在起点和终点之间，有 N 块岩石（不含起点和终 点的岩石）。在比赛过程中，选手们将从起点出发，每一步跳向相邻的岩石，直至到达终点。&lt;br&gt;为了提高比赛难度，组委会计划移走一些岩石，使得选手们在比赛过程中的最短跳 跃距离尽可能长。由于预算限制，组委会至多从起点和终点之间移走 M 块岩石（不能 移走起点和终点的岩石）。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入第一行包含三个整数 L，N，M，分别表示起点到终点的距离，起点和终 点之间的岩石数，以及组委会至多移走的岩石数。&lt;br&gt;接下来 N 行，每行一个整数，第 i 行的整数 Di（0&amp;lt;Di&amp;lt;L0&amp;lt;Di&amp;lt;L）表示第 i 块岩石与起点的距离。这些岩石按与起点距离从小到大的顺序给出，且不会有两个岩石出现在同 一个位置。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出只包含一个整数，即最短跳跃距离的最大值。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] P1979 信息传递</title>
    <link href="https://cothrax.github.io/2016/08/13/Vijos-P1979/"/>
    <id>https://cothrax.github.io/2016/08/13/Vijos-P1979/</id>
    <published>2016-08-13T05:28:09.000Z</published>
    <updated>2016-08-14T01:10:50.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>有 n 个同学（编号为 1 到 n）正在玩一个信息传递的游戏。在游戏里每人都有一个固定的信息传递对象，其中，编号为i的同学的信息传递对象是编号为Ti的同学。<br>游戏开始时，每人都只知道自己的生日。之后每一轮中，所有人会同时将自己当前所知的生日信息告诉各自的信息传递对象（注意：可能有人可以从若干人那里获取信息， 但是每人只会把信息告诉一个人，即自己的信息传递对象）。当有人从别人口中得知自己的生日时，游戏结束。请问该游戏一共可以进行几轮？</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入共 2 行。<br>第 1 行包含 1 个正整数 n，表示 n 个人。<br>第 2 行包含 n 个用空格隔开的正整数 T1,T2,… …,Tn，其中第 i 个整数Ti表示编号为i的同学的信息传递对象是编号为Ti的同学， Ti≤n且 Ti≠i。<br>数据保证游戏一定会结束。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出共 1 行，包含 1 个整数，表示游戏一共可以进行多少轮。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>2 4 2 3 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于 30%的数据， n ≤ 200；<br>对于 60%的数据，n ≤ 2500；<br>对于 100%的数据，n ≤ 200000。</p>
<p>【输入输出样例 1 说明】<br><img src="/2016/08/13/Vijos-P1979/noip2015tgd1t2.jpg" alt="noip2015tgd1t2.jpg" title="">​</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>本题的解法很多，比如说用并查集找最小环，Tarjan等。但发现，构成的有向图非常特殊：<strong>每个点的出度都是1</strong>，所以可以用简单的dfs解决问题。<br>用flag[v]记录v节点是否访问过，由于点的出度为1，从一个点出发构成的链是唯一确定的，一旦发现flag[t[v]]=true就可以回溯，标记t[v]这个点，用全局变量d储存回溯的链的长度，当回溯到t[v]时用d+1更新答案。</p>
<dir style="text-align:right"><a href="/2016/08/13/Vijos-P1979/p1979.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1979.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span>	</div><div class="line">	n,i,p,d,ans:int;</div><div class="line">	t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">	flag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> boolean;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">	flag[v]:=true;</div><div class="line">	<span class="keyword">if</span> flag[t[v]] <span class="keyword">then</span> p:=t[v]</div><div class="line">	<span class="keyword">else</span> dfs(t[v]);</div><div class="line">	<span class="keyword">if</span> p=v <span class="keyword">then</span> ans:=min(ans,d+<span class="number">1</span>);</div><div class="line">	inc(d);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">	<span class="keyword">read</span>(n);</div><div class="line">	<span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">	ans:=maxlongint;</div><div class="line">	fillchar(flag,sizeof(flag),false);</div><div class="line">	<span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">		d:=<span class="number">0</span>;p:=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span> <span class="keyword">not</span> flag[i] <span class="keyword">then</span> dfs(i);</div><div class="line">	<span class="keyword">end</span>;</div><div class="line">	<span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;有 n 个同学（编号为 1 到 n）正在玩一个信息传递的游戏。在游戏里每人都有一个固定的信息传递对象，其中，编号为i的同学的信息传递对象是编号为Ti的同学。&lt;br&gt;游戏开始时，每人都只知道自己的生日。之后每一轮中，所有人会同时将自己当前所知的生日信息告诉各自的信息传递对象（注意：可能有人可以从若干人那里获取信息， 但是每人只会把信息告诉一个人，即自己的信息传递对象）。当有人从别人口中得知自己的生日时，游戏结束。请问该游戏一共可以进行几轮？&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入共 2 行。&lt;br&gt;第 1 行包含 1 个正整数 n，表示 n 个人。&lt;br&gt;第 2 行包含 n 个用空格隔开的正整数 T1,T2,… …,Tn，其中第 i 个整数Ti表示编号为i的同学的信息传递对象是编号为Ti的同学， Ti≤n且 Ti≠i。&lt;br&gt;数据保证游戏一定会结束。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出共 1 行，包含 1 个整数，表示游戏一共可以进行多少轮。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo初体验</title>
    <link href="https://cothrax.github.io/2016/08/12/Hexo%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>https://cothrax.github.io/2016/08/12/Hexo初体验/</id>
    <published>2016-08-12T07:34:05.000Z</published>
    <updated>2016-08-14T01:09:33.754Z</updated>
    
    <content type="html"><![CDATA[<p>作为JS的一只OIer，一直用Evernote写（tie）题（dai）解（ma），今天想试试<a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a>，于是就有了这个页面。<br>折腾了一个晚上带一个上午，自己的Blog已经有了雏形，记录一下中途遇到的各种<strong>BUG</strong>。</p>
<h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p>这是用<a href="https://hexo.io" target="_blank" rel="external">Hexo</a>建的站，阅读了多位大牛的文章，才有了我这个简陋的Blog。</p>
<ol>
<li><a href="http://blog.csdn.net/poem_of_sunshine/article/details/29369785/" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程 by cnfeat</a></li>
<li><a href="https://ijiaober.github.io/categories/hexo/" target="_blank" rel="external">Hexo使用攻略 by ijiaober</a></li>
</ol>
<h2 id="安装和部署"><a href="#安装和部署" class="headerlink" title="安装和部署"></a>安装和部署</h2><h3 id="npm卡住不动"><a href="#npm卡住不动" class="headerlink" title="npm卡住不动"></a>npm卡住不动</h3><p>hexo是基于node.js，于是运行npm安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>由于gfw的存在，就动不了了。还好可以换<strong>国内的镜像</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nano ~/.npmrc</div><div class="line">registry =https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<p>或者用<a href="https://github.com/cnpm/cnpm" target="_blank" rel="external">cnpm</a>替换npm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<h3 id="Hexo-command-not-found"><a href="#Hexo-command-not-found" class="headerlink" title="Hexo command not found"></a>Hexo command not found</h3><p>修改Windows的<strong>环境变量</strong>，把<code>hexo安装目录\node_modules\.bin</code>加到Path里去就好了。</p>
<h3 id="ERROR-Deployer-not-found-github"><a href="#ERROR-Deployer-not-found-github" class="headerlink" title="ERROR Deployer not found: github"></a>ERROR Deployer not found: github</h3><p>Hexo3.0把github改成了git<br>于是在bash中执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>然后把<code>type</code>从<code>github</code>改成<code>git</code><br><a id="more"></a></p>
<h3 id="deploy时repository各种报错"><a href="#deploy时repository各种报错" class="headerlink" title="deploy时repository各种报错"></a>deploy时repository各种报错</h3><p>肯定是yml哪里写错了，这玩意连冒号后面的空格都不能少，如我的username是Cothrax，于是deploy这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:cothrax/cothrax.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<h3 id="nothing-to-commit-working-tree-clean后卡住"><a href="#nothing-to-commit-working-tree-clean后卡住" class="headerlink" title="nothing to commit, working tree clean后卡住"></a>nothing to commit, working tree clean后卡住</h3><p>耐心等吧，实在不行使用科学上网工具，也可以用这个很棒的<strong>hosts</strong>优化网络：<a href="https://serve.netsh.org/pub/ipv4-hosts/" target="_blank" rel="external">https://serve.netsh.org/pub/ipv4-hosts/</a></p>
<h3 id="每次部署都要输入passphrase"><a href="#每次部署都要输入passphrase" class="headerlink" title="每次部署都要输入passphrase"></a>每次部署都要输入passphrase</h3><p>谁叫你生成ssh时设了密钥呢，passphrase是防止别人向你的项目中提交文件，重新生成一下ssh，passphrase那两个输入直接敲回车就可以了。</p>
<h2 id="配置和体验"><a href="#配置和体验" class="headerlink" title="配置和体验"></a>配置和体验</h2><p>我用了<a href="https://github.com/wuchong/jacman" target="_blank" rel="external">jacman</a>的主题，下面一些feature基于jacman，其他主题的设置应该大同小异，在此感谢这个<a href="http://wuchong.me/" target="_blank" rel="external">主题的作者</a></p>
<h3 id="Markdown相关"><a href="#Markdown相关" class="headerlink" title="Markdown相关"></a>Markdown相关</h3><p>Hexo 3提供了<strong>标签插件</strong>，可以方便地插入图片和文件。</p>
<ol>
<li>官方文档<ol>
<li>标签插件：<a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/tag-plugins.html</a></li>
<li>资源文件夹：<a href="https://hexo.io/zh-cn/docs/asset-folders.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/asset-folders.html</a></li>
</ol>
</li>
<li>我的一些例子和测试：<a href="/2016/08/12/Test-Hexo/" title="Test Hexo">Test Hexo</a></li>
</ol>
<h4 id="代码复制到剪切板"><a href="#代码复制到剪切板" class="headerlink" title="代码复制到剪切板"></a>代码复制到剪切板</h4><p>直接复制会碰到行号，但js什么的早就忘干净了，于是替代方案是在<strong>给出asset链接指向源码文件</strong><br>可以在markdown里写html+css来处理右对齐<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">dir</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span></span><span class="template-tag">&#123;% <span class="name">asset_link</span> p1523.pas 复制代码 %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">dir</span>&gt;</span></span></div><div class="line">下面是代码块</div></pre></td></tr></table></figure></p>
<p>就成了这样：<br><img src="/2016/08/12/Hexo初体验/codeblock.jpg" alt="用了css的效果" title="用了css的效果"></p>
<h3 id="多说评论系统"><a href="#多说评论系统" class="headerlink" title="多说评论系统"></a>多说评论系统</h3><ol>
<li>登录多说，然后获取站点<strong>通用代码</strong>：<a href="http://duoshuo.com/create-site" target="_blank" rel="external">http://duoshuo.com/create-site</a></li>
<li>找到<code>\themes\jacman\layout\_partial\post\comment.ejs</code></li>
<li>把得到的通用代码复制到<code>&lt;section id=&quot;comments&quot; class=&quot;comment&quot;&gt;</code>和<code>&lt;/section&gt;</code>之间，原来的东西覆盖掉。</li>
<li>然后主题的<code>_config.yml</code>中把<code>duoshuo_shortname</code>填成你的多说用户名就好了</li>
<li>还有，如果想在一个页面（如404）<strong>禁用评论</strong>，可以在front-master中加<code>comments: false</code></li>
</ol>
<h3 id="站内搜索的实现"><a href="#站内搜索的实现" class="headerlink" title="站内搜索的实现"></a>站内搜索的实现</h3><p>百度的站内搜索要验证，结果不是是不支持https，就是是连不上github服务器，还会报301错误，无奈还是用google好啦。</p>
<p>goole的<strong>自定义搜索引擎</strong>：<a href="https://cse.google.com/cse/all" target="_blank" rel="external">https://cse.google.com/cse/all</a><br>用jacman主题，只要更改jacman下的<code>_config.yml</code>，把cx码和enable设好，还有的注释上说得很清楚：</p>
<blockquote>
<p>To enable the custom search You must create a “search” folder in ‘/source’ and a “index.md” file<br>set the ‘front-matter’ as<br>layout: search<br>title: search</p>
</blockquote>
<h4 id="一直显示“正在加载搜索结果，请稍等”"><a href="#一直显示“正在加载搜索结果，请稍等”" class="headerlink" title="一直显示“正在加载搜索结果，请稍等”"></a>一直显示“正在加载搜索结果，请稍等”</h4><p>检查了Chrome的Console：<br><img src="/2016/08/12/Hexo初体验/screenshot.jpg" alt="Console" title="Console"><br>发现是<strong>http和https混用</strong>，然后Chrome把不安全的http给block掉了，找到<code>\themes\jacman\layout\_partial\search.ejs</code>，将<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://www.google.com.hk/jsapi"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>中的http改成https就好了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.google.com.hk/jsapi"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="搜索显示无结果"><a href="#搜索显示无结果" class="headerlink" title="搜索显示无结果"></a>搜索显示无结果</h4><p>没有向google提交你的blog，当然什么也找不到了。<br>把blog加到google的索引中：<br><a href="https://www.google.cn/intl/zh-CN/submit_content.html" target="_blank" rel="external">https://www.google.cn/intl/zh-CN/submit_content.html</a></p>
<h3 id="RSS功能"><a href="#RSS功能" class="headerlink" title="RSS功能"></a>RSS功能</h3><p>执行命令<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></div></pre></td></tr></table></figure></p>
<p>然后在根下的配置文件里写入：<br><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#RSS订阅</span></div><div class="line"><span class="attr">plugin:</span></div><div class="line"><span class="bullet">-</span> hexo-generator-feed</div><div class="line"><span class="comment">#Feed Atom</span></div><div class="line"><span class="attr">feed:</span></div><div class="line"><span class="attr">type:</span> atom</div><div class="line"><span class="attr">path:</span> atom.xml</div><div class="line"><span class="attr">limit:</span> <span class="number">20</span></div></pre></td></tr></table></figure></p>
<h4 id="RSS报UTF-8错误"><a href="#RSS报UTF-8错误" class="headerlink" title="RSS报UTF-8错误"></a>RSS报UTF-8错误</h4><p>Windows下会用BOM标记utf-8文件，hexo不识别这种标记，可以在目录下查找atom.xml文件，然后用utf-8的文本编辑器（如notepad++,gedit）打开，重新保存一下就好了</p>
<h3 id="Chrome下分享图标显示不全"><a href="#Chrome下分享图标显示不全" class="headerlink" title="Chrome下分享图标显示不全"></a>Chrome下分享图标显示不全</h3><p>这是因为用了广告屏蔽的插件，如AdBlock可以设置屏蔽社交按钮。<br>然后有趣的事情发生了，ABP把页面下方的GitHub和Twitter的链接干掉了，它认不得知乎，于是一排图标只剩下知乎和Email了。</p>
<blockquote>
<p>end.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为JS的一只OIer，一直用Evernote写（tie）题（dai）解（ma），今天想试试&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;，于是就有了这个页面。&lt;br&gt;折腾了一个晚上带一个上午，自己的Blog已经有了雏形，记录一下中途遇到的各种&lt;strong&gt;BUG&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;参考教程&quot;&gt;&lt;a href=&quot;#参考教程&quot; class=&quot;headerlink&quot; title=&quot;参考教程&quot;&gt;&lt;/a&gt;参考教程&lt;/h2&gt;&lt;p&gt;这是用&lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;建的站，阅读了多位大牛的文章，才有了我这个简陋的Blog。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/poem_of_sunshine/article/details/29369785/&quot;&gt;如何搭建一个独立博客——简明Github Pages与Hexo教程 by cnfeat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ijiaober.github.io/categories/hexo/&quot;&gt;Hexo使用攻略 by ijiaober&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;安装和部署&quot;&gt;&lt;a href=&quot;#安装和部署&quot; class=&quot;headerlink&quot; title=&quot;安装和部署&quot;&gt;&lt;/a&gt;安装和部署&lt;/h2&gt;&lt;h3 id=&quot;npm卡住不动&quot;&gt;&lt;a href=&quot;#npm卡住不动&quot; class=&quot;headerlink&quot; title=&quot;npm卡住不动&quot;&gt;&lt;/a&gt;npm卡住不动&lt;/h3&gt;&lt;p&gt;hexo是基于node.js，于是运行npm安装：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于gfw的存在，就动不了了。还好可以换&lt;strong&gt;国内的镜像&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;nano ~/.npmrc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;registry =https://registry.npm.taobao.org&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者用&lt;a href=&quot;https://github.com/cnpm/cnpm&quot;&gt;cnpm&lt;/a&gt;替换npm&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Hexo-command-not-found&quot;&gt;&lt;a href=&quot;#Hexo-command-not-found&quot; class=&quot;headerlink&quot; title=&quot;Hexo command not found&quot;&gt;&lt;/a&gt;Hexo command not found&lt;/h3&gt;&lt;p&gt;修改Windows的&lt;strong&gt;环境变量&lt;/strong&gt;，把&lt;code&gt;hexo安装目录\node_modules\.bin&lt;/code&gt;加到Path里去就好了。&lt;/p&gt;
&lt;h3 id=&quot;ERROR-Deployer-not-found-github&quot;&gt;&lt;a href=&quot;#ERROR-Deployer-not-found-github&quot; class=&quot;headerlink&quot; title=&quot;ERROR Deployer not found: github&quot;&gt;&lt;/a&gt;ERROR Deployer not found: github&lt;/h3&gt;&lt;p&gt;Hexo3.0把github改成了git&lt;br&gt;于是在bash中执行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后把&lt;code&gt;type&lt;/code&gt;从&lt;code&gt;github&lt;/code&gt;改成&lt;code&gt;git&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Tinkering Note" scheme="https://cothrax.github.io/categories/Tinkering-Note/"/>
    
    
      <category term="Hexo" scheme="https://cothrax.github.io/tags/Hexo/"/>
    
      <category term="GitHub" scheme="https://cothrax.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Test Hexo</title>
    <link href="https://cothrax.github.io/2016/08/12/Test-Hexo/"/>
    <id>https://cothrax.github.io/2016/08/12/Test-Hexo/</id>
    <published>2016-08-12T02:44:49.000Z</published>
    <updated>2016-08-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><del>localhost下测试，asset、404都没有用，deploy后就</del>能用啦。</p>
<p>要用资源文件夹的话：<br><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<h2 id="一张图片"><a href="#一张图片" class="headerlink" title="一张图片"></a>一张图片</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_img</span> example.gif TestImage %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure>
<img src="/2016/08/12/Test-Hexo/example.gif" alt="TestImage" title="TestImage">
<h2 id="一份源码"><a href="#一份源码" class="headerlink" title="一份源码"></a>一份源码</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_path</span> p1523.pas %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure>
/2016/08/12/Test-Hexo/p1523.pas
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_link</span> p1523.pas %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure>
<a href="/2016/08/12/Test-Hexo/p1523.pas" title="p1523.pas">p1523.pas</a>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_link</span> p1523.pas 标题 %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure>
<a href="/2016/08/12/Test-Hexo/p1523.pas" title="标题">标题</a>
<a id="more"></a>
<h2 id="404"><a href="#404" class="headerlink" title="404"></a>404</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> page <span class="string">"404"</span></div></pre></td></tr></table></figure>
<figure class="highlight yml"><figcaption><span>404.md</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">---</span></div><div class="line"><span class="attr">title:</span> <span class="number">404</span> Page not Found</div><div class="line"><span class="attr">comments:</span> <span class="literal">false</span></div><div class="line"><span class="attr">toc:</span> <span class="literal">false</span></div><div class="line"><span class="attr">permalink:</span> /<span class="number">404</span></div><div class="line"><span class="meta">---</span></div></pre></td></tr></table></figure>
<p><a href="https://cothrax.github.io/这就404了">https://cothrax.github.io/这就404了</a><br>还有根下<code>_config.yml</code>中<code>relative_link: false</code>，不然在子目录下404就找不到css了，然后layout就没有了</p>
<h2 id="Raw标签"><a href="#Raw标签" class="headerlink" title="Raw标签"></a>Raw标签</h2><p>用来避免<strong>解析异常</strong>，如可以用Raw来避免markdown和mathjax的解析冲突。<br>如果直接这样写的话<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">点为$u<span class="emphasis">_i$，能得到的联合权值之和=$(\sum W_</span>&#123;u<span class="emphasis">_i&#125;)^2-\sum W_</span>&#123;u_&#123;i&#125;&#125;^2$</div></pre></td></tr></table></figure></p>
<p>由于下划线被markdown当做斜体，就成了这样：</p>
<blockquote>
<p>点为$u<em>i$，能得到的联合权值之和=$(\sum W</em>{u<em>i})^2-\sum W</em>{u_{i}}^2$</p>
</blockquote>
<p>当然你可以用<strong>转义符</strong>来解决问题：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">点为$u\<span class="emphasis">_i$，能得到的联合权值之和=$(\sum W\_</span>&#123;u\<span class="emphasis">_i&#125;)^2-\sum W\_</span>&#123;u\_&#123;i&#125;&#125;^2$</div></pre></td></tr></table></figure></p>
<blockquote>
<p>点为$u_i$，能得到的联合权值之和=$(\sum W_{u_i})^2-\sum W_{u_{i}}^2$</p>
</blockquote>
<p>当公式特别长时，转义符就不方便了，于是这样写：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% raw %&#125; </div><div class="line">点为$u<span class="emphasis">_i$，能得到的联合权值之和=$(\sum W_</span>&#123;u<span class="emphasis">_i&#125;)^2-\sum W_</span>&#123;u_&#123;i&#125;&#125;^2$</div><div class="line">&#123;% endraw %&#125;</div></pre></td></tr></table></figure></p>
<p>就好啦：</p>
<blockquote>
点为$u_i$，能得到的联合权值之和=$(\sum W_{u_i})^2-\sum W_{u_{i}}^2$
</blockquote>
<h2 id="其他的"><a href="#其他的" class="headerlink" title="其他的"></a>其他的</h2><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% post_link Test-Hexo 标题 %&#125;</div><div class="line">&#123;% post_link Hello-the-Wicked-World %&#125;</div></pre></td></tr></table></figure>
<a href="/2016/08/12/Test-Hexo/" title="标题">标题</a><br><br><a href="/2016/08/12/Hello-the-Wicked-World/" title="Hello the Wicked World">Hello the Wicked World</a>
<h3 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% gist 0781305b79f54aaeac06b49444529d1c p1144.pas %&#125;</div></pre></td></tr></table></figure>
<p>好棒<br><script src="//gist.github.com/0781305b79f54aaeac06b49444529d1c.js?file=p1144.pas"></script></p>
<h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p>Youtube和Vimeo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% youtube dc-nyGo0aC8 %&#125;</div></pre></td></tr></table></figure></p>
<div class="video-container"><iframe src="//www.youtube.com/embed/dc-nyGo0aC8" frameborder="0" allowfullscreen></iframe></div>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% vimeo video_id %&#125;</div></pre></td></tr></table></figure>
<p>这个没试过</p>
<blockquote>
<p>Done.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;localhost下测试，asset、404都没有用，deploy后就&lt;/del&gt;能用啦。&lt;/p&gt;
&lt;p&gt;要用资源文件夹的话：&lt;br&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;figcaption&gt;&lt;span&gt;_config.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;post_asset_folder:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;一张图片&quot;&gt;&lt;a href=&quot;#一张图片&quot; class=&quot;headerlink&quot; title=&quot;一张图片&quot;&gt;&lt;/a&gt;一张图片&lt;/h2&gt;&lt;figure class=&quot;highlight django&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;asset_img&lt;/span&gt; example.gif TestImage %&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img src=&quot;/2016/08/12/Test-Hexo/example.gif&quot; alt=&quot;TestImage&quot; title=&quot;TestImage&quot;&gt;
&lt;h2 id=&quot;一份源码&quot;&gt;&lt;a href=&quot;#一份源码&quot; class=&quot;headerlink&quot; title=&quot;一份源码&quot;&gt;&lt;/a&gt;一份源码&lt;/h2&gt;&lt;figure class=&quot;highlight django&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;asset_path&lt;/span&gt; p1523.pas %&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
/2016/08/12/Test-Hexo/p1523.pas
&lt;figure class=&quot;highlight django&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;asset_link&lt;/span&gt; p1523.pas %&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a href=&quot;/2016/08/12/Test-Hexo/p1523.pas&quot; title=&quot;p1523.pas&quot;&gt;p1523.pas&lt;/a&gt;
&lt;figure class=&quot;highlight django&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;asset_link&lt;/span&gt; p1523.pas 标题 %&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a href=&quot;/2016/08/12/Test-Hexo/p1523.pas&quot; title=&quot;标题&quot;&gt;标题&lt;/a&gt;
    
    </summary>
    
      <category term="Tinkering Note" scheme="https://cothrax.github.io/categories/Tinkering-Note/"/>
    
    
      <category term="Hexo" scheme="https://cothrax.github.io/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://cothrax.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] P1523 贪吃的九头龙</title>
    <link href="https://cothrax.github.io/2016/08/12/Vijos-P1523/"/>
    <id>https://cothrax.github.io/2016/08/12/Vijos-P1523/</id>
    <published>2016-08-12T00:55:10.000Z</published>
    <updated>2016-08-14T01:08:37.112Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传说中的九头龙是一种特别贪吃的动物。虽然名字叫“九头龙”，但这只是说它出生的时候有九个头，而在成长的过程中，它有时会长出很多的新头，头的总数会远大于九，当然也会有旧头因衰老而自己脱落。</p>
<p>有一天，有M个脑袋的九头龙看到一棵长有N个果子的果树，喜出望外，恨不得一口把它全部吃掉。可是必须照顾到每个头，因此它需要把N个果子分成M组，每组至少有一个果子，让每个头吃一组。</p>
<p>这M个脑袋中有一个最大，称为“大头”，是众头之首，它要吃掉恰好K个果子，而且K个果子中理所当然地应该包括唯一的一个最大的果子。果子由N-1根树枝连接起来，由于果树是一个整体，因此可以从任意一个果子出发沿着树枝“走到”任何一个其他的果子。</p>
<p>对于每段树枝，如果它所连接的两个果子需要由不同的头来吃掉，那么两个头会共同把树枝弄断而把果子分开；如果这两个果子是由同一个头来吃掉，那么这个头会懒得把它弄断而直接把果子连同树枝一起吃掉。当然，吃树枝并不是很舒服的，因此每段树枝都有一个吃下去的“难受值”，而九头龙的难受值就是所有头吃掉的树枝的“难受值”之和。</p>
<p>九头龙希望它的“难受值”尽量小，你能帮它算算吗？</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入的第1行包含三个整数N(1&lt;=N&lt;=300)，M(2&lt;=M&lt;=N)，K(1&lt;=K&lt;=N)。N个果子依次编号1,2,…,N，且最大的果子的编号总是1。第2行到第N行描述了果树的形态，每行包含三个整数a(1&lt;=a&lt;=N)，b(1&lt;=b&lt;=N)，c(0&lt;=c&lt;=105)，表示存在一段难受值为c的树枝连接果子a和果子b。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出仅有一行，包含一个整数，表示在满足“大头”的要求的前提下，九头龙的难受值的最小值。如果无法满足要求，输出-1。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>8 2 4<br> 1 2 20<br> 1 3 4<br> 1 4 13<br> 2 5 10<br> 2 6 12<br> 3 7 15<br> 3 8 5</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>树形动态规划</p>
<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>安徽省芜湖市第二十七中学测试题<br>NOI 2002 贪吃的九头龙(dragon)<br>Description:Official<br>Data:Official<br>Program:Converted by JackDavid127<br>​</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>发现树形DP根本不会==<br>首先状态无比复杂，考虑一个神一样的简化：<strong>树一定可以被k分染色。</strong><br>因为一张无向图能被二分染色的充要条件是至少两个节点且不存在偶数边的环，显然树时满足要求的，能被二分染色的图自然可以被k分染色。<br><br>于是题目变成了：</p>
<ol>
<li>用两种颜色染一棵树</li>
<li>根节点颜色是1</li>
<li>颜色是1的节点恰好是k个</li>
</ol>
<p>也就是说把所有小头看成一个头，如果m=2的话小头的难受度要算进答案，如果m&gt;2，我们可以通过<strong>分配小头来保证不存在难受度</strong>，此时对答案有贡献的只有大头的难受度。</p>
<p>然后某神犇说方程好简单。。。OTZ<br><strong>f[i,j,k]表示以i为根的子树，j个被大头吃了，i的父节点是k吃的（0表示大头，1表示小头）</strong><br>方程见代码。</p>
<p>注意这里的树是<strong>多叉转二叉</strong>的树，转的时候边的难受度可以放到子节点里，n-1条边与n个点配对，根节点1忽略不计。<br>然后答案是<strong>dp(tr[i].ch,k-1,1)</strong>，当然直接搜根然后特判一下也可以。</p>
<p>还有注意初始化为负数方便记忆化，如果无法完成要赋成inf，codevs经常因为一个warning就大惊小怪地报CE，因为我用filldword赋-1，但其实不会出问题因为我给的是longint数组，今天知道了只要fillchar(a,sizeof(a),255)就完事了。<br>开始手残k=0和1写反了。。。居然还有10分真是不可思议</p>
<dir style="text-align:right"><a href="/2016/08/12/Vijos-P1523/p1523.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1523.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math; </div><div class="line"><span class="keyword">const</span> inf=<span class="number">10000000</span>; </div><div class="line"><span class="keyword">type</span>    </div><div class="line">    edge=<span class="keyword">record</span> t,w,next:longint <span class="keyword">end</span>; </div><div class="line">    node=<span class="keyword">record</span> br,ch,w:longint <span class="keyword">end</span>;    </div><div class="line"><span class="keyword">var</span>     </div><div class="line">    n,m,k,i,f0,t0,w0:longint;    </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">610</span>] <span class="keyword">of</span> edge; </div><div class="line">    tr:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> node;    </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> longint;    </div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> longint;    </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f0,t0,w0:longint)</span>;</span>    </div><div class="line"><span class="keyword">var</span> m:longint;    </div><div class="line"><span class="keyword">begin</span>    </div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];    </div><div class="line">    g[m].t:=t0;g[m].w:=w0;    </div><div class="line">    g[m].next:=head[f0];head[f0]:=m;    </div><div class="line"><span class="keyword">end</span>; </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,p:longint)</span>;</span> </div><div class="line"><span class="keyword">var</span> i,u:longint; </div><div class="line"><span class="keyword">begin</span> </div><div class="line">    i:=head[v]; </div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span> </div><div class="line">        u:=g[i].t; </div><div class="line">        <span class="keyword">if</span> p&lt;&gt;u <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">            tr[u].br:=tr[v].ch; </div><div class="line">            tr[v].ch:=u; </div><div class="line">            tr[u].w:=g[i].w; </div><div class="line">            dfs(u,v); </div><div class="line">        <span class="keyword">end</span>; </div><div class="line">        i:=g[i].next; </div><div class="line">    <span class="keyword">end</span>; </div><div class="line"><span class="keyword">end</span>;    </div><div class="line"></div><div class="line"><span class="comment">//v的子树，大头吃j棵，父节点是k吃的（0大头，1小头） </span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dp</span><span class="params">(v,j,k:longint)</span>:</span>longint; </div><div class="line"><span class="keyword">var</span> t,tmp:longint; </div><div class="line"><span class="keyword">begin</span> </div><div class="line">    <span class="keyword">if</span> v=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">        <span class="keyword">if</span> j=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>) <span class="keyword">else</span> <span class="keyword">exit</span>(inf) </div><div class="line">    <span class="keyword">end</span>; </div><div class="line">    <span class="keyword">if</span> f[v,j,k]&gt;=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(f[v,j,k]); </div><div class="line">    f[v,j,k]:=inf; </div><div class="line">    <span class="comment">//大头吃i </span></div><div class="line">    <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> j <span class="keyword">do</span> <span class="keyword">begin</span> </div><div class="line">        tmp:=dp(tr[v].ch,t-<span class="number">1</span>,<span class="number">0</span>)+dp(tr[v].br,j-t,k); </div><div class="line">        <span class="keyword">if</span> k=<span class="number">0</span> <span class="keyword">then</span> inc(tmp,tr[v].w); </div><div class="line">        f[v,j,k]:=min(f[v,j,k],tmp); </div><div class="line">    <span class="keyword">end</span>; </div><div class="line">    <span class="comment">//小头吃i </span></div><div class="line">    <span class="keyword">for</span> t:=<span class="number">0</span> <span class="keyword">to</span> j <span class="keyword">do</span> <span class="keyword">begin</span> </div><div class="line">        tmp:=dp(tr[v].ch,t,<span class="number">1</span>)+dp(tr[v].br,j-t,k); </div><div class="line">        <span class="keyword">if</span> (k=<span class="number">1</span>) <span class="keyword">and</span> (m=<span class="number">2</span>) <span class="keyword">then</span> inc(tmp,tr[v].w); </div><div class="line">        f[v,j,k]:=min(f[v,j,k],tmp); </div><div class="line">    <span class="keyword">end</span>; </div><div class="line">    dp:=f[v,j,k]; </div><div class="line"><span class="keyword">end</span>; </div><div class="line"></div><div class="line"><span class="keyword">begin</span>    </div><div class="line">    <span class="keyword">read</span>(n,m,k); </div><div class="line">    <span class="keyword">if</span> m+k&gt;n <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(-<span class="number">1</span>);halt <span class="keyword">end</span>; </div><div class="line">    <span class="comment">//先用邻接表存多叉    </span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span>    </div><div class="line">        <span class="keyword">read</span>(f0,t0,w0);    </div><div class="line">        add(f0,t0,w0);add(t0,f0,w0);    </div><div class="line">    <span class="keyword">end</span>;    </div><div class="line">    <span class="comment">//深搜一遍，多叉转二叉    </span></div><div class="line">    tr[<span class="number">1</span>].w:=<span class="number">0</span>;dfs(<span class="number">1</span>,<span class="number">0</span>); </div><div class="line">    <span class="comment">//记忆化 </span></div><div class="line">    fillchar(f,sizeof(f),<span class="number">255</span>); </div><div class="line">    <span class="keyword">write</span>(dp(tr[<span class="number">1</span>].ch,k-<span class="number">1</span>,<span class="number">0</span>));    </div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传说中的九头龙是一种特别贪吃的动物。虽然名字叫“九头龙”，但这只是说它出生的时候有九个头，而在成长的过程中，它有时会长出很多的新头，头的总数会远大于九，当然也会有旧头因衰老而自己脱落。&lt;/p&gt;
&lt;p&gt;有一天，有M个脑袋的九头龙看到一棵长有N个果子的果树，喜出望外，恨不得一口把它全部吃掉。可是必须照顾到每个头，因此它需要把N个果子分成M组，每组至少有一个果子，让每个头吃一组。&lt;/p&gt;
&lt;p&gt;这M个脑袋中有一个最大，称为“大头”，是众头之首，它要吃掉恰好K个果子，而且K个果子中理所当然地应该包括唯一的一个最大的果子。果子由N-1根树枝连接起来，由于果树是一个整体，因此可以从任意一个果子出发沿着树枝“走到”任何一个其他的果子。&lt;/p&gt;
&lt;p&gt;对于每段树枝，如果它所连接的两个果子需要由不同的头来吃掉，那么两个头会共同把树枝弄断而把果子分开；如果这两个果子是由同一个头来吃掉，那么这个头会懒得把它弄断而直接把果子连同树枝一起吃掉。当然，吃树枝并不是很舒服的，因此每段树枝都有一个吃下去的“难受值”，而九头龙的难受值就是所有头吃掉的树枝的“难受值”之和。&lt;/p&gt;
&lt;p&gt;九头龙希望它的“难受值”尽量小，你能帮它算算吗？&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入的第1行包含三个整数N(1&amp;lt;=N&amp;lt;=300)，M(2&amp;lt;=M&amp;lt;=N)，K(1&amp;lt;=K&amp;lt;=N)。N个果子依次编号1,2,…,N，且最大的果子的编号总是1。第2行到第N行描述了果树的形态，每行包含三个整数a(1&amp;lt;=a&amp;lt;=N)，b(1&amp;lt;=b&amp;lt;=N)，c(0&amp;lt;=c&amp;lt;=105)，表示存在一段难受值为c的树枝连接果子a和果子b。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出仅有一行，包含一个整数，表示在满足“大头”的要求的前提下，九头龙的难受值的最小值。如果无法满足要求，输出-1。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="树形DP" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2DP/"/>
    
      <category term="NOI" scheme="https://cothrax.github.io/tags/NOI/"/>
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
  </entry>
  
  <entry>
    <title>Hello the Wicked World</title>
    <link href="https://cothrax.github.io/2016/08/12/Hello-the-Wicked-World/"/>
    <id>https://cothrax.github.io/2016/08/12/Hello-the-Wicked-World/</id>
    <published>2016-08-11T23:13:10.000Z</published>
    <updated>2016-08-12T05:08:21.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cothrax"><a href="#Cothrax" class="headerlink" title="Cothrax"></a>Cothrax</h1><blockquote>
<p>这是测试页 </p>
</blockquote>
<p>注意：标题的#后面要有<strong>空格</strong></p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">program</span> noip2016;</div><div class="line"><span class="keyword">var</span> rp:qword;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    writeln(<span class="string">'JS的一只蒟蒻'</span>);</div><div class="line">    writeln(<span class="string">'Evernote用腻了，想试试GitHub'</span>);</div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span></div><div class="line">        inc(rp);</div><div class="line"><span class="keyword">end</span>;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Cothrax&quot;&gt;&lt;a href=&quot;#Cothrax&quot; class=&quot;headerlink&quot; title=&quot;Cothrax&quot;&gt;&lt;/a&gt;Cothrax&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;这是测试页 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意：标题的#后面
    
    </summary>
    
      <category term="Uncategorized" scheme="https://cothrax.github.io/categories/Uncategorized/"/>
    
    
  </entry>
  
</feed>
