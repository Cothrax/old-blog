<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cothrax</title>
  <subtitle>I don&#39;t need a subtitle.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cothrax.github.io/"/>
  <updated>2016-10-04T14:59:46.823Z</updated>
  <id>https://cothrax.github.io/</id>
  
  <author>
    <name>Cothrax</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NOIP模拟赛 2014-10-29</title>
    <link href="https://cothrax.github.io/2016/10/04/noip-2014-10-29/"/>
    <id>https://cothrax.github.io/2016/10/04/noip-2014-10-29/</id>
    <published>2016-10-04T14:48:48.000Z</published>
    <updated>2016-10-04T14:59:46.823Z</updated>
    
    <content type="html"><![CDATA[<p>P2裸的折半枚举没有写</p>
<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">cowids</td>
<td style="text-align:center">DP+回溯</td>
</tr>
<tr>
<td style="text-align:center">senso</td>
<td style="text-align:center">树形DP</td>
</tr>
</tbody>
</table>
<h1 id="P1-奶牛编号"><a href="#P1-奶牛编号" class="headerlink" title="P1 奶牛编号"></a>P1 奶牛编号</h1><p>作为一个神秘的电脑高手，Farmer John 用二进制数字标识他的奶牛。<br>然而，他有点迷信，标识奶牛用的二进制数字，必须只含有K位“1”<br>(1 &lt;= K &lt;= 10)。 当然，每个标识数字的首位必须为“1”。<br>FJ按递增的顺序，安排标识数字，开始是最小可行的标识数字<br>（由“1”组成的一个K位数）。<br>不幸的是，他没有记录下标识数字。请帮他计算，第N个标识数字<br>(1 &lt;= N &lt;= 10^7)。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>空格隔开的两个整数，N和K。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>如题，第N个标识数字</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>7 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>10110</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>dp统计方案数，然后回溯找答案<br>懒了不想码了<br><a href="http://haizs.com/simu2014-10-29b/" target="_blank" rel="external">http://haizs.com/simu2014-10-29b/</a></p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-29/cowids.cpp" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight cpp"><figcaption><span>cowids.cpp</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e3</span>, INF = <span class="number">1e7</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m, f[N + <span class="number">1</span>][<span class="number">11</span>];</div><div class="line"><span class="keyword">bool</span> flag;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> step)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (step == <span class="number">0</span>) <span class="keyword">return</span> ;</div><div class="line">    <span class="keyword">if</span> (f[step - <span class="number">1</span>][y] &gt;= x) &#123;</div><div class="line">        <span class="keyword">if</span> (flag) <span class="built_in">putchar</span>(<span class="string">'0'</span>);</div><div class="line">        Dfs(x, y, step - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">putchar</span>(<span class="string">'1'</span>); flag = <span class="number">1</span>;</div><div class="line">        Dfs(x - f[step - <span class="number">1</span>][y], y - <span class="number">1</span>, step - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    freopen(<span class="string">"cowids.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</div><div class="line">    freopen(<span class="string">"cowids.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</div><div class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>) &#123;</div><div class="line">        <span class="built_in">putchar</span>(<span class="string">'1'</span>);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)</div><div class="line">            <span class="built_in">putchar</span>(<span class="string">'0'</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= N; ++i)</div><div class="line">            f[i][<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j)</div><div class="line">                f[i][j] = min(INF, f[i - <span class="number">1</span>][j] + f[i - <span class="number">1</span>][j - <span class="number">1</span>]);</div><div class="line">        Dfs(n, m, N);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</div><div class="line">    fclose(<span class="built_in">stdin</span>);fclose(<span class="built_in">stdout</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-宠物大战"><a href="#P3-宠物大战" class="headerlink" title="P3 宠物大战"></a>P3 宠物大战</h1><p>众所周知，moreD的宠物已经被moreD奴役得体无完肤。这只宠物实在忍无可忍，把自己每天走魔法树的经历告诉了自己的宠物。同时他还说明了自己爬树是多么地慢，以至于moreD每天都残酷地训练他爬树。<br>幸运的是moreD的宠物的宠物不是moreD的宠物，moreD的宠物深知”宠物是用来宠的而不是用来奴役的”这一点，所以moreD的宠物 对待自己的宠物很有爱。所以moreD的宠物与其宠物商量着要推翻moreD的暴政，方法是把moreD告上法庭，就以自己每天被迫爬树来做证据。<br>由于魔法树是树，训练树当然也是树啦。<br>moreD的训练有着GX的文化，每天moreD会把自己的宠物通灵到树的一个端点上，这个通灵点可能与之前的通灵点相同。然后moreD命令他的宠物从这个点开始走，让这只宠物随便访问自己该天之前没有访问过的节点，一直走到该天无路可走，训练才会结束，宠物才可以休息。<br>moreD的宠物每天都会在这棵树上训练，幸运的是他每天走过的训练路径都不同，直到若干天后，所有可能的训练路径都被走遍了。<br>你，作为moreD宠物的宠物，一只被moreD的宠物宠着的宠物，当然想帮moreD的宠物算出他总共走过的路径长度啦。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个正整数N,M，表示树的点数与边数。<br>接下来M行，每行三个正整数表示Li,bi,ci分别表示树上有一条长度为Li的连接bi,ci两个结点的边。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>仅一行表示答案</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 4<br>1 2 1<br>1 3 1<br>2 4 2<br>2 5 2</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>37</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>【数据范围】<br>对于30%的数据N≤300<br>对于70%的数据N≤3,000<br>对于100%的数据对于所有输入的整数均不大于100,000，输入的树保证连通，无重边，无自环。</p>
<p>可能的训练路径有(1-2-4),(1-2-5),(1-3),(2-4),(2-5),(2-1-3),(3-1-2-4),(3-1-2-5)<br>(4-2-5),(4-2-1-3),(5-2-4),(5-2-1-3)<br>长度依次为3，3，1，2，2，2，4，4，4，4，4，4。和为37.</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>大意：在一棵树上，统计满足从任意一点到达一个叶节点的路径条数<br>树形DP啦，直接做的话各种分类码了半天没码对，如果想看可以去这里：<a href="http://hzwer.com/4888.html" target="_blank" rel="external">http://hzwer.com/4888.html</a><br>标程的思路很神：<br>考虑一条边e(u,v)对答案的贡献<br>一条边被计算的次数是这条边分开的两棵子树中左边的节点数乘右边的叶子数加上右边的节点数乘左边的叶子数。<br>遍历两次统计即可。</p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-29/senso.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>senso.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> v,next:int;w:int64 <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">6010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3010</span>] <span class="keyword">of</span> int;</div><div class="line">    lea,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3010</span>] <span class="keyword">of</span> int64;</div><div class="line">    n,m,sz,i,u,v,w:int;ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(u,v:int;w:int64)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);</div><div class="line">    g[sz].v:=v;g[sz].w:=w;</div><div class="line">    g[sz].next:=head[u];head[u]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(u,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,v:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    lea[u]:=<span class="number">0</span>;cnt[u]:=<span class="number">1</span>;</div><div class="line">    i:=head[u];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=g[i].v;</div><div class="line">        <span class="keyword">if</span> v&lt;&gt;p <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            dfs(v,u);</div><div class="line">            inc(cnt[u],cnt[v]);</div><div class="line">            inc(lea[u],lea[v]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> lea[u]=<span class="number">0</span> <span class="keyword">then</span> lea[u]:=<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(u,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,v:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[u];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=g[i].v;</div><div class="line">        <span class="keyword">if</span> v&lt;&gt;p <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(ans,g[i].w*(cnt[v]*(lea[<span class="number">1</span>]-lea[v])+</div><div class="line">                lea[v]*(cnt[<span class="number">1</span>]-cnt[v])));</div><div class="line">            dp(v,u);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'senso.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'senso.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(w,u,v);</div><div class="line">        add(u,v,w);add(v,u,w);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="comment">//for i:=1 to n do writeln(i,'&gt;',cnt[i],' ',lea[i]);</span></div><div class="line">    ans:=<span class="number">0</span>;dp(<span class="number">1</span>,<span class="number">0</span>);<span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;P2裸的折半枚举没有写&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cowids&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DP+回溯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;senso&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;树形DP&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-奶牛编号&quot;&gt;&lt;a href=&quot;#P1-奶牛编号&quot; class=&quot;headerlink&quot; title=&quot;P1 奶牛编号&quot;&gt;&lt;/a&gt;P1 奶牛编号&lt;/h1&gt;&lt;p&gt;作为一个神秘的电脑高手，Farmer John 用二进制数字标识他的奶牛。&lt;br&gt;然而，他有点迷信，标识奶牛用的二进制数字，必须只含有K位“1”&lt;br&gt;(1 &amp;lt;= K &amp;lt;= 10)。 当然，每个标识数字的首位必须为“1”。&lt;br&gt;FJ按递增的顺序，安排标识数字，开始是最小可行的标识数字&lt;br&gt;（由“1”组成的一个K位数）。&lt;br&gt;不幸的是，他没有记录下标识数字。请帮他计算，第N个标识数字&lt;br&gt;(1 &amp;lt;= N &amp;lt;= 10^7)。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="树形DP" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2DP/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-30-2</title>
    <link href="https://cothrax.github.io/2016/10/04/noip-2014-10-30-2/"/>
    <id>https://cothrax.github.io/2016/10/04/noip-2014-10-30-2/</id>
    <published>2016-10-04T14:35:03.000Z</published>
    <updated>2016-10-04T14:47:31.491Z</updated>
    
    <content type="html"><![CDATA[<p>两道几何果断跳过</p>
<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">nmtg</td>
<td style="text-align:center">计数+gcd</td>
</tr>
<tr>
<td style="text-align:center">sdtg</td>
<td style="text-align:center">结论(斐波)+LCA</td>
</tr>
</tbody>
</table>
<h1 id="P2-三角形"><a href="#P2-三角形" class="headerlink" title="P2 三角形"></a>P2 三角形</h1><p>给定一张 N*M 的网格,计算三个点都在网格上的三角形有多少个。三角形三点不能共线。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一行两个正整数 N,M。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行一个整数代表数量。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>1 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 10%的数据有 N,M &lt;= 10<br>对于 30%的数据有 N,M &lt;= 100<br>对于 100%的数据有 N,M &lt;= 1000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>下面的n,m指端点数<br>先算出取三个点的方案数即C(nm,3)<br>然后减去行、列、斜着的的共线数<br>关于斜着的：枚举边长i*j，g=gcd(i*j)-1就是(i,j)的线段上的整点数（除端点），g&gt;0的情况下，该线段的贡献为2g(n-i)(m-j)</p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-30-2/nmtg.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>nmtg.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;ll=int64;</div><div class="line"><span class="keyword">var</span>    n,m,i,j,k:int;ans:ll;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">(x:int64)</span>:</span>int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> x&lt;<span class="number">3</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    c:=x*(x-ll(<span class="number">1</span>))*(x-ll(<span class="number">2</span>));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> gcd:=a <span class="keyword">else</span> gcd:=gcd(b,a <span class="keyword">mod</span> b);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'nmtg.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'nmtg.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    inc(n);inc(m);</div><div class="line">    ans:=(c(n*m)-m*c(n)-n*c(m)) <span class="keyword">div</span> <span class="number">6</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            k:=gcd(i,j)+<span class="number">1</span>;</div><div class="line">            <span class="keyword">if</span> k&lt;=<span class="number">2</span> <span class="keyword">then</span> continue;</div><div class="line">            dec(ans,(n-i)*(m-j)*(k-<span class="number">2</span>)*<span class="number">2</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-忧桑三角形"><a href="#P3-忧桑三角形" class="headerlink" title="P3 忧桑三角形"></a>P3 忧桑三角形</h1><p>有一棵树,树上每个点都有点权,现在有以下两个操作:</p>
<ol>
<li>修改某个点的点权</li>
<li>查询点 u 和点 v 构成的简单路径上是否能选出三个点组成三角形<!--more-->
</li>
</ol>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数 N,Q,代表点数和询问数。第二行 N 个整数表示点权。下面 N-1<br>行每行两个整数 a,b 代表 a,b 之间有一条边。下面 Q 行每行 3 个整数 t,a,b:若 t=0,询问(a,b);否则将点 a 的权值修改为 b</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每个询问输出 Y 表示能构成三角形,输出 N 表示不能构成三角形</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 5<br>1 2 3 4 5<br>1 2<br>2 3<br>3 4<br>1 5<br>0 1 3<br>0 4 5<br>1 1 4<br>0 2 5<br>0 2 3</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>N<br>Y<br>Y<br>N</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于 30%的数据有 N,Q&lt;= 1000<br>对于 100%的数据有 N,Q&lt;= 10^5,点权范围在 32 位整数范围内</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><blockquote>
<p>点权范围在 32 位整数范围内</p>
</blockquote>
<p>也就是说，当a和b距离很远时一定能构成三角形<br>考虑构造不能构成三角形的一条链f[i-2]+f[i-1]=f[i]，1,1,2,3,5…，就是斐波那契，当i&gt;50时爆int，所以当dist(a,b)&gt;50时，输出y即可，否则暴力算</p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-30-2/sdtg.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>sdtg.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;ll=int64;</div><div class="line">    edge=<span class="keyword">record</span> v,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">20</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">52</span>] <span class="keyword">of</span> int;</div><div class="line">    head,dep,w:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    sz,n,m,lg,i,j,d,p,u,v:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(u,v:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].v:=v;</div><div class="line">    g[sz].next:=head[u];head[u]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(u,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> v,i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    par[u,<span class="number">0</span>]:=p;dep[u]:=dep[p]+<span class="number">1</span>;</div><div class="line">    i:=head[u];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=g[i].v;</div><div class="line">        <span class="keyword">if</span> v&lt;&gt;p <span class="keyword">then</span> dfs(v,u);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(u,v:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> dep[u]&lt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">    <span class="keyword">for</span> i:=lg <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dep[par[u,i]]&gt;=dep[v] <span class="keyword">then</span></div><div class="line">            u:=par[u,i];</div><div class="line">    <span class="keyword">if</span> u=v <span class="keyword">then</span> <span class="keyword">exit</span>(u);</div><div class="line">    <span class="keyword">for</span> i:=lg <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> par[u,i]&lt;&gt;par[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            u:=par[u,i];v:=par[v,i];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    lca:=par[u,<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=a[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span><span class="params">(u,v,p:int)</span>:</span>char;</div><div class="line"><span class="keyword">var</span> i,k:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    k:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> u&lt;&gt;p <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(k);a[k]:=w[u];u:=par[u,<span class="number">0</span>];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> v&lt;&gt;p <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(k);a[k]:=w[v];v:=par[v,<span class="number">0</span>];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    inc(k);a[k]:=w[p];</div><div class="line">    qsort(<span class="number">1</span>,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k-<span class="number">2</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> ll(a[i])+ll(a[i+<span class="number">1</span>])&gt;ll(a[i+<span class="number">2</span>]) <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="string">'Y'</span>);</div><div class="line">    calc:=<span class="string">'N'</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'sdtg.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'sdtg.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);lg:=floor(ln(n)/ln(<span class="number">2</span>));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(u,v);add(u,v);add(v,u);    </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> lg <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            par[i,j]:=par[par[i,j-<span class="number">1</span>],j-<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,u,v);</div><div class="line">        <span class="keyword">if</span> j=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            p:=lca(u,v);</div><div class="line">            d:=dep[u]+dep[v]-<span class="number">2</span>*dep[p];</div><div class="line">            <span class="keyword">if</span> d&gt;<span class="number">52</span> <span class="keyword">then</span> writeln(<span class="string">'Y'</span>)</div><div class="line">            <span class="keyword">else</span> writeln(calc(u,v,p));</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> w[u]:=v;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两道几何果断跳过&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;nmtg&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;计数+gcd&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;sdtg&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;结论(斐波)+LCA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P2-三角形&quot;&gt;&lt;a href=&quot;#P2-三角形&quot; class=&quot;headerlink&quot; title=&quot;P2 三角形&quot;&gt;&lt;/a&gt;P2 三角形&lt;/h1&gt;&lt;p&gt;给定一张 N*M 的网格,计算三个点都在网格上的三角形有多少个。三角形三点不能共线。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="数论" scheme="https://cothrax.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="组合数学" scheme="https://cothrax.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-31-1</title>
    <link href="https://cothrax.github.io/2016/10/04/noip-2014-10-31-1/"/>
    <id>https://cothrax.github.io/2016/10/04/noip-2014-10-31-1/</id>
    <published>2016-10-04T14:20:01.000Z</published>
    <updated>2016-10-05T11:00:48.069Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">and</td>
<td style="text-align:center">位运算+贪心</td>
</tr>
<tr>
<td style="text-align:center">elephant</td>
<td style="text-align:center">概率期望+DP</td>
</tr>
<tr>
<td style="text-align:center">move</td>
<td style="text-align:center">分层图最短路</td>
</tr>
<tr>
<td style="text-align:center">meteorite</td>
<td style="text-align:center">带权并查集</td>
</tr>
</tbody>
</table>
<h1 id="P1-“与”"><a href="#P1-“与”" class="headerlink" title="P1 “与”"></a>P1 “与”</h1><p>给你一个长度为n的序列A，请你求出一对Ai，Aj（<span>$1&le;i&lt;j&le;n$</span><!-- Has MathJax -->）使Ai“与”Aj最大。<br>Ps：“与”表示位运算and，在c++中表示为&amp;。</p>
<a id="more"></a>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为n。接下来n行，一行一个数字表示Ai。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出最大的Ai“与”Aj的结果。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3<br>8<br>10<br>2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>8</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>样例解释：<br>8 and 10 = 8<br>8 and 2 = 0<br>10 and 2 = 2<br>数据范围：<br>20%的数据保证n&lt;=5000<br>100%的数据保证 n&lt;=3*10^5，0&lt;=Ai&lt;=10^9</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>从高位到低位逐个考虑即可，如果第i位有≥2个数是1，就要取这一位</p>
<div><br><div class="copy"><br>    <br></div><br><div><br><figure class="highlight delphi"><figcaption><span>add.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,i,p,j,ans:int;</div><div class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">30</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> ((x <span class="keyword">shr</span> i) <span class="keyword">and</span> <span class="number">1</span>)=<span class="number">1</span> <span class="keyword">then</span> inc(cnt[i]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'and.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'and.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    ans:=<span class="number">0</span>;p:=<span class="number">31</span>;</div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> (ans <span class="keyword">and</span> a[i])=ans <span class="keyword">then</span> calc(a[i]);</div><div class="line">        <span class="comment">//for i:=0 to 31 do write(cnt[i]:3);writeln;</span></div><div class="line">        j:=-<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> i:=p <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> cnt[i]&gt;=<span class="number">2</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                ans:=ans <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> i);</div><div class="line">                j:=i-<span class="number">1</span>;break;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> j=-<span class="number">1</span> <span class="keyword">then</span> break;</div><div class="line">        p:=j;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-小象涂色"><a href="#P2-小象涂色" class="headerlink" title="P2 小象涂色"></a>P2 小象涂色</h1><p>小象喜欢为箱子涂色。小象现在有c种颜色，编号为0~c-1；还有n个箱子，编号为1~n，最开始每个箱子的颜色为1。小象涂色时喜欢遵循灵感：它将箱子按编号排成一排，每次涂色时，它随机选择[L，R]这个区间里的一些箱子（不选看做选0个），为之涂上随机一种颜色。若一个颜色为a的箱子被涂上b色，那么这个箱子的颜色会变成（a*b）mod c。请问在k次涂色后，所有箱子颜色的编号和期望为多少？</p>
<!--more-->
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为T，表示有T组测试数据。<br>对于每组数据，第一行为三个整数n,c,k。<br>接下来k行，每行两个整数Li，Ri，表示第i个操作的L和R。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每组测试数据，输出所有箱子颜色编号和的期望值，结果保留9位小数。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3<br>3 2 2<br>2 2<br>1 3<br>1 3 1<br>1 1<br>5 2 2<br>3 4<br>2 4</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2.062500000<br>1.000000000<br>3.875000000</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>数据范围：<br>40%的数据1 &lt;= T &lt;= 5，1 &lt;= n, k &lt;= 15，2 &lt;= c &lt;= 20<br>100%的数据满足1 &lt;= T &lt;= 10，1 &lt;= n, k &lt;= 50，2 &lt;= c &lt;= 100，1 &lt;= Li &lt;= Ri &lt;= n</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>看到概率期望就头疼。。。<br>求期望的话，可以先求概率<br>一次染色中，一个箱子被染色的概率为1/2，染成颜色i的概率为1/c<br>记f[i,j]为一个箱子染i次，染成颜色j的概率<br>DP：<br>$f[i+1,j]+=f[i,j]/2$<br>$f[i+1,(j*p)\%c]+=f[i,j]/2/c$<br>初始：$f[0,1]=1$<br>答案：$\sum_{i=1}^{n}\sum_{j=0}^{c-1}f[a[i],j]*j$<br>其中a[i]是箱子i被染色的次数，可以差分求，也可以暴力</p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-31-1/elephant.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>elephant.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> eps=<span class="number">0.00000000001</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">55</span>,<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> double;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">55</span>] <span class="keyword">of</span> int;</div><div class="line">    t,n,m,k,i,j,p,l,r:int;ans,cur:double;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">incd</span><span class="params">(<span class="keyword">var</span> a:double;b:double)</span>;</span></div><div class="line"><span class="keyword">begin</span> a:=a+b <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'elephant.in'</span>);reset(input);</div><div class="line">        assign(output,<span class="string">'elephant.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">read</span>(n,m,k);</div><div class="line">        fillchar(a,sizeof(a),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(l,r);</div><div class="line">            inc(a[l]);dec(a[r+<span class="number">1</span>]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(a[i],a[i-<span class="number">1</span>]);</div><div class="line">        <span class="comment">//dp</span></div><div class="line">        fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">        f[<span class="number">0</span>,<span class="number">1</span>]:=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> k <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">                <span class="keyword">if</span> f[i,j]&gt;eps <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    incd(f[i+<span class="number">1</span>,j],f[i,j]/<span class="number">2</span>);</div><div class="line">                    <span class="keyword">for</span> p:=<span class="number">0</span> <span class="keyword">to</span> m-<span class="number">1</span> <span class="keyword">do</span> </div><div class="line">                        incd(f[i+<span class="number">1</span>,(j*p) <span class="keyword">mod</span> m],f[i,j]/<span class="number">2</span>/m);</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">        <span class="comment">//calc</span></div><div class="line">        ans:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            cur:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">                incd(cur,f[a[i],j]*j);</div><div class="line">            incd(ans,cur);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        writeln(ans:<span class="number">0</span>:<span class="number">9</span>);</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">until</span> t=<span class="number">0</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-行动！行动！"><a href="#P3-行动！行动！" class="headerlink" title="P3 行动！行动！"></a>P3 行动！行动！</h1><p>大CX国的大兵Jack接到一项任务：敌方占领了n座城市（编号0~n-1），有些城市之间有双向道路相连。Jack需要空降在一个城市S，并徒步沿那些道路移动到T城市。虽然Jack每从一个城市到另一个城市都会受伤流血，但大CX国毕竟有着“过硬”的军事实力，它不仅已经算出Jack在每条道路上会损失的血量，还给Jack提供了k个“简易急救包”，一个包可以让Jack在一条路上的流血量为0。Jack想知道自己最少会流多少血，不过他毕竟是无脑的大兵，需要你的帮助。<br><!--more--></p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行有三个整数n,m,k，分别表示城市数，道路数和急救包个数。<br>第二行有两个整数，S,T。分别表示Jack空降到的城市编号和最终要到的城市。<br>接下来有m行，每行三个整数a,b,c，表示城市a与城市b之间有一条双向道路。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>Jack最少要流的血量。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 6 1<br>0 3<br>3 4 5<br>0 1 5<br>0 2 100<br>1 2 5<br>2 4 5<br>2 4 3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>8</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据,2&lt;=n&lt;=50,1&lt;=m&lt;=300,k=0;<br>对于50%的数据,2&lt;=n&lt;=600,1&lt;=m&lt;=6000,0&lt;=k&lt;=1;<br>对于100%的数据,2&lt;=n&lt;=10000,1&lt;=m&lt;=50000,0&lt;=k&lt;=10.</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>分层图最短路，建图后heap+dijkstra</p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-31-1/move.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>move.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> v,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,l,d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110010</span>] <span class="keyword">of</span> int;</div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,k,sz,hs,u,v,w,s,t,i,j:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(u,v,w:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].v:=v;g[sz].w:=w;</div><div class="line">    g[sz].next:=head[u];head[u]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(i,j:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l[h[i,<span class="number">1</span>]]:=j;l[h[j,<span class="number">1</span>]]:=i;</div><div class="line">    tmp:=h[i,<span class="number">0</span>];h[i,<span class="number">0</span>]:=h[j,<span class="number">0</span>];h[j,<span class="number">0</span>]:=tmp;</div><div class="line">    tmp:=h[i,<span class="number">1</span>];h[i,<span class="number">1</span>]:=h[j,<span class="number">1</span>];h[j,<span class="number">1</span>]:=tmp;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">hfy</span><span class="params">(i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> l,r,s:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=i <span class="keyword">shl</span> <span class="number">1</span>;r:=l <span class="keyword">or</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=hs) <span class="keyword">and</span> (h[l,<span class="number">0</span>]&lt;h[i,<span class="number">0</span>]) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=i;</div><div class="line">    <span class="keyword">if</span> (r&lt;=hs) <span class="keyword">and</span> (h[r,<span class="number">0</span>]&lt;h[s,<span class="number">0</span>]) <span class="keyword">then</span> s:=r;</div><div class="line">    <span class="keyword">if</span> i&lt;&gt;s <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        swap(i,s);hfy(s);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ext</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    swap(<span class="number">1</span>,hs);dec(hs);hfy(<span class="number">1</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">red</span><span class="params">(i,k:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    h[i,<span class="number">0</span>]:=k;</div><div class="line">    <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> (h[i,<span class="number">0</span>]&lt;h[i <span class="keyword">shr</span> <span class="number">1</span>,<span class="number">0</span>]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        swap(i,i <span class="keyword">shr</span> <span class="number">1</span>);i:=i <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ins</span><span class="params">(x,k:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(hs);l[x]:=hs;</div><div class="line">    h[hs,<span class="number">1</span>]:=x;h[hs,<span class="number">0</span>]:=inf;red(hs,k);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dij</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> i,u,v:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    hs:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n*(k+<span class="number">1</span>) <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> i=s <span class="keyword">then</span> ins(i,<span class="number">0</span>) <span class="keyword">else</span> ins(i,inf);</div><div class="line">    <span class="keyword">while</span> hs&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=h[<span class="number">1</span>,<span class="number">1</span>];d[u]:=h[<span class="number">1</span>,<span class="number">0</span>];ext;</div><div class="line">        <span class="comment">//writeln('&gt;',u,' ',d[u]);</span></div><div class="line">        i:=head[u];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            v:=g[i].v;</div><div class="line">            <span class="keyword">if</span> h[l[v],<span class="number">0</span>]&gt;d[u]+g[i].w <span class="keyword">then</span> </div><div class="line">                red(l[v],d[u]+g[i].w);</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'move.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'move.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,k,s,t);inc(s);inc(t);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(u,v,w);inc(u);inc(v);</div><div class="line">        add(u,v,w);add(v,u,w);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            add(u+j*n,v+j*n,w);add(u+(j-<span class="number">1</span>)*n,v+j*n,<span class="number">0</span>);</div><div class="line">            add(v+j*n,u+j*n,w);add(v+(j-<span class="number">1</span>)*n,u+j*n,<span class="number">0</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dij();</div><div class="line">    <span class="keyword">write</span>(d[t+k*n]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>


<h1 id="P4-Hzwer的陨石"><a href="#P4-Hzwer的陨石" class="headerlink" title="P4 Hzwer的陨石"></a>P4 Hzwer的陨石</h1><p>经过不懈的努力，Hzwer召唤了很多陨石。已知Hzwer的地图上共有n个区域，且一开始的时候第i个陨石掉在了第i个区域。有电力喷射背包的ndsf很自豪，他认为搬陨石很容易，所以他将一些区域的陨石全搬到了另外一些区域。<br>在ndsf愉快的搬运过程中，Hzwer想知道一些陨石的信息。对于Hzwer询问的每个陨石i，你必须告诉他，在当前这个时候，i号陨石在所在区域x、x区域共有的陨石数y、以及i号陨石被搬运的次数z。<br><!--more--></p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入的第一行是一个正整数T。表示有多少组输入数据。<br>接下来共有T组数据，对于每组数据，第一行包含两个整数：N和Q。<br>接下来Q行，每行表示一次搬运或一次询问，格式如下：<br>T A B：表示搬运，即将所有在A号球所在地区的陨石都搬到B号球所在地区去。<br>Q A：悟空想知道Ａ号陨石的x，y，z。</p>
<h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于第ｉ组数据，第一行输出“Case i：”接下来输出每一个询问操作的x，y，z，每一个询问操作的答案占一行。每组数据之间没有空行。</p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>3 3<br>T 1 2<br>T 3 2<br>Q 2<br>3 4<br>T 1 2<br>Q 1<br>T 1 3<br>Q 1</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>Case 1：<br>2 3 0<br>Case 2：<br>2 2 1<br>3 3 2</p>
</blockquote>
<h2 id="提示​-3"><a href="#提示​-3" class="headerlink" title="提示​"></a>提示​</h2><p>数据范围：<br>20%的数据保证：0≤T≤20，2＜N＜＝100，2＜Q＜＝100。<br>100%的数据保证：0≤T≤100，2＜N＜＝10000，2＜Q＜＝10000。<br>对于所有数据保证搬运操作中AB在Ｎ的范围内且所在区域不相同。</p>
<h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>带权并查集，用向量关系表示节点与父节点的移动次数差，区域编号就是根的编号，至于个数随便加加就好了</p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-31-1/meteorite.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>meteorite.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    par,w,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    t,n,m,i,j,x,y:int;c:char;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        find:=find(par[x]);</div><div class="line">        inc(w[x],w[par[x]]);</div><div class="line">        par[x]:=find;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span> <span class="comment">//x-&gt;y</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    x:=find(x);y:=find(y);</div><div class="line">    par[x]:=y;inc(s[y],s[x]);</div><div class="line">    inc(w[x]);w[x]:=w[y]-w[x];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">query</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    y:=find(x);writeln(y,<span class="string">' '</span>,s[y],<span class="string">' '</span>,w[y]-w[x]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'meteorite.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'meteorite.out'</span>);rewrite(output);</div><div class="line">    readln(t);</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        readln(n,m);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span> </div><div class="line">            par[i]:=i;w[i]:=<span class="number">0</span>;s[i]:=<span class="number">1</span></div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        writeln(<span class="string">'Case '</span>,j,<span class="string">': '</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(c);</div><div class="line">            <span class="keyword">case</span> c <span class="keyword">of</span> </div><div class="line">                <span class="string">'T'</span>:<span class="keyword">begin</span> readln(x,y);union(x,y) <span class="keyword">end</span>;</div><div class="line">                <span class="string">'Q'</span>:<span class="keyword">begin</span> readln(x);query(x) <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;and&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;位运算+贪心&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;elephant&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;概率期望+DP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;move&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;分层图最短路&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;meteorite&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;带权并查集&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-“与”&quot;&gt;&lt;a href=&quot;#P1-“与”&quot; class=&quot;headerlink&quot; title=&quot;P1 “与”&quot;&gt;&lt;/a&gt;P1 “与”&lt;/h1&gt;&lt;p&gt;给你一个长度为n的序列A，请你求出一对Ai，Aj（&lt;span&gt;$1&amp;le;i&amp;lt;j&amp;le;n$&lt;/span&gt;&lt;!-- Has MathJax --&gt;）使Ai“与”Aj最大。&lt;br&gt;Ps：“与”表示位运算and，在c++中表示为&amp;amp;。&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="并查集" scheme="https://cothrax.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="最短路" scheme="https://cothrax.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="概率期望" scheme="https://cothrax.github.io/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="位运算" scheme="https://cothrax.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="分层图" scheme="https://cothrax.github.io/tags/%E5%88%86%E5%B1%82%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 graph</title>
    <link href="https://cothrax.github.io/2016/10/04/noip-2014-10-30-1-graph/"/>
    <id>https://cothrax.github.io/2016/10/04/noip-2014-10-30-1-graph/</id>
    <published>2016-10-04T14:00:22.000Z</published>
    <updated>2016-10-04T15:05:24.140Z</updated>
    
    <content type="html"><![CDATA[<p>这份模拟赛的后2题都在前面的比赛中出现过了。</p>
<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>给出 N 个点，M 条边的有向图，对于每个点 v，求 A(v) 表示从点 v 出发，能到达的编号最大的点。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第 1 行，2 个整数 N,M。 接下来 M 行，每行 2 个整数 Ui,Vi，表示边 ⟨Ui,Vi⟩。点用 1,2,…,N 编号。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>N 个整数 A(1),A(2),…,A(N)。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 3<br>1 2<br>2 4<br>4 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4 4 3 4</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 60% 的数据，1 ≤ N,K ≤ 10^3<br>对于 100% 的数据，1 ≤ N,M ≤ 10^5。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>标程是强连通分量+DAG+DP<br>其实乱搞就可以了，参见noip提高的最优贸易那题<br>在转置图上，类似spfa进行松弛即可：<br>对于转置边e(v,u)，如果A(v)&gt;A(u)，那么更新A(u)，且u入队</p>
<div><br><div class="copy"><br>    <a href="/2016/10/04/noip-2014-10-30-1-graph/graph.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>graph.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> u,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,w,q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    inq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,m,i,v,u,sz,h,t:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(v,u:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].u:=u;</div><div class="line">    g[sz].next:=head[v];head[v]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'graph.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'graph.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(v,u);add(u,v);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    h:=<span class="number">1</span>;t:=n+<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        w[i]:=i;q[i]:=n-i+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(inq,sizeof(inq),true);</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inq[v]:=false;<span class="comment">//writeln(v);</span></div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">100010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].u;</div><div class="line">            <span class="keyword">if</span> w[u]&lt;w[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                w[u]:=w[v];<span class="comment">//writeln(v,'-&gt;',u);</span></div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> inq[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    q[t]:=u;inq[u]:=true;</div><div class="line">                    inc(t);<span class="keyword">if</span> t&gt;<span class="number">100010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">write</span>(w[i],<span class="string">' '</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这份模拟赛的后2题都在前面的比赛中出现过了。&lt;/p&gt;
&lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;给出 N 个点，M 条边的有向图，对于每个点 v，求 A(v) 表示从点 v 出发，能到达的编号最大的点。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2016十连测 Day 2</title>
    <link href="https://cothrax.github.io/2016/10/03/lydsy-noip-2016-test2/"/>
    <id>https://cothrax.github.io/2016/10/03/lydsy-noip-2016-test2/</id>
    <published>2016-10-03T01:42:00.000Z</published>
    <updated>2016-10-04T03:51:35.477Z</updated>
    
    <content type="html"><![CDATA[<p>160滚粗，T1很db地写了hash，T2没想到二分而暴力询问，inf开的不够大又丢了20分，T3完全不会，暴力20分</p>
<h1 id="T1-Divisors"><a href="#T1-Divisors" class="headerlink" title="T1 Divisors"></a>T1 Divisors</h1><p>大意：给定m个不同的正整数 <span>$a_1,a_2,...,a_m$</span><!-- Has MathJax -->，对$[0,m]$内每一个k计算：在区间$[1,n]$里有多少正整数是a中恰好k个数的约数。<br>$m≤200;n,a_i≤10^9$ 。<br><a id="more"></a></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>计算每个$a_i$在$[1,n]$内的约数，然后去重计数即可。我sb的用了hash，其实qsort+for就好。</p>
<div><br><div class="copy"><br>    <a href="/2016/10/03/lydsy-noip-2016-test2/div.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>div.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> md=<span class="number">1001003</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    a,ans:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">210</span>] <span class="keyword">of</span> int;</div><div class="line">    h,next,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000000</span>] <span class="keyword">of</span> int;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..md] <span class="keyword">of</span> int;</div><div class="line">    sz,n,m,i,tot:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    j:=x <span class="keyword">mod</span> md;</div><div class="line">    <span class="keyword">if</span> head[j]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(sz);head[j]:=sz;</div><div class="line">        h[sz]:=x;cnt[sz]:=<span class="number">1</span>;</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    i:=head[j];</div><div class="line">    <span class="keyword">while</span> next[i]&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> h[i]=x <span class="keyword">then</span> <span class="keyword">begin</span> inc(cnt[i]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> h[i]=x <span class="keyword">then</span> <span class="keyword">begin</span> inc(cnt[i]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    inc(sz);next[i]:=sz;</div><div class="line">    h[sz]:=x;cnt[sz]:=<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> trunc(sqrt(x)) <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> x <span class="keyword">mod</span> i=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            insert(i);</div><div class="line">            <span class="keyword">if</span> i&lt;&gt;x <span class="keyword">div</span> i <span class="keyword">then</span> insert(x <span class="keyword">div</span> i);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//assign(input,'div.in');reset(input);</span></div><div class="line">    <span class="comment">//assign(output,'div.out');rewrite(output);</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> calc(a[i]);</div><div class="line">    tot:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> sz <span class="keyword">do</span> </div><div class="line">        <span class="keyword">if</span> h[i]&lt;=n <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(tot);</div><div class="line">            <span class="keyword">if</span> cnt[i]&lt;=m <span class="keyword">then</span> inc(ans[cnt[i]]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    writeln(n-tot);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(ans[i]);</div><div class="line">    <span class="comment">//close(input);close(output);</span></div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="T2-Market"><a href="#T2-Market" class="headerlink" title="T2 Market"></a>T2 Market</h1><p>给定n个物品，每个物品可以不选或选一个，第i个物品的价格为ci,价值为vi,出现时间为ti。有m个询问，每次询问在出现时间不超过Ti的所有物品中选若干件,总花费不超过Mi的情况下,被选择物品的价值和的最大值是多少。<br>$n≤300,m≤100000;c_i,M_i≤10^9,v_i≤300$</p>
<!--more-->
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>先将物品qsort升序<br>首先想到01背包，但c和M太大无法承受。<br>考虑到vi很小：记f[i,j]为1..i件物品选出j的价值和的最小花费<br>$O(N^3)$，空间刚好足够<br>对于一个询问的答案就是：<br>算出在Ti时间内所能购买的物品范围[1,x]<br>答案就是满足$f[x,j]≤Mi$的最大j<br>暴力处理询问的话依然会TLE<br>于是二分：<br>记g[x,j]为f[x,j…]的最小值，这样g[x]就是单调增的<br>答案就是满足$g[x,j]≤Mi$的最大j</p>
<div><br><div class="copy"><br>    <a href="/2016/10/03/lydsy-noip-2016-test2/market.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>market.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000010</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    v,t,c,sum:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">90010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=t[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> t[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> t[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(t[i],t[j]);swap(v[i],v[j]);swap(c[i],c[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    sum[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> sum[i]:=sum[i-<span class="number">1</span>]+v[i];</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> sum[i] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            f[i,j]:=f[i-<span class="number">1</span>,j];</div><div class="line">            <span class="keyword">if</span> j&gt;=v[i] <span class="keyword">then</span> </div><div class="line">                f[i,j]:=min(f[i,j],f[i-<span class="number">1</span>,j-v[i]]+c[i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=sum[i]-<span class="number">1</span> <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">            f[i,j]:=min(f[i,j],f[i,j+<span class="number">1</span>]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span><span class="params">()</span>:</span>int;</div><div class="line"><span class="keyword">var</span> l,r,mid,x,t0,m0:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(t0,m0);</div><div class="line">    l:=<span class="number">1</span>;r:=n;x:=-<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> t[mid]&lt;=t0 <span class="keyword">then</span> <span class="keyword">begin</span> x:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> x=-<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    l:=<span class="number">0</span>;r:=sum[x];calc:=<span class="number">0</span>;</div><div class="line">    <span class="comment">//max_v&#123;f[x,v]&lt;=m0&#125;</span></div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> f[x,mid]&lt;=m0 <span class="keyword">then</span> <span class="keyword">begin</span> calc:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//assign(input,'market.in');reset(input);</span></div><div class="line">    <span class="comment">//assign(output,'market.ans');rewrite(output);</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(c[i],v[i],t[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);dp();</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(calc());</div><div class="line">    <span class="comment">//close(input);close(output);</span></div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="T3-Dash-Speed"><a href="#T3-Dash-Speed" class="headerlink" title="T3 Dash Speed"></a>T3 Dash Speed</h1><p>给定一棵有n个点的树,每条边有承受区间[li,ri]。m次询问,每次给定一个值speed,求一条最长的链,使得上面所有边的承受区间都包括speed。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>树剖+线段树+并查集+分治，std都破100行了，如果我写不是要300+吗<br>来欣赏一下std吧</p>
<div><br><div class="copy"><br>    <a href="/2016/10/03/lydsy-noip-2016-test2/speed.cpp" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight cpp"><figcaption><span>speed.cpp</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">70010</span>,M=N*<span class="number">20</span>;</div><div class="line"><span class="keyword">int</span> n,m,i,g[N],v[N&lt;&lt;<span class="number">1</span>],nxt[N&lt;&lt;<span class="number">1</span>],ed,cur,ans[N];</div><div class="line"><span class="keyword">int</span> size[N],f[N],d[N],son[N],top[N];</div><div class="line"><span class="keyword">int</span> fa[N],dep[N],A[N],B[N];</div><div class="line"><span class="keyword">int</span> G[<span class="number">262150</span>],V[M],W[M],NXT[M],ED;</div><div class="line"><span class="keyword">struct</span> E&#123;<span class="keyword">int</span> t,x,y;E()&#123;&#125;E(<span class="keyword">int</span> <span class="keyword">_t</span>,<span class="keyword">int</span> <span class="number">_</span>x,<span class="keyword">int</span> <span class="number">_</span>y)&#123;t=<span class="keyword">_t</span>,x=<span class="number">_</span>x,y=<span class="number">_</span>y;&#125;&#125;q[N&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;v[++ed]=y;nxt[ed]=g[x];g[x]=ed;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">    size[x]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=g[x];i;i=nxt[i])<span class="keyword">if</span>(v[i]!=f[x])&#123;</div><div class="line">        f[v[i]]=x,d[v[i]]=d[x]+<span class="number">1</span>;</div><div class="line">        dfs(v[i]),size[x]+=size[v[i]];</div><div class="line">        <span class="keyword">if</span>(size[v[i]]&gt;size[son[x]])son[x]=v[i];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    top[x]=y;</div><div class="line">    <span class="keyword">if</span>(son[x])dfs2(son[x],y);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=g[x];i;i=nxt[i])<span class="keyword">if</span>(v[i]!=son[x]&amp;&amp;v[i]!=f[x])dfs2(v[i],v[i]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(;top[x]!=top[y];x=f[top[x]])<span class="keyword">if</span>(d[top[x]]&lt;d[top[y]])swap(x,y);</div><div class="line">    <span class="keyword">return</span> d[x]&lt;d[y]?x:y;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">dis</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> d[x]+d[y]<span class="number">-2</span>*d[lca(x,y)];&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> fa[x]==x?x:F(fa[x]);&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span>&amp;ret)</span></span>&#123;</div><div class="line">    x=F(x),y=F(y);</div><div class="line">    <span class="keyword">int</span> u,v,t=<span class="number">-1</span>,tmp;</div><div class="line">    tmp=dis(A[x],B[x]);</div><div class="line">    <span class="keyword">if</span>(tmp&gt;t)t=tmp,u=A[x],v=B[x];</div><div class="line">    tmp=dis(A[x],A[y]);</div><div class="line">    <span class="keyword">if</span>(tmp&gt;t)t=tmp,u=A[x],v=A[y];</div><div class="line">    tmp=dis(A[x],B[y]);</div><div class="line">    <span class="keyword">if</span>(tmp&gt;t)t=tmp,u=A[x],v=B[y];</div><div class="line">    tmp=dis(B[x],A[y]);</div><div class="line">    <span class="keyword">if</span>(tmp&gt;t)t=tmp,u=B[x],v=A[y];</div><div class="line">    tmp=dis(B[x],B[y]);</div><div class="line">    <span class="keyword">if</span>(tmp&gt;t)t=tmp,u=B[x],v=B[y];</div><div class="line">    tmp=dis(A[y],B[y]);</div><div class="line">    <span class="keyword">if</span>(tmp&gt;t)t=tmp,u=A[y],v=B[y];</div><div class="line">    <span class="keyword">if</span>(ret&lt;t)ret=t;</div><div class="line">    <span class="keyword">if</span>(dep[x]==dep[y])&#123;</div><div class="line">        dep[x]++;</div><div class="line">        q[++cur]=E(<span class="number">0</span>,x,<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</div><div class="line">    q[++cur]=E(<span class="number">1</span>,y,<span class="number">0</span>);</div><div class="line">    q[++cur]=E(<span class="number">2</span>,x,A[x]);</div><div class="line">    q[++cur]=E(<span class="number">3</span>,x,B[x]);</div><div class="line">    fa[y]=x,A[x]=u,B[x]=v;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">retrace</span><span class="params">(<span class="keyword">int</span> t)</span></span>&#123;</div><div class="line">    <span class="keyword">while</span>(cur&gt;t)&#123;</div><div class="line">        <span class="keyword">if</span>(!q[cur].t)dep[q[cur].x]--;</div><div class="line">        <span class="keyword">if</span>(q[cur].t==<span class="number">1</span>)fa[q[cur].x]=q[cur].x;</div><div class="line">        <span class="keyword">if</span>(q[cur].t==<span class="number">2</span>)A[q[cur].x]=q[cur].y;</div><div class="line">        <span class="keyword">if</span>(q[cur].t==<span class="number">3</span>)B[q[cur].x]=q[cur].y;</div><div class="line">        cur--;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c,<span class="keyword">int</span> d,<span class="keyword">int</span> p,<span class="keyword">int</span> q)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(c&lt;=a&amp;&amp;b&lt;=d)&#123;</div><div class="line">        V[++ED]=p;</div><div class="line">        W[ED]=q;</div><div class="line">        NXT[ED]=G[x];</div><div class="line">        G[x]=ED;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> mid=(a+b)&gt;&gt;<span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span>(c&lt;=mid)ins(x&lt;&lt;<span class="number">1</span>,a,mid,c,d,p,q);</div><div class="line">    <span class="keyword">if</span>(d&gt;mid)ins(x&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,b,c,d,p,q);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> ret)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> pos=cur;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=G[x];i;i=NXT[i])merge(V[i],W[i],ret);</div><div class="line">    <span class="keyword">if</span>(a==b)&#123;</div><div class="line">        ans[a]=ret;</div><div class="line">        retrace(pos);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> mid=(a+b)&gt;&gt;<span class="number">1</span>;</div><div class="line">    solve(x&lt;&lt;<span class="number">1</span>,a,mid,ret);</div><div class="line">    solve(x&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,b,ret);</div><div class="line">    retrace(pos);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(<span class="string">"speed.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);freopen(<span class="string">"speed.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)&#123;</div><div class="line">        <span class="keyword">int</span> x,y,l,r;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;x,&amp;y,&amp;l,&amp;r);</div><div class="line">        add(x,y),add(y,x);</div><div class="line">        ins(<span class="number">1</span>,<span class="number">1</span>,n,l,r,x,y);</div><div class="line">    &#125;</div><div class="line">    dfs(<span class="number">1</span>);dfs2(<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=A[i]=B[i]=i;</div><div class="line">    solve(<span class="number">1</span>,<span class="number">1</span>,n,<span class="number">0</span>);</div><div class="line">    <span class="keyword">while</span>(m--)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i),<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</div><div class="line">    fclose(<span class="built_in">stdin</span>);fclose(<span class="built_in">stdout</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;160滚粗，T1很db地写了hash，T2没想到二分而暴力询问，inf开的不够大又丢了20分，T3完全不会，暴力20分&lt;/p&gt;
&lt;h1 id=&quot;T1-Divisors&quot;&gt;&lt;a href=&quot;#T1-Divisors&quot; class=&quot;headerlink&quot; title=&quot;T1 Divisors&quot;&gt;&lt;/a&gt;T1 Divisors&lt;/h1&gt;&lt;p&gt;大意：给定m个不同的正整数 &lt;span&gt;$a_1,a_2,...,a_m$&lt;/span&gt;&lt;!-- Has MathJax --&gt;，对$[0,m]$内每一个k计算：在区间$[1,n]$里有多少正整数是a中恰好k个数的约数。&lt;br&gt;$m≤200;n,a_i≤10^9$ 。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="并查集" scheme="https://cothrax.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="数论" scheme="https://cothrax.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="Hash" scheme="https://cothrax.github.io/tags/Hash/"/>
    
      <category term="线段树" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="树链剖分" scheme="https://cothrax.github.io/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
      <category term="分治" scheme="https://cothrax.github.io/tags/%E5%88%86%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2016十连测 Day 1</title>
    <link href="https://cothrax.github.io/2016/10/02/lydsy-noip-2016-test1/"/>
    <id>https://cothrax.github.io/2016/10/02/lydsy-noip-2016-test1/</id>
    <published>2016-10-02T11:22:24.000Z</published>
    <updated>2016-10-02T12:21:19.635Z</updated>
    
    <content type="html"><![CDATA[<p>没有人通知我提交的ftp地址，然后测试时在没有上数据的oj上交了n次囧</p>
<h1 id="P1-String-Master"><a href="#P1-String-Master" class="headerlink" title="P1 String Master"></a>P1 String Master</h1><p>大意：给定两个长度n的字符串，允许修改k次，求它们的最长公共子串（<strong>连续子串</strong>）。<br>n≤300,0≤k≤n。</p>
<a id="more"></a>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>修改一定是贪心改掉失配的字符<br>记f[i,j,k]为a[1..i]和b[1..j]修改k次后的以a[i]和b[j]结尾的最长子串的长度。<br>不修改的部分：</p>
<ol>
<li>a[i]=a[j]时，f[i,j,0]=f[i-1,j-1,0]+1</li>
<li>a[i]≠a[j]时，f[i,j,0]=0</li>
</ol>
<p>考虑修改：</p>
<ol>
<li>a[i]=a[j]时，f[i,j,k]=f[i-1,j-1,k]+1</li>
<li>a[i]≠a[j]时，f[i,j,k]=f[i-1,j-1,k-1]+1</li>
</ol>
<p>答案在转移过程中统计</p>
<div><br><div class="copy"><br>    <a href="/2016/10/02/lydsy-noip-2016-test1/master.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>master.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,b:ansistring;</div><div class="line">    n,m,i,j,k,p,c,ans:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//assign(input,'master.in');reset(input);</span></div><div class="line">    <span class="comment">//assign(output,'master.out');rewrite(output);</span></div><div class="line">    readln(n,m);readln(a);readln(b);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> a[i]=b[j] <span class="keyword">then</span> f[<span class="number">0</span>,i,j]:=f[<span class="number">0</span>,i-<span class="number">1</span>,j-<span class="number">1</span>]+<span class="number">1</span></div><div class="line">            <span class="keyword">else</span> f[<span class="number">0</span>,i,j]:=<span class="number">0</span>;</div><div class="line">            ans:=max(ans,f[<span class="number">0</span>,i,j]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        c:=k <span class="keyword">and</span> <span class="number">1</span>;p:=c xor <span class="number">1</span>;</div><div class="line">        fillchar(f[c],sizeof(f[c]),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                f[c,i,j]:=f[p,i-<span class="number">1</span>,j-<span class="number">1</span>]+<span class="number">1</span>;</div><div class="line">                <span class="keyword">if</span> a[i]=b[j] <span class="keyword">then</span> </div><div class="line">                    f[c,i,j]:=max(f[c,i,j],f[c,i-<span class="number">1</span>,j-<span class="number">1</span>]+<span class="number">1</span>);</div><div class="line">                ans:=max(ans,f[c,i,j]);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    <span class="comment">//close(input);close(output);</span></div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-Tourist-Attractions"><a href="#P2-Tourist-Attractions" class="headerlink" title="P2 Tourist Attractions"></a>P2 Tourist Attractions</h1><p>大意：给定n个节点的无向图的邻接矩阵，统计经过4个点的简单路径的数量。<br>n≤1500<br><!--more--></p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>先统计经过三条边的路径，再减掉三元环的数量<br>至于前面那个，我的递推方法比较sb：<br>f[v,i]表示v为起点经过i个点的路径数</p>
<ol>
<li>f[v,1]=2</li>
<li>f[v,2]=度数</li>
<li>f[v,k]+=f[u,k-1]-f[v,k-2]+1</li>
</ol>
<p>标程是枚举边，统计顶点入度乘积<br>至于三元环：记与v有直接连边的点构成的集合为s[v]<br>那么，对于边e(v,u)，所构成的三元环数量即$card(s[v]∩s[u])$<br>这个可以用bitset，悲剧的pascal只好手写，没有涉及位移操作，所以还算好写。</p>
<div><br><div class="copy"><br>    <a href="/2016/10/02/lydsy-noip-2016-test1/tour.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>tour.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2250010</span>] <span class="keyword">of</span> edge;</div><div class="line">    mat:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1510</span>,<span class="number">0</span>..<span class="number">1510</span>] <span class="keyword">of</span> char;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1510</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1510</span>,<span class="number">0</span>..<span class="number">4</span>] <span class="keyword">of</span> int64;</div><div class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span> <span class="keyword">shl</span> <span class="number">20</span>] <span class="keyword">of</span> int;</div><div class="line">    b:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1510</span>,<span class="number">0</span>..<span class="number">80</span>] <span class="keyword">of</span> int;</div><div class="line">    n,sz,i,j,v,u:int;ans:int64;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].t:=t;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">tri</span><span class="params">()</span>:</span>int64;</div><div class="line"><span class="keyword">var</span> i,j,k,p,t,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    t:=<span class="number">20</span>;p:=floor((n-<span class="number">1</span>)/t)+<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">shl</span> t <span class="keyword">do</span></div><div class="line">        cnt[i]:=cnt[i <span class="keyword">and</span> (i-<span class="number">1</span>)]+<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> p-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> t-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">                <span class="keyword">if</span> mat[i,j*t+k+<span class="number">1</span>]=<span class="string">'1'</span> <span class="keyword">then</span></div><div class="line">                    b[i,j]:=b[i,j] <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> k);</div><div class="line">    tri:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> mat[i,j]=<span class="string">'1'</span> <span class="keyword">then</span></div><div class="line">                <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> p-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                    x:=b[i,k] <span class="keyword">and</span> b[j,k];</div><div class="line">                    inc(tri,int64(cnt[x]));    </div><div class="line">                <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'tour.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'tour.out'</span>);rewrite(output);</div><div class="line">    readln(n);sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> f[i,<span class="number">1</span>]:=<span class="number">2</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(mat[i,j]);</div><div class="line">            <span class="keyword">if</span> mat[i,j]=<span class="string">'1'</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                add(i,j);inc(f[i,<span class="number">2</span>]);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        readln;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">3</span> <span class="keyword">to</span> <span class="number">4</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> v:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            i:=head[v];</div><div class="line">            <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                u:=g[i].t;</div><div class="line">                inc(f[v,j],f[u,j-<span class="number">1</span>]-f[v,j-<span class="number">2</span>]+<span class="number">1</span>);</div><div class="line">                i:=g[i].next;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(ans,f[i,<span class="number">4</span>]);</div><div class="line">    <span class="keyword">write</span>(ans-tri());</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-Walk"><a href="#P3-Walk" class="headerlink" title="P3 Walk"></a>P3 Walk</h1><p>大意：给定一张有n个点的有向图，原来就有m条边，每个点i有一个权值v[i]，如果$v[i]\ and\ v[j]=v[j]$，那么i到j有额外的一条边。所有边的边权都是1，求从点1出发到所有点的最短路，如果不可达输出-1<br>n≤200000,m≤300000。1≤v[i]≤2e20</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>这一题非常的神（对于我这种蒟蒻来缩）<br>首先对于所有权值新增2e20个点</p>
<ol>
<li>点i的权值为v[i]，那么i到v[i]连权1的边，v[i]到i连权0的边</li>
<li>对于权值之间连权0的边，具体来说，i只需要向i去掉某一位的1的点连边。</li>
</ol>
<p>这样边数只有20*2e20+2n+m。<br>实现细节</p>
<ol>
<li>20*2e20的边不用存，否则mle，只需要在转移时处理即可</li>
<li>权0和权1的边分开存，方便每次bfs时把用0权值的边连接的所有点都加入队尾,以保证距离不降。</li>
<li>上述过程可用bfs套dfs来实现</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/10/02/lydsy-noip-2016-test1/walk.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>walk.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line">    graph=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500010</span>] <span class="keyword">of</span> edge;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1300010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">const</span> mx=<span class="number">1</span> <span class="keyword">shl</span> <span class="number">20</span>;inf=maxlongint <span class="keyword">shr</span> <span class="number">2</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g0,g1:graph;h0,h1,d,q:arr;</div><div class="line">    n,m,i,j,f,t,h:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> g:graph;<span class="keyword">var</span> head:arr;f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> sz:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);sz:=head[<span class="number">0</span>];</div><div class="line">    g[sz].t:=t;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    d[v]:=w;q[t]:=v;inc(t);</div><div class="line">    i:=h0[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g0[i].t;</div><div class="line">        <span class="keyword">if</span> d[u]=inf <span class="keyword">then</span> dfs(u,w);</div><div class="line">        i:=g0[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> v&gt;mx <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    j:=v;</div><div class="line">    <span class="keyword">while</span> j&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        x:=j <span class="keyword">and</span> (-j);</div><div class="line">        <span class="keyword">if</span> (v&lt;&gt;x) <span class="keyword">and</span> (d[v-x]=inf) <span class="keyword">then</span> dfs(v-x,w);</div><div class="line">        dec(j,x);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    filldword(d,sizeof(d) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=mx+<span class="number">1</span>;</div><div class="line">    d[mx+<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inc(h);i:=h1[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g1[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]=inf <span class="keyword">then</span> dfs(u,d[v]+<span class="number">1</span>);</div><div class="line">            i:=g1[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        add(g1,h1,i+mx,j);</div><div class="line">        add(g0,h0,j,i+mx);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);</div><div class="line">        add(g1,h1,f+mx,t+mx);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    bfs();</div><div class="line">    <span class="keyword">for</span> i:=mx+<span class="number">1</span> <span class="keyword">to</span> mx+n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> d[i]=inf <span class="keyword">then</span> writeln(-<span class="number">1</span>) <span class="keyword">else</span> writeln(d[i]);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没有人通知我提交的ftp地址，然后测试时在没有上数据的oj上交了n次囧&lt;/p&gt;
&lt;h1 id=&quot;P1-String-Master&quot;&gt;&lt;a href=&quot;#P1-String-Master&quot; class=&quot;headerlink&quot; title=&quot;P1 String Master&quot;&gt;&lt;/a&gt;P1 String Master&lt;/h1&gt;&lt;p&gt;大意：给定两个长度n的字符串，允许修改k次，求它们的最长公共子串（&lt;strong&gt;连续子串&lt;/strong&gt;）。&lt;br&gt;n≤300,0≤k≤n。&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="字符串" scheme="https://cothrax.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
      <category term="位运算" scheme="https://cothrax.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="递推" scheme="https://cothrax.github.io/tags/%E9%80%92%E6%8E%A8/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-28</title>
    <link href="https://cothrax.github.io/2016/09/30/noip-2014-10-28/"/>
    <id>https://cothrax.github.io/2016/09/30/noip-2014-10-28/</id>
    <published>2016-09-30T13:26:00.000Z</published>
    <updated>2016-09-30T13:55:22.064Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">tstrip</td>
<td style="text-align:center">二分+最短路+负环</td>
</tr>
<tr>
<td style="text-align:center">puzzle</td>
<td style="text-align:center">dfs</td>
</tr>
<tr>
<td style="text-align:center">greendam</td>
<td style="text-align:center">最短路+最小割</td>
</tr>
</tbody>
</table>
<h1 id="P1-时间与空间之旅"><a href="#P1-时间与空间之旅" class="headerlink" title="P1 时间与空间之旅"></a>P1 时间与空间之旅</h1><p>公元22××年，宇宙中最普遍的交通工具是spaceship。spaceship的出现使得星系之间的联系变得更为紧密，所以spaceship船长也成了最热门的职业之一。当然，要成为一名出色的船长，必须通过严格的考核，例如下面是最简单的问题中的一个。<br>用1~n的整数给n个星系标号，目前你在标号为1的星系，你需要送快递到标号为n的星系，星系之间由于存在陨石带，并不是都可以直连的。同时，由于超时空隧道的存在，在某些星系间飞行会出现时间静止甚至倒流，飞行时间为0或为负数。另外,由星系i到星系j的时间和由星系j到星系i的时间不一定是相同的。<br>在寄出日期之前收到快递被认为是不允许的，所以每部spaceship上都有一个速度调节装置，可以调节飞行的时间。简单来说其功能就是让所有两个星系间的飞行时间(如果可以直达)都增加或减少相同的整数值，你的任务就是调整速度调节器，找出一条用最短时间完成任务的路径，并且保证这个最短时间的值大于或等于0。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件包含多组数据，第1个数为T，表示数据的数量。<br>对于每一组数据，输入第1行为两个正整数N(2≤N≤100)，E(1≤E≤N*(N-1)/2)，为星系的个数和星系间飞行的路线数。然后E行，每行三个整数i，j和t（1≤i,j≤N，i≠j，-100000≤t≤100000)，表示由星系i到星系j飞行的时间为t。由i到j最多只会有一条飞行线路。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出文件共T行，每组数据输出一行；<br>如果可以通过调节速度调节器完成任务，则输出一个非负整数，表示由星系1到星系N的最短时间。<br>如果不能由星系1到达星系N，则输出-1。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>1<br>4 5<br>1 2 1<br>1 3 1<br>2 3 -3<br>3 1 1<br>3 4 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>如果设置速度控制器的值为0，则有如下路径:1→2→3→1→2→……→3→4，使得投递的时间为负无穷大，显然是不符合要求的，所以应该把速度控制器的值设为1,相当于每个时间值加1,得到的最短路径为1→2→3→4,所需时间为2+(-2)+2=2。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>题意：给图上的所有边权加上一个整数，在保证1到n存在最短路的情况下，最小化该值。<br>先bfs两次，重构图，只保留同时在1到n路径上的点<br>然后二分+spfa，顺便判负环</p>
<div><br><div class="copy"><br>    <a href="/2016/09/30/noip-2014-10-28/tstrip.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>tstrip.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,w,next:int <span class="keyword">end</span>;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    graph=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> edge;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g,gt:graph;head,ht,q,cnt,d:arr;</div><div class="line">    flag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> boolean;</div><div class="line">    t,n,m,i,x,y,w,l,r,ans,mid:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> g:graph;<span class="keyword">var</span> head:arr;f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> sz:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);sz:=head[<span class="number">0</span>];</div><div class="line">    g[sz].f:=f;g[sz].t:=t;g[sz].w:=w;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">(g:graph;head:arr;s:int)</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    i,v,u,h,t:int;</div><div class="line">    used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(used,sizeof(used),false);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=s;used[s]:=true;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inc(h);<span class="keyword">if</span> h&gt;<span class="number">110</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> used[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                used[u]:=true;</div><div class="line">                q[t]:=u;</div><div class="line">                inc(t);<span class="keyword">if</span> t&gt;<span class="number">110</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> flag[i]:=flag[i] <span class="keyword">and</span> used[i];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">jud</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> h,t,i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(flag,sizeof(flag),false);</div><div class="line">    filldword(d,sizeof(d) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=<span class="number">1</span>;d[<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    flag[<span class="number">1</span>]:=true;cnt[<span class="number">1</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];flag[v]:=false;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">110</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]&gt;d[v]+g[i].w+x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+g[i].w+x;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> flag[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    flag[u]:=true;inc(cnt[u]);</div><div class="line">                    <span class="keyword">if</span> cnt[u]&gt;n <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">                    q[t]:=u;inc(t);<span class="keyword">if</span> t&gt;<span class="number">110</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    jud:=(d[n]&gt;=<span class="number">0</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'tstrip.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'tstrip.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">        fillchar(ht,sizeof(ht),<span class="number">0</span>);</div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(x,y,w);</div><div class="line">            add(g,head,x,y,w);add(gt,ht,y,x,w);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        fillchar(flag,sizeof(flag),true);</div><div class="line">        bfs(g,head,<span class="number">1</span>);bfs(gt,ht,n);</div><div class="line">        fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> flag[g[i].f] <span class="keyword">and</span> flag[g[i].t] <span class="keyword">then</span> </div><div class="line">                add(g,head,g[i].f,g[i].t,g[i].w);</div><div class="line">        l:=-inf;r:=inf;ans:=inf;</div><div class="line">        <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            mid:=(l+r) <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line">            <span class="keyword">if</span> jud(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=d[n];r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">            <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> ans=inf <span class="keyword">then</span> writeln(-<span class="number">1</span>) <span class="keyword">else</span> writeln(ans);</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">until</span> t=<span class="number">0</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-狐狸的谜语"><a href="#P2-狐狸的谜语" class="headerlink" title="P2 狐狸的谜语"></a>P2 狐狸的谜语</h1><p>话说某一个月黑风高的晚上,一只褐色的狐狸快速地跳过了一只懒狗,并留下一个字符串“032089”和一个数字5。<br>这其中一定隐含了某些秘密!酷爱思考的你马上发现，这个字符串可以写成：“03+2+0<em>89”，结果为5。这是一个非常有趣的问题!<br>现在给出一个长度为N的数字字符串和一个数字T，要求插入最少的加号或者乘号，使得数字字符串的运算结果为T。运算符</em>号优先级高于+号，运算数可以有任意个前导0。</p>
<!--more-->
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入不超过5组数据,每组数据两行。<br>每组数据的第1行为长度为N，只包含0~9的数字字符串，第2行为一个数字T。<br>输入T&lt;0表示输入结束。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个数字单独占一行，表示最少需要添加的运算符(+号或*号)数，无解输出-1。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>032089<br>5<br>333<br>9<br>00<br>-1</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>2</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据,有1≤N≤10，0≤T≤50。<br>对于50%的数据,有1≤N≤15，0≤T≤200。<br>对于全部的数据,有1≤N≤20，0≤T≤200。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>可以迭代（或二分）dfs，不过事实证明暴力dfs更快<br>预处理从a[i..j]表示的数f[i,j]，大于t的设为t+1<br>dfs时把式子分成三段：</p>
<ol>
<li>开始到最后一个加号：值为s</li>
<li>最后一个加号到最后一个乘号：值为c</li>
<li>最后一个数f[p,x]</li>
</ol>
<p>可行性剪枝：</p>
<ol>
<li>s&gt;m</li>
<li>s+c&gt;0且f[p,x]≠0且x+1..n中没有0</li>
</ol>
<p>最优性剪枝：所用符号数&gt;已知最优解</p>
<div><br><div class="copy"><br>    <a href="/2016/09/30/noip-2014-10-28/puzzle.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>puzzle.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">21</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">21</span>,<span class="number">0</span>..<span class="number">21</span>] <span class="keyword">of</span> int;</div><div class="line">    b:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">21</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,m,i,j,ans:int;s:<span class="keyword">string</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(x,p,s,c,d:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (d&gt;ans) <span class="keyword">or</span> (s&gt;m) <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> x=n+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(s,c*f[p,n]);</div><div class="line">        <span class="keyword">if</span> s=m <span class="keyword">then</span> ans:=min(ans,d);</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> b[x] <span class="keyword">and</span> (f[p,x]&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (s+c&gt;m) <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    dfs(x+<span class="number">1</span>,p,s,c,d);</div><div class="line">    <span class="keyword">if</span> x=n <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    dfs(x+<span class="number">1</span>,x+<span class="number">1</span>,s+c*f[p,x],<span class="number">1</span>,d+<span class="number">1</span>);</div><div class="line">    dfs(x+<span class="number">1</span>,x+<span class="number">1</span>,s,c*f[p,x],d+<span class="number">1</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'puzzle.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'puzzle.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        readln(s);readln(m);</div><div class="line">        <span class="keyword">if</span> m&lt;<span class="number">0</span> <span class="keyword">then</span> break;</div><div class="line">        n:=length(s);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> a[i]:=ord(s[i])-ord(<span class="string">'0'</span>);</div><div class="line">        fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=i <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">                f[i,j]:=min(m+<span class="number">1</span>,f[i,j-<span class="number">1</span>]*<span class="number">10</span>+a[j]);</div><div class="line">        fillchar(b,sizeof(b),true);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> a[i]=<span class="number">0</span> <span class="keyword">then</span></div><div class="line">                <span class="keyword">for</span> j:=i <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">                    b[j]:=false;</div><div class="line">        ans:=inf;</div><div class="line">        dfs(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">        <span class="keyword">if</span> ans=inf <span class="keyword">then</span> writeln(-<span class="number">1</span>) <span class="keyword">else</span> writeln(ans);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-花园的守护之神"><a href="#P3-花园的守护之神" class="headerlink" title="P3 花园的守护之神"></a>P3 花园的守护之神</h1><p>看着正在被上古神兽们摧残的花园，花园的守护之神――小Bug同学泪流满面。然而，FZOI不相信眼泪，小bug与神兽们的战争将进行到底！<br>通过google，小Bug得知，神兽们来自遥远的戈壁。为了扭转战局，小Bug决定拖延神兽增援的速度。从戈壁到达花园的路径错综复杂，由若干段双向的小路组成。神兽们通过每段小路都需要一段时间。小Bug可以通过向其中的一些小路投掷小xie来拖延神兽。她可以向任意小路投掷小Xie，而且可以在同一段小路上投掷多只小xie。每只小Xie可以拖延神兽一个单位的时间。即神兽通过整段路程的总时间，等于没有小xie时他们通过同样路径的时间加上路上经过的所有小路上的小xie数目总和。<br>神兽们是很聪明的。他们会在出发前侦查到每一段小路上的小Xie数目，然后选择总时间最短的路径。小Bug现在很想知道最少需要多少只小Xie，才能使得神兽从戈壁来到花园的时间变长。作为花园中可爱的花朵，你能帮助她吗?<br><!--more--></p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行包括一个整数N，表示地图中路点的个数；一个整数M，表示小路个数；以及整数S和T，分别表示戈壁和花园的路点编号。N个路点分别被编号为自然数1~N。<br>以下M行,每行三个整数A、B和C，表示路点A和B之间有一条小路相连，且通过它需要的时间为C。<br>输入数据保证两路点间最多只有一条小路相连，且戈壁和花园的路点是连通的。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，表示使S到T之间最短路增长所需要的最少的小xie的数目。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 5 1 5<br>1 2 1<br>2 3 3<br>1 4 2<br>4 3 2<br>5 1</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，满足N≤10，M≤50。<br>对于50%的数据，满足N≤200，M≤10000。<br>对于全部的数据，满足N≤1000，M≤499500，0&lt;C≤1000000。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>答案是最短路图上的最小割<br>spfa有一个点被卡，改用dijkstra+heap<br>记到起点距离df[v]，到终点距离dt[v]，如果$df[v]+e(v,u)+dt[u]=df[u]$那么边e(v,u)在最短路上<br>重构的图是有向图<br>最小割用最大流即可</p>
<div><br><div class="copy"><br>    <a href="/2016/09/30/noip-2014-10-28/greendam.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>greendam.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,w,next:int <span class="keyword">end</span>;</div><div class="line">    graph=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>] <span class="keyword">of</span> edge;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g0,g:graph;q,d,df,dt,h0,l,iter,head:arr;</div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,sz,i,f0,t0,f,t,w:int;</div><div class="line"></div><div class="line"><span class="comment">//heap begin</span></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l[h[x,<span class="number">1</span>]]:=y;l[h[y,<span class="number">1</span>]]:=x;</div><div class="line">    tmp:=h[x,<span class="number">0</span>];h[x,<span class="number">0</span>]:=h[y,<span class="number">0</span>];h[y,<span class="number">0</span>]:=tmp;</div><div class="line">    tmp:=h[x,<span class="number">1</span>];h[x,<span class="number">1</span>]:=h[y,<span class="number">1</span>];h[y,<span class="number">1</span>]:=tmp;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">heapify</span><span class="params">(i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> l,r,s:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=i <span class="keyword">shl</span> <span class="number">1</span>;r:=l <span class="keyword">or</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=sz) <span class="keyword">and</span> (h[l,<span class="number">0</span>]&lt;h[i,<span class="number">0</span>]) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=i;</div><div class="line">    <span class="keyword">if</span> (r&lt;=sz) <span class="keyword">and</span> (h[r,<span class="number">0</span>]&lt;h[s,<span class="number">0</span>]) <span class="keyword">then</span> s:=r;</div><div class="line">    <span class="keyword">if</span> i&lt;&gt;s <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        swap(i,s);heapify(s);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extract</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    swap(<span class="number">1</span>,sz);dec(sz);heapify(<span class="number">1</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">reduceto</span><span class="params">(x,k:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    h[x,<span class="number">0</span>]:=k;i:=x;</div><div class="line">    <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> (h[i,<span class="number">0</span>]&lt;h[i <span class="keyword">shr</span> <span class="number">1</span>,<span class="number">0</span>]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        swap(i,i <span class="keyword">shr</span> <span class="number">1</span>);i:=i <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(i,k:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);l[i]:=sz;</div><div class="line">    h[sz,<span class="number">0</span>]:=inf;h[sz,<span class="number">1</span>]:=i;</div><div class="line">    reduceto(sz,k);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">//heap end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dijkstra</span><span class="params">(s:int;<span class="keyword">var</span> d:arr)</span>;</span></div><div class="line"><span class="keyword">var</span> i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> i=s <span class="keyword">then</span> insert(i,<span class="number">0</span>) <span class="keyword">else</span> insert(i,inf);</div><div class="line">    <span class="keyword">while</span> sz&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=h[<span class="number">1</span>,<span class="number">1</span>];d[v]:=h[<span class="number">1</span>,<span class="number">0</span>];extract;</div><div class="line">        i:=h0[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g0[i].t;</div><div class="line">            <span class="keyword">if</span> (l[u]&lt;=sz) <span class="keyword">and</span> (h[l[u],<span class="number">0</span>]&gt;d[v]+g0[i].w) <span class="keyword">then</span></div><div class="line">                reduceto(l[u],d[v]+g0[i].w);</div><div class="line">            i:=g0[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> g:graph;<span class="keyword">var</span> head:arr;f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> sz:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);sz:=head[<span class="number">0</span>];</div><div class="line">    g[sz].f:=f;g[sz].t:=t;g[sz].w:=w;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="comment">//maxflow begin</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bfs</span><span class="params">(s,t0:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> h,t,i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(d,sizeof(d),<span class="number">255</span>);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=s;d[s]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inc(h);<span class="keyword">if</span> h&gt;<span class="number">1010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> (d[u]=-<span class="number">1</span>) <span class="keyword">and</span> (g[i].w&gt;<span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+<span class="number">1</span>;</div><div class="line">                q[t]:=u;inc(t);<span class="keyword">if</span> t&gt;<span class="number">1010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    bfs:=d[t0]&lt;&gt;-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(v,t,f:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i,u,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> v=t <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">    i:=iter[v];dfs:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> (g[i].w&gt;<span class="number">0</span>) <span class="keyword">and</span> (d[u]=d[v]+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=dfs(u,t,min(f-dfs,g[i].w));</div><div class="line">            dec(g[i].w,tmp);</div><div class="line">            inc(g[i xor <span class="number">1</span>].w,tmp);</div><div class="line">            inc(dfs,tmp);</div><div class="line">            <span class="keyword">if</span> g[i].w&gt;<span class="number">0</span> <span class="keyword">then</span> iter[v]:=i;</div><div class="line">            <span class="keyword">if</span> f=dfs <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> dfs=<span class="number">0</span> <span class="keyword">then</span> d[v]:=-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxflow</span><span class="params">(s,t:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    maxflow:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> bfs(s,t) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> iter[i]:=head[i];</div><div class="line">        inc(maxflow,dfs(s,t,inf));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">//maxflow end</span></div><div class="line"></div><div class="line"><span class="keyword">begin</span> <span class="comment">&#123;main&#125;</span></div><div class="line">    assign(input,<span class="string">'greendam.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'greendam.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,f0,t0);</div><div class="line">    fillchar(h0,sizeof(h0),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t,w);</div><div class="line">        add(g0,h0,f,t,w);add(g0,h0,t,f,w);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dijkstra(f0,df);dijkstra(t0,dt);</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    head[<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span>*m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> df[g0[i].f]+g0[i].w+dt[g0[i].t]=df[t0] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            add(g,head,g0[i].f,g0[i].t,<span class="number">1</span>);</div><div class="line">            add(g,head,g0[i].t,g0[i].f,<span class="number">0</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    writeln(maxflow(f0,t0));</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tstrip&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;二分+最短路+负环&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;puzzle&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dfs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;greendam&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;最短路+最小割&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-时间与空间之旅&quot;&gt;&lt;a href=&quot;#P1-时间与空间之旅&quot; class=&quot;headerlink&quot; title=&quot;P1 时间与空间之旅&quot;&gt;&lt;/a&gt;P1 时间与空间之旅&lt;/h1&gt;&lt;p&gt;公元22××年，宇宙中最普遍的交通工具是spaceship。spaceship的出现使得星系之间的联系变得更为紧密，所以spaceship船长也成了最热门的职业之一。当然，要成为一名出色的船长，必须通过严格的考核，例如下面是最简单的问题中的一个。&lt;br&gt;用1~n的整数给n个星系标号，目前你在标号为1的星系，你需要送快递到标号为n的星系，星系之间由于存在陨石带，并不是都可以直连的。同时，由于超时空隧道的存在，在某些星系间飞行会出现时间静止甚至倒流，飞行时间为0或为负数。另外,由星系i到星系j的时间和由星系j到星系i的时间不一定是相同的。&lt;br&gt;在寄出日期之前收到快递被认为是不允许的，所以每部spaceship上都有一个速度调节装置，可以调节飞行的时间。简单来说其功能就是让所有两个星系间的飞行时间(如果可以直达)都增加或减少相同的整数值，你的任务就是调整速度调节器，找出一条用最短时间完成任务的路径，并且保证这个最短时间的值大于或等于0。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="最短路" scheme="https://cothrax.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
      <category term="负环" scheme="https://cothrax.github.io/tags/%E8%B4%9F%E7%8E%AF/"/>
    
      <category term="网络流" scheme="https://cothrax.github.io/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="最大流" scheme="https://cothrax.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="剪枝" scheme="https://cothrax.github.io/tags/%E5%89%AA%E6%9E%9D/"/>
    
  </entry>
  
  <entry>
    <title>欢乐赛 2014-10-24</title>
    <link href="https://cothrax.github.io/2016/09/30/noip-2014-10-24/"/>
    <id>https://cothrax.github.io/2016/09/30/noip-2014-10-24/</id>
    <published>2016-09-30T13:01:31.000Z</published>
    <updated>2016-09-30T13:53:19.858Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">hdogs</td>
<td style="text-align:center">gcd</td>
</tr>
<tr>
<td style="text-align:center">meeting</td>
<td style="text-align:center">组合数学+容斥</td>
</tr>
<tr>
<td style="text-align:center">shirt</td>
<td style="text-align:center">状压dp</td>
</tr>
</tbody>
</table>
<h1 id="P1-分火腿"><a href="#P1-分火腿" class="headerlink" title="P1 分火腿"></a>P1 分火腿</h1><p>小月言要过四岁生日了，她的妈妈为她准备了n根火腿，她想将这些火腿均分给m位小朋友，所以她可能需要切火腿。为了省事，小月言想切最少的刀数，使这n根火腿分成均等的m份。请问最少要切几刀？</p>
<a id="more"></a>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个整数T，表示有T组数据。<br>接下来T组数据，每组共一行，有两个数字n，m。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>每组数据一行，输出最少要切的刀数。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>2 6<br>6 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4<br>0</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>100%的数据保证T&lt;=1000；n,m&lt;=2147483647。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>答案即满足$\dfrac{kn}{m}\in \textbf{Z},k\in[1,m]$的k的个数<br>答案是m-gcd(n,m)</p>
<div><br><div class="copy"><br>    <a href="/2016/09/30/noip-2014-10-24/hdogs.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>hdogs.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> t,i:int;n,m:qword;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:qword)</span>:</span>qword;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> gcd:=a <span class="keyword">else</span> gcd:=gcd(b,a <span class="keyword">mod</span> b);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'hdogs.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'hdogs.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">        writeln(m-gcd(n,m));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-无聊的会议"><a href="#P2-无聊的会议" class="headerlink" title="P2 无聊的会议"></a>P2 无聊的会议</h1><p>土豪学长作为一名光荣的学生会干部，每天要参加很多无聊的会议。他发现：他开会的会议桌一定是正n边形，n个干部坐在这个多边形顶点上。因为太无聊了，所以他想要数出所有的“完全”等腰三角形——这种等腰三角形的三个顶点一定全是给出n多边形的顶点，且三个顶点上坐的干部性别相同。<br>土豪学长是土豪，他用1000000000%10的佣金雇用你，让你帮他数。PS：如果两个“完全”等腰三角形三个顶点相同，计算时只算一个。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数字T，表示有T组数据。<br>接下来有T组数据，每组数据共一行。这一行给出一个长度为n的字符串，表示正n边形n个顶点上干部的性别。1为男，0为女。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于第i组数据：输出”Case i: ans”(不带引号)，ans为“完全”等腰三角形的数量。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>0001<br>01<br>10001<br>1101010<br>111010</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>Case 1: 1<br>Case 2: 0<br>Case 3: 1<br>Case 4: 3<br>Case 5: 2</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>40%的数据保证n&lt;=20<br>100%的数据保证 n&lt;=10^6<br>所有数据保证T&lt;=10</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>坑爹的数学题：计数+容斥<br>记边数为n</p>
<ol>
<li>n为奇数<ol>
<li>等腰三角形的个数cnt，只要考虑底边的数量，显然奇数边形中，任意两顶点的连边都对应一个以该边为底的三角形，于是$cnt=n*(n-1)/2$</li>
<li>考虑不合法的等腰三角形数量，只要考虑不合法的边数del（即一个顶点为0，一个顶点为1的边），记值为0的顶点数为s0，值1的顶点数为s1，$del=s0*s1$</li>
<li>一条边参与了三个等腰三角形的构成，于是$del*=3$</li>
<li>考虑一个不合法的三角形，它包含两条不合法的边，于是会被统计两次，于是不合法的三角形数为$del/=2$</li>
<li>当n%3=0时，等边三角形会被重复统计，枚举1..n/3，判断并更新del即可</li>
<li>答案是$cnt-del$</li>
</ol>
</li>
<li>n为偶数<ol>
<li>考虑到只有距离为偶数的两个顶点的连线（下称作偶数边）可以作为等腰三角形的底边，而一条这样的边参与了两个等腰三角形的构成，于是等腰三角形的数量为$n(n/2-1)$</li>
<li>对于偶数边，它会参与四个等腰三角形的构成；对于奇数边，由于只能做腰，只参与两个三角形的构成，这可以通过将顶点编号分奇偶讨论统计得</li>
<li>不合法三角形数同理</li>
<li>过中心的边不能作为等腰三角形的腰，1..n/2特判</li>
<li>等边三角形同理特判</li>
</ol>
</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/09/30/noip-2014-10-24/meeting.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>meeting.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    t,n,i:int;</div><div class="line">    a:ansistring;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">od</span><span class="params">()</span>:</span>int64;</div><div class="line"><span class="keyword">var</span> cnt,del,s0,s1,d:int64;i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    cnt:=n*(n-<span class="number">1</span>) <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line">    s0:=<span class="number">0</span>;s1:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]=<span class="string">'0'</span> <span class="keyword">then</span> inc(s0)</div><div class="line">        <span class="keyword">else</span> inc(s1);</div><div class="line">    del:=s0*s1*<span class="number">3</span>;</div><div class="line">    <span class="keyword">if</span> n <span class="keyword">mod</span> <span class="number">3</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        d:=n <span class="keyword">div</span> <span class="number">3</span>;</div><div class="line">        dec(cnt,d*<span class="number">2</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> d <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> (a[i]&lt;&gt;a[i+d]) <span class="keyword">or</span> </div><div class="line">                (a[i+d]&lt;&gt;a[i+<span class="number">2</span>*d]) <span class="keyword">then</span> dec(del,<span class="number">4</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    od:=cnt-del <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ev</span><span class="params">()</span>:</span>int64;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    cnt,del,d:int64;i:int;</div><div class="line">    s0,s1:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    cnt:=n*(n <span class="keyword">div</span> <span class="number">2</span>-<span class="number">1</span>);</div><div class="line">    s0[<span class="number">0</span>]:=<span class="number">0</span>;s0[<span class="number">1</span>]:=<span class="number">0</span>;s1[<span class="number">0</span>]:=<span class="number">0</span>;s1[<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]=<span class="string">'0'</span> <span class="keyword">then</span> inc(s0[i <span class="keyword">and</span> <span class="number">1</span>])</div><div class="line">        <span class="keyword">else</span> inc(s1[i <span class="keyword">and</span> <span class="number">1</span>]);</div><div class="line">    del:=(s0[<span class="number">0</span>]*s1[<span class="number">0</span>]+s0[<span class="number">1</span>]*s1[<span class="number">1</span>])*<span class="number">4</span>+</div><div class="line">        (s0[<span class="number">1</span>]*s1[<span class="number">0</span>]+s1[<span class="number">1</span>]*s0[<span class="number">0</span>])*<span class="number">2</span>;</div><div class="line">    d:=n <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> d <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]&lt;&gt;a[i+d] <span class="keyword">then</span></div><div class="line">            dec(del,<span class="number">2</span>);</div><div class="line">    <span class="keyword">if</span> n <span class="keyword">mod</span> <span class="number">3</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        d:=n <span class="keyword">div</span> <span class="number">3</span>;</div><div class="line">        dec(cnt,d*<span class="number">2</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> d <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> (a[i]&lt;&gt;a[i+d]) <span class="keyword">or</span> </div><div class="line">                (a[i+d]&lt;&gt;a[i+<span class="number">2</span>*d]) <span class="keyword">then</span> dec(del,<span class="number">4</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ev:=cnt-del <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'meeting.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'meeting.out'</span>);rewrite(output);</div><div class="line">    readln(t);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        readln(a);</div><div class="line">        n:=length(a);</div><div class="line">        <span class="keyword">write</span>(<span class="string">'Case '</span>,i,<span class="string">': '</span>);</div><div class="line">        <span class="keyword">if</span> odd(n) <span class="keyword">then</span> writeln(od()) <span class="keyword">else</span> writeln(ev);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-班服"><a href="#P3-班服" class="headerlink" title="P3 班服"></a>P3 班服</h1><p>要开运动会了，神犇学校的n个班级要选班服，班服共有100种样式，编号1~100。现在每个班都挑出了一些样式待选，每个班最多有100个待选的样式。要求每个班最终选定一种样式作为班服，且该班的样式不能与其他班级的相同，求所有可能方案的总数，由于方案总数可能很大，所以要求输出mod 1000000007后的答案。</p>
<!--more-->
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>共有T组数据。<br>对于每组数据，第一行为一个整数n，表示有n个班级。<br>2~n+1行，每行有最多100个数字，表示第i-1班待选班服的编号。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每组数据，输出方案总数 mod 1000000007后的答案。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>3<br>5 100 1<br>2<br>5 100<br>2<br>3 5<br>8 100</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4<br>4</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，1&lt;=T&lt;=3, 1&lt;=n&lt;=3，每班待选样式不超过10种。<br>对于50%的数据，1&lt;=T&lt;=5, 1&lt;=n&lt;=5，每班待选样式不超过50种。<br>对于100%的数据，1&lt;=T&lt;=10, 1&lt;=n&lt;=10，每班待选样式不超过100种。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>考虑到班级很少，状压DP<br>f[i,s]为当前考虑第i种样式，班级的情况（1..i-1的样式）为s的方案数<br>预处理a[i]表示与第i个样式匹配的班级<br>然后转移<br>$f[i+1,s\ or\ x]+=f[i,s]\ |\ x \not\in s\ and\ x \in a[i]$</p>
<div><br><div class="copy"><br>    <a href="/2016/09/30/noip-2014-10-24/shirt.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>shirt.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000007</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    t,n,m,i,j:int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>,<span class="number">0</span>..<span class="number">1</span> <span class="keyword">shl</span> <span class="number">10</span>] <span class="keyword">of</span> qword;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">inc</span><span class="params">(<span class="keyword">var</span> a:qword;b:qword)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    a:=a+b;</div><div class="line">    <span class="keyword">if</span> a&gt;=inf <span class="keyword">then</span> a:=a <span class="keyword">mod</span> inf;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(i,s:int)</span>;</span></div><div class="line"><span class="keyword">var</span> lb,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    x:=a[i];</div><div class="line">    inc(f[i+<span class="number">1</span>,s],f[i,s]);</div><div class="line">    <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        lb:=x <span class="keyword">and</span> (-x);</div><div class="line">        <span class="keyword">if</span> (s <span class="keyword">or</span> lb)&gt;s <span class="keyword">then</span> </div><div class="line">            inc(f[i+<span class="number">1</span>,s <span class="keyword">or</span> lb],f[i,s]);</div><div class="line">        x:=x <span class="keyword">and</span> <span class="keyword">not</span> lb;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'shirt.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'shirt.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        readln(n);m:=<span class="number">1</span> <span class="keyword">shl</span> n-<span class="number">1</span>;</div><div class="line">        fillchar(a,sizeof(a),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                <span class="keyword">read</span>(j);</div><div class="line">                a[j]:=a[j] <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> (i-<span class="number">1</span>));</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            readln;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="comment">//f[i,s] style i, 1..i-1 -&gt; s</span></div><div class="line">        <span class="comment">//f[i+1,s+?]+=f[i,s]</span></div><div class="line">        fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">        f[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">100</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">                <span class="keyword">if</span> f[i,j]&gt;<span class="number">0</span> <span class="keyword">then</span> update(i,j);</div><div class="line">        writeln(f[<span class="number">101</span>,m]);</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">until</span> t=<span class="number">0</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;hdogs&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;gcd&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;meeting&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;组合数学+容斥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;shirt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;状压dp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-分火腿&quot;&gt;&lt;a href=&quot;#P1-分火腿&quot; class=&quot;headerlink&quot; title=&quot;P1 分火腿&quot;&gt;&lt;/a&gt;P1 分火腿&lt;/h1&gt;&lt;p&gt;小月言要过四岁生日了，她的妈妈为她准备了n根火腿，她想将这些火腿均分给m位小朋友，所以她可能需要切火腿。为了省事，小月言想切最少的刀数，使这n根火腿分成均等的m份。请问最少要切几刀？&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="数论" scheme="https://cothrax.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="组合数学" scheme="https://cothrax.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
      <category term="状压DP" scheme="https://cothrax.github.io/tags/%E7%8A%B6%E5%8E%8BDP/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="容斥" scheme="https://cothrax.github.io/tags/%E5%AE%B9%E6%96%A5/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2016十连测热身赛 星球联盟</title>
    <link href="https://cothrax.github.io/2016/09/25/lydsy-noip-2016-pretest/"/>
    <id>https://cothrax.github.io/2016/09/25/lydsy-noip-2016-pretest/</id>
    <published>2016-09-25T07:00:05.000Z</published>
    <updated>2016-10-01T15:41:17.547Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>在遥远的S星系中一共有N个星球，编号为1…N。其中的一些星球决定组成联盟，以方便相互间的交流。但是，组成联盟的首要条件就是交通条件。初始时，在这N个星球间有M条太空隧道。每条太空隧道连接两个星球，使得它们能够相互到达。若两个星球属于同一个联盟，则必须存在一条环形线路经过这两个星球，即两个星球间存在两条没有公共隧道的路径。为了壮大联盟的队伍，这些星球将建设P条新的太空隧道。这P条新隧道将按顺序依次建成。一条新轨道建成后，可能会使一些星球属于同一个联盟。你的任务是计算出，在一条新隧道建设完毕后，判断这条新轨道连接的两个星球是否属于同一个联盟，如果属于同一个联盟就计算出这个联盟中有多少个星球。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行三个整数N，M和P，分别表示总星球数，初始时太空隧道的数目和即将建设的轨道数目。<br>第2至第M+1行，每行两个整数，表示初始时的每条太空隧道连接的两个星球编号。<br>第M+2行至第M+P+1行，每行两个整数，表示新建的太空隧道连接的两个星球编号。<br>这些太空隧道按照输入的顺序依次建成。<br>对于10%的数据有1≤N,M,P≤100；<br>对于40%的数据有1≤N,M,P≤2000；<br>对于100%的数据有1≤N,M,P≤200000。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出共P行。如果这条新的太空隧道连接的两个星球属于同一个联盟，就输出一个整数，表示这两个星球所在联盟<br>的星球数。如果这条新的太空隧道连接的两个星球不属于同一个联盟，就输出”No”（不含引号）。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 2 1<br>1 2<br>1 3<br>2 3    </p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>【样例1说明】<br>新建成的隧道连接2、3两个星球。<br>这条隧道1和2，2和3，1和3之间都存在环形线路。1,2,3同属一个联盟，答案为3</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>先吐槽一下第一题，pascal不论用堆排还是快排都是TLE，然后看了下status用pascal的没人a，果断换c++只要sort就水过了。<br>第二次原题来自：<a href="/2016/09/20/noip-2014-10-4/" title="P3">P3</a><br>关于本题：<br>这是一道综合性很强的图论题<br>题意：在一张无向图上动态维护<strong>边双连通分量</strong></p>
<ol>
<li>用<strong>tarjan缩点</strong>，求出原图的边双连通分量（下称分量）</li>
<li>缩点后就图便成了一个<strong>森林</strong>，其中的连通块（下称为树）用<strong>并查集tr</strong>维护</li>
<li>如果在同一棵树的两个分量之间连一条边，那么这两个分量就合并成了一个大的分量，这个用另一个<strong>并查集bl</strong>维护</li>
<li>考虑向图中加边<strong>e(u,v)</strong>：<ol>
<li>如果u和v在同一分量中，输出该分量大小即可</li>
<li>如果u和v不在同一分量但在同一棵树中，那么添加边e会使得u-&gt;lca-&gt;v的所有分量合并成一个分量，用朴素的方法求<strong>lca</strong>，边求边合并并查集bl</li>
<li>如果u和v不在同一棵树中，此时不会产生新的分量，而将两棵树合并，我们通过tr维护树的节点个数，然后<strong>启发式合并</strong></li>
</ol>
</li>
</ol>
<p>复杂度：记缩点后森林的规模为K，tarjan为$O(N+M)$，lca部分最坏$O(KP\alpha(K))$，启发式合并最坏$O(KlogK\alpha(K))$，但实际表现还不错。<br>注意点：<strong>有重边</strong>，tarjan时对反向边做标记</p>
<div><br><div class="copy"><br>    <a href="/2016/09/25/lydsy-noip-2016-pretest/c.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>c.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,next:int;v:boolean <span class="keyword">end</span>;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    st=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    pst=^st;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">800010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,dep,par,dfn,low,dcc,s:arr;</div><div class="line">    tr,bl:st;</div><div class="line">    ins:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,m,q,sz,i,f,t,cc,tim:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);</div><div class="line">    g[sz].f:=f;g[sz].t:=t;g[sz].v:=true;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;    </div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">tarjan</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);dfn[v]:=tim;low[v]:=tim;</div><div class="line">    inc(t);s[t]:=v;ins[v]:=true;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> g[i].v <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            g[i xor <span class="number">1</span>].v:=false;</div><div class="line">            <span class="keyword">if</span> dfn[u]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                tarjan(u,v);</div><div class="line">                low[v]:=min(low[v],low[u]);</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[u] <span class="keyword">then</span></div><div class="line">                low[v]:=min(low[v],dfn[u]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> low[v]=dfn[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(cc);bl[cc,<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> s[t+<span class="number">1</span>]&lt;&gt;v <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            ins[s[t]]:=false;</div><div class="line">            inc(bl[cc,<span class="number">1</span>]);dcc[s[t]]:=cc;</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(p:pst;x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> x=p^[x,<span class="number">0</span>] <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        p^[x,<span class="number">0</span>]:=find(p,p^[x,<span class="number">0</span>]);</div><div class="line">        find:=p^[x,<span class="number">0</span>];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(p:pst;x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    x:=find(p,x);y:=find(p,y);</div><div class="line">    <span class="keyword">if</span> x=y <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    inc(p^[y,<span class="number">1</span>],p^[x,<span class="number">1</span>]);p^[x,<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    p^[x,<span class="number">0</span>]:=y;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(p:pst;x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(p,x)=find(p,y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> p&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> union(@tr,v,p);</div><div class="line">    par[v]:=p;dep[v]:=dep[p]+<span class="number">1</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> dfs(u,v);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">lca</span><span class="params">(u,v:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> dep[u]&lt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">    <span class="keyword">while</span> dep[u]&gt;dep[v] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        union(@bl,u,par[u]);</div><div class="line">        u:=par[u];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> u&lt;&gt;v <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        union(@bl,u,par[u]);u:=par[u];</div><div class="line">        union(@bl,v,par[v]);v:=par[v];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">merge</span><span class="params">(u,v:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> tr[find(@tr,u),<span class="number">1</span>]&gt;tr[find(@tr,v),<span class="number">1</span>] <span class="keyword">then</span> swap(u,v);</div><div class="line">    add(v,u);add(u,v);dfs(u,v);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'c.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'c.out'</span>);rewrite(output);</div><div class="line">    <span class="comment">//input</span></div><div class="line">    <span class="keyword">read</span>(n,m,q);sz:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);add(f,t);add(t,f);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//tarjan</span></div><div class="line">    tim:=<span class="number">0</span>;t:=<span class="number">0</span>;cc:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> dfn[i]=<span class="number">0</span> <span class="keyword">then</span> tarjan(i,<span class="number">0</span>);</div><div class="line">    <span class="comment">//init set</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cc <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        tr[i,<span class="number">0</span>]:=i;tr[i,<span class="number">1</span>]:=<span class="number">1</span>;bl[i,<span class="number">0</span>]:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//build tree</span></div><div class="line">    f:=sz;sz:=<span class="number">0</span>;</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> f <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dcc[g[i].f]&lt;&gt;dcc[g[i].t] <span class="keyword">then</span> </div><div class="line">            add(dcc[g[i].f],dcc[g[i].t]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cc <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dep[i]=<span class="number">0</span> <span class="keyword">then</span> dfs(i,<span class="number">0</span>);</div><div class="line">    <span class="comment">//query</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);</div><div class="line">        f:=dcc[f];t:=dcc[t];</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> same(@tr,f,t) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            merge(f,t);</div><div class="line">            writeln(<span class="string">'No'</span>);</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> same(@bl,f,t) <span class="keyword">then</span> lca(f,t);</div><div class="line">            writeln(bl[find(@bl,f),<span class="number">1</span>]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;在遥远的S星系中一共有N个星球，编号为1…N。其中的一些星球决定组成联盟，以方便相互间的交流。但是，组成联盟的首要条件就是交通条件。初始时，在这N个星球间有M条太空隧道。每条太空隧道连接两个星球，使得它们能够相互到达。若两个星球属于同一个联盟，则必须存在一条环形线路经过这两个星球，即两个星球间存在两条没有公共隧道的路径。为了壮大联盟的队伍，这些星球将建设P条新的太空隧道。这P条新隧道将按顺序依次建成。一条新轨道建成后，可能会使一些星球属于同一个联盟。你的任务是计算出，在一条新隧道建设完毕后，判断这条新轨道连接的两个星球是否属于同一个联盟，如果属于同一个联盟就计算出这个联盟中有多少个星球。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="并查集" scheme="https://cothrax.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
      <category term="树结构" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    
      <category term="启发式合并" scheme="https://cothrax.github.io/tags/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/"/>
    
      <category term="双连通分量" scheme="https://cothrax.github.io/tags/%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-23</title>
    <link href="https://cothrax.github.io/2016/09/24/noip-2014-10-23/"/>
    <id>https://cothrax.github.io/2016/09/24/noip-2014-10-23/</id>
    <published>2016-09-24T12:27:30.000Z</published>
    <updated>2016-09-24T12:46:36.058Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">pour</td>
<td style="text-align:center">扩展欧几里得</td>
</tr>
<tr>
<td style="text-align:center">stol</td>
<td style="text-align:center">网格dp</td>
</tr>
<tr>
<td style="text-align:center">?</td>
<td style="text-align:center">?</td>
</tr>
</tbody>
</table>
<h1 id="P1-Jams倒酒"><a href="#P1-Jams倒酒" class="headerlink" title="P1 Jams倒酒"></a>P1 Jams倒酒</h1><p>Jams是一家酒吧的老板，他的酒吧提供2种体积的啤酒，a ml 和 b ml，分别使用容积为a ml 和 b ml的酒杯来装载。<br>酒吧的生意并不好。Jams发现酒鬼们都很穷，不像他那么土豪。有时，他们会因为负担不起a ml 或者 b ml酒的消费，而不得不离去。因此，Jams决定出手第三种体积的啤酒(较小体积的啤酒)。<br>Jams只有两种杯子，容积分别为 a ml 和 b ml，而且啤酒杯是没有刻度的。他只能通过两种杯子和酒桶间的互相倾倒来得到新的体积的酒。<br>倒酒步骤为:<br>(1) 规定a&gt;=b<br>(2) 酒桶容积无限，酒桶中酒体积无限大。<br>(3) 只能包含三种可能的倒酒操作：<br>1、 将酒桶中的酒倒入容积为b ml的酒杯中；<br>2、 将容积为a ml的酒杯中的酒倒入酒桶；<br>3、 将容积为b ml的酒杯中的酒倒入容积为 a ml的酒杯中。<br>(4) 每次倒酒必须把杯子倒满或者把被倾倒的杯子倒空。<br>Jams希望通过若干次倾倒得到容积为 a ml酒杯中剩下的就体积尽可能小，他请求你帮助他设计倾倒方案。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>两个整数a,b(0&lt;b&lt;=a&lt;=10^9)</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行一个整数，表示可以得到的最小体积的酒。<br>第二行两个整数Pa和Pb（中间用一个空格分开），分别表示从体积为a ml的酒杯中到处酒的次数和将酒倒入体积为b ml的酒杯的次数。<br>若有多种可能的Pa，Pb满足要求，那么请输出Pa最小的。若Pa最小的时候有多个Pb，那么输出Pb最小的。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>1 2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>倾倒方案为：<br>1、 桶-&gt;B；<br>2、 B-&gt;A；<br>3、 桶-&gt;B;<br>4、 B-&gt;A;<br>5、 A-&gt;桶；<br>6、 B-&gt;A;</p>
<p>对于20%的数据，pa,pb总和不超过5<br>对于60%的数据，pa&lt;=10^8<br>对于100%的数据，0&lt;b&lt;=a&lt;=10^9</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>记向b倒入y次，从a倒出x次，那么最后a剩余的酒体积为$w=by-ax$<br>要最小化w，由数论显然w最小是$gcd(a,b)$，于是题目变成了解方程$by-ax=gcd(a,b)$<br>令x=-x，上扩展欧几里得即可，最后答案是-x,y<br>至于最优解的调整，已知一组解(x,y)<br>那么任意一组解为$x_t=x+b\cdot t,y_t=y-a\cdot t$<br>答案调整到最大非负整数x</p>
<div><br><div class="copy"><br>    <a href="/2016/09/24/noip-2014-10-23/pour.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>pour.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> a,b,x,y,g:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> gcd:=a <span class="keyword">else</span> gcd:=gcd(b,a <span class="keyword">mod</span> b);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extgcd</span><span class="params">(a,b:int;<span class="keyword">var</span> x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        x:=<span class="number">1</span>;y:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        extgcd(b,a <span class="keyword">mod</span> b,y,x);</div><div class="line">        dec(y,(a <span class="keyword">div</span> b)*x);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'pour.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'pour.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(a,b);</div><div class="line">    g:=gcd(a,b);</div><div class="line">    writeln(g,<span class="string">' '</span>);</div><div class="line">    a:=a <span class="keyword">div</span> g;b:=b <span class="keyword">div</span> g;</div><div class="line">    extgcd(a,b,x,y);</div><div class="line">    <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        dec(x,b);inc(y,a);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> x+b&lt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(x,b);dec(y,a);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(-x,<span class="string">' '</span>,y);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-土豪聪要请客"><a href="#P2-土豪聪要请客" class="headerlink" title="P2 土豪聪要请客"></a>P2 土豪聪要请客</h1><p>众所周知，聪哥(ndsf)是个土豪，不过你们不知道的是他的MZ和他的RMB一样滴多……<br>某天土豪聪又赚了10^10000e的RMB，他比较开心，于是准备请客。他在自己在XX星上的别墅里面大摆酒席，想要邀请尽可能多的MZ来参加他的宴会。他将会同MZ一起坐在一个巨大的长方形桌子上。这个桌子能坐下的人数等于他的周长。聪哥要求他的桌子能够放进他的别墅，并且桌子的边必须与别墅的边界平行。给定别墅的平面图，请你求出聪哥最多可以请多少个MZ。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行n,m。表示别墅的长宽<br>下面n行，每行M个字符，表示一个方块是空的(‘ ’)或是被占用了(‘X’)。<br>聪哥只要他的桌子放在别墅里，并且桌子不能占用任何一个已经占用了的方块。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个数，表示聪哥最多可以请几个Maze。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 4<br>X.XX<br>X..X<br>..X.<br>..XX</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>9</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>怎么搞都可以的网格dp<br>预处理l[i,j]为点(i,j)向左的连续空位的数量，u[i,j]为(i,j)向上的连续空位的数量<br>记f[i,j,k]为以点(i,j)为右下角，纵向长度为k时的最大横向长度<br>然后转移<br>细节</p>
<ol>
<li>循环变量打错m写成n</li>
<li>滚动数组每次循环时初始化</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/09/24/noip-2014-10-23/stol.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>stol.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">410</span>,<span class="number">0</span>..<span class="number">410</span>] <span class="keyword">of</span> int;</div><div class="line">    l,u:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">410</span>,<span class="number">0</span>..<span class="number">410</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">410</span>,<span class="number">0</span>..<span class="number">410</span>] <span class="keyword">of</span> char;</div><div class="line">    n,m,i,p,c,j,k,t1,t2,ans:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'stol.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'stol.out'</span>);rewrite(output);</div><div class="line">    readln(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i,j]);</div><div class="line">        readln;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> a[i,j]=<span class="string">'X'</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                l[i,j]:=<span class="number">0</span>;u[i,j]:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">                l[i,j]:=l[i,j-<span class="number">1</span>]+<span class="number">1</span>;</div><div class="line">                u[i,j]:=u[i-<span class="number">1</span>,j]+<span class="number">1</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        c:=i <span class="keyword">and</span> <span class="number">1</span>;p:=c xor <span class="number">1</span>;</div><div class="line">        fillchar(f[c],sizeof(f[c]),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> u[i,j] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                t1:=f[c,j-<span class="number">1</span>,k]+<span class="number">1</span>;</div><div class="line">                t2:=min(f[p,j,k-<span class="number">1</span>],l[i,j]);</div><div class="line">                f[c,j,k]:=max(t1,t2);</div><div class="line">                ans:=max(ans,f[c,j,k]*<span class="number">2</span>+k*<span class="number">2</span>);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans-<span class="number">1</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-最强大脑"><a href="#P3-最强大脑" class="headerlink" title="P3 最强大脑"></a>P3 最强大脑</h1><blockquote>
<p>还没有做</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;pour&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;扩展欧几里得&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;stol&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;网格dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;?&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-Jams倒酒&quot;&gt;&lt;a href=&quot;#P1-Jams倒酒&quot; class=&quot;headerlink&quot; title=&quot;P1 Jams倒酒&quot;&gt;&lt;/a&gt;P1 Jams倒酒&lt;/h1&gt;&lt;p&gt;Jams是一家酒吧的老板，他的酒吧提供2种体积的啤酒，a ml 和 b ml，分别使用容积为a ml 和 b ml的酒杯来装载。&lt;br&gt;酒吧的生意并不好。Jams发现酒鬼们都很穷，不像他那么土豪。有时，他们会因为负担不起a ml 或者 b ml酒的消费，而不得不离去。因此，Jams决定出手第三种体积的啤酒(较小体积的啤酒)。&lt;br&gt;Jams只有两种杯子，容积分别为 a ml 和 b ml，而且啤酒杯是没有刻度的。他只能通过两种杯子和酒桶间的互相倾倒来得到新的体积的酒。&lt;br&gt;倒酒步骤为:&lt;br&gt;(1) 规定a&amp;gt;=b&lt;br&gt;(2) 酒桶容积无限，酒桶中酒体积无限大。&lt;br&gt;(3) 只能包含三种可能的倒酒操作：&lt;br&gt;1、 将酒桶中的酒倒入容积为b ml的酒杯中；&lt;br&gt;2、 将容积为a ml的酒杯中的酒倒入酒桶；&lt;br&gt;3、 将容积为b ml的酒杯中的酒倒入容积为 a ml的酒杯中。&lt;br&gt;(4) 每次倒酒必须把杯子倒满或者把被倾倒的杯子倒空。&lt;br&gt;Jams希望通过若干次倾倒得到容积为 a ml酒杯中剩下的就体积尽可能小，他请求你帮助他设计倾倒方案。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="数论" scheme="https://cothrax.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="网格DP" scheme="https://cothrax.github.io/tags/%E7%BD%91%E6%A0%BCDP/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-22</title>
    <link href="https://cothrax.github.io/2016/09/23/noip-2014-10-22/"/>
    <id>https://cothrax.github.io/2016/09/23/noip-2014-10-22/</id>
    <published>2016-09-23T12:07:17.000Z</published>
    <updated>2016-09-25T03:00:15.470Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">bishop</td>
<td style="text-align:center">dfs+打表</td>
</tr>
<tr>
<td style="text-align:center">czybm</td>
<td style="text-align:center">左右取数dp</td>
</tr>
<tr>
<td style="text-align:center">hop</td>
<td style="text-align:center">图论建模+lca</td>
</tr>
</tbody>
</table>
<h1 id="P1-传教士"><a href="#P1-传教士" class="headerlink" title="P1 传教士"></a>P1 传教士</h1><p>panzhili王国的疆土恰好是一个矩形，为了管理方便，国王jjs将整个疆土划分成N＊M块大小相同的区域。由于jjs希望他的子民也能信教爱教（”打拳”神教），所以他想安排一些传教士到全国各地去传教。但这些传教士的传教形式非常怪异，他们只在自己据点周围特定的区域内传教且领地意识极其强烈（即任意一个传教士的据点都不能在其他传教士的传教区域内，否则就会发生冲突）。现在我们知道传教士的传教区域为以其据点为中心的两条斜对角线上（如图）。现在jjs请你帮忙找出一个合理的安置方案，使得可以在全国范围内安置尽可能多的传教士而又不至于任意两个传教士会发生冲突。</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center">x</th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">A</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p>（若A为某传教士的据点，则其传教范围为所有标有X的格子。为不产生冲突，则第二个传教士的据点只能放在上图的空格中。）<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件共一行，包含两个整数N和M，代表国土的大小，n为水平区域数，m为垂直区域数。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出文件仅一行，包含一个整数，即最多可以安置的传教士的数目。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 4</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>6</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>说明：样例安置方案如下图所示，X表示为某传教士的据点。<br>XXX<br>OOO<br>OOO<br>XXX<br>对于100%的数据，1&lt;=n,m&lt;=9，且数据规模呈梯度上升。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>先暴力dfs打个表<br>由于是对角线，可以用x+y=b和x-y=b（斜率为±1的直线）进行状态转移</p>
<div><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/bishop.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>bishop.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    l,r:<span class="keyword">array</span>[-<span class="number">10</span>..<span class="number">30</span>] <span class="keyword">of</span> boolean;</div><div class="line">    ans,n,m:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(x,y,k:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> y=m+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> y:=<span class="number">1</span>;inc(x) <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> x=n+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">        ans:=max(ans,k);<span class="keyword">exit</span> </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs(x,y+<span class="number">1</span>,k);</div><div class="line">    <span class="keyword">if</span> r[x+y] <span class="keyword">and</span> l[y-x] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        r[x+y]:=false;l[y-x]:=false;</div><div class="line">        dfs(x,y+<span class="number">1</span>,k+<span class="number">1</span>);</div><div class="line">        r[x+y]:=true;l[y-x]:=true;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//read(n,m);</span></div><div class="line">    <span class="keyword">for</span> n:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">9</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> m:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">9</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            fillchar(l,sizeof(l),true);</div><div class="line">            fillchar(r,sizeof(r),true);</div><div class="line">            ans:=<span class="number">0</span>;</div><div class="line">            dfs(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">            <span class="keyword">write</span>(ans:<span class="number">3</span>);        </div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        writeln;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div><br><div><br><br>然后找找规律<br>打表后发现：分行列讨论，对角线特判<br><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/bishop1.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>bishop1.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> n,m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'bishop.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'bishop.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">if</span> n=m <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> n=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">write</span>(<span class="number">1</span>:<span class="number">3</span>) </div><div class="line">        <span class="keyword">else</span> <span class="keyword">write</span>(<span class="number">2</span>*(n-<span class="number">1</span>):<span class="number">3</span>);</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> odd(m) <span class="keyword">then</span> <span class="keyword">write</span>(n+m-<span class="number">1</span>:<span class="number">3</span>)</div><div class="line">        <span class="keyword">else</span> <span class="keyword">write</span>(m+<span class="number">2</span>*((n-<span class="number">1</span>) <span class="keyword">div</span> <span class="number">2</span>):<span class="number">3</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-czy把妹"><a href="#P2-czy把妹" class="headerlink" title="P2 czy把妹"></a>P2 czy把妹</h1><p>Czy是个大丧失，非常喜欢bm。他经常挑战bm的极限，同时b很多的mz。(虽然也许质量不容乐观)<br>这一天，czy又开始了他的极限挑战。在一个数轴上有n个maze,她们都在等待着czy的到来。Czy一开始站在k号妹子的旁边，他需要搞定所有的妹子(由于他向fewdan学会了绝技，所以搞定妹子的时间是无限接近于0的，也就是一瞬间就搞定而不用花额外的时间)。Maze们都很没有耐心，每让她们多等1s,她们就会增加w[i]的不开心值。现在，czy从k号妹子这里出发，以1m/s的速度开始行动，他希望在搞定所有maze的情况下使得她们的不开心值总和最小，于是他找到了即将在NOIP2014 AK的你来帮他解决这个问题。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件的第一行包含一个整数N，2&lt;=N&lt;=1000，表示maze的数量。<br>第二行包含一个整数V，1&lt;=V&lt;=N，表示开始时czy站在几号maze的旁边.接下来的N行中，每行包含两个用空格隔开的整数D和W，用来描述每个maze，其中0&lt;=D&lt;=1000，0&lt;=W&lt;=1000。D表示MM在数轴上的位置(单位: m)，W表示每秒钟会增加的不开心值。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，最小的不开心值。(答案不超过10^9)</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4<br>3<br>2 2<br>5 8<br>6 1<br>8 7</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>56</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于40%的数据，1&lt;=n&lt;=7<br>对于100%的数据，1&lt;=n&lt;=1000 0&lt;=D&lt;=1000 0&lt;=w&lt;=1000</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>因为只要路过一个mz必定要干掉，于是已经干掉的妹子构成的是一个连续区间。<br>以k为起点，左右取数的dp<br>状态f[i,j,s]：k以左取i个，右取j个，s=0在现在在左边，s=1现在在右边<br>部分数据预处理，然后转移</p>
<p>其实和洛谷的关路灯那题一模一样<br>dp时注意数组越界，要加判断i&gt;0和j&gt;0</p>
<div><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/czybm.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>czybm.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    i,j,n,k:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    d,w,l,r:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=d[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> d[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> d[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> i=k <span class="keyword">then</span> k:=j;<span class="keyword">if</span> j=k <span class="keyword">then</span> k:=i;</div><div class="line">            swap(d[i],d[j]);swap(w[i],w[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;    </div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'czybm.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'czybm.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(d[i],w[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);l[k-<span class="number">1</span>]:=<span class="number">0</span>;r[n-k]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=k-<span class="number">2</span> <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> l[i]:=l[i+<span class="number">1</span>]+w[k-<span class="number">1</span>-i];</div><div class="line">    <span class="keyword">for</span> i:=n-k-<span class="number">1</span> <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> r[i]:=r[i+<span class="number">1</span>]+w[k+<span class="number">1</span>+i];</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;f[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> k-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> n-k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> i&gt;<span class="number">0</span> <span class="keyword">then</span> f[i,j,<span class="number">0</span>]:=min(</div><div class="line">                f[i-<span class="number">1</span>,j,<span class="number">0</span>]+(l[i-<span class="number">1</span>]+r[j])*(d[k-i+<span class="number">1</span>]-d[k-i]),</div><div class="line">                f[i-<span class="number">1</span>,j,<span class="number">1</span>]+(l[i-<span class="number">1</span>]+r[j])*(d[k+j]-d[k-i]));</div><div class="line">            <span class="keyword">if</span> j&gt;<span class="number">0</span> <span class="keyword">then</span> f[i,j,<span class="number">1</span>]:=min(</div><div class="line">                f[i,j-<span class="number">1</span>,<span class="number">1</span>]+(l[i]+r[j-<span class="number">1</span>])*(d[k+j]-d[k+j-<span class="number">1</span>]),</div><div class="line">                f[i,j-<span class="number">1</span>,<span class="number">0</span>]+(l[i]+r[j-<span class="number">1</span>])*(d[k+j]-d[k-i]));</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(min(f[k-<span class="number">1</span>,n-k,<span class="number">0</span>],f[k-<span class="number">1</span>,n-k,<span class="number">1</span>]));</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-跳跳棋"><a href="#P3-跳跳棋" class="headerlink" title="P3 跳跳棋"></a>P3 跳跳棋</h1><p>Hzwer的跳跳棋是在一条数轴上进行的。棋子只能摆在整点上。每个点不能摆超过一个棋子。<br>某一天，黄金大神和cjy用跳跳棋来做一个简单的游戏：棋盘上有3颗棋子，分别在a，b，c这三个位置。他们要通过最少的跳动把它们的位置移动成x，y，z。（棋子是没有区别的）<br>跳动的规则很简单，任意选一颗棋子，对一颗中轴棋子跳动。跳动后两颗棋子距离不变。一次只允许跳过1颗棋子。<br>写一个程序，首先判断是否可以完成任务。如果可以，输出最少需要的跳动次数。<br><!--more--></p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含三个整数，表示当前棋子的位置a b c。（互不相同）<br>第二行包含三个整数，表示目标位置x y z。（互不相同）</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>如果无解，输出一行NO。<br>如果可以到达，第一行输出YES，第二行输出最少步数。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>1 2 3<br>0 3 5</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>YES<br>2</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>20% 输入整数的绝对值均不超过10<br>40% 输入整数的绝对值均不超过10000<br>100% 绝对值不超过10^9</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>考察状态(a,b,c)，其中$a&lt;b&lt;c$<br>写暴力bfs时可以发现，当将b向外跳得到下一个状态时(a’,b’,c)时a’只可以通过向里跳得到上一个状态，这个状态转移是树形的：</p>
<ol>
<li>b向外跳得到两个状态作为儿子</li>
<li>a/c向里跳得到的是父亲</li>
</ol>
<p>而且很容易发现存在根节点为(a,b,c)其中a-b=b-c<br>于是对于起始和目标状态，想要最短步转移，实际上就是找LCA，可以用辗转相除模拟向上走的过程，然后二分处理LCA</p>
<p>注意点</p>
<ol>
<li>要调整到同一深度</li>
<li>注意inf大小</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/hop.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>hop.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3</span>] <span class="keyword">of</span> int;</div><div class="line">    pint=^int;</div><div class="line"><span class="keyword">var</span></div><div class="line">    f,t,r1,r2:arr;</div><div class="line">    l,r,mid,ans,c1,c2,i:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">sort</span><span class="params">(<span class="keyword">var</span> f:arr)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> f[i]&gt;f[j] <span class="keyword">then</span> swap(f[i],f[j]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(f:arr;k:int;p:pint)</span>:</span>arr;</div><div class="line"><span class="keyword">var</span> d1,d2,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    d1:=f[<span class="number">2</span>]-f[<span class="number">1</span>];d2:=f[<span class="number">3</span>]-f[<span class="number">2</span>];</div><div class="line">    <span class="keyword">if</span> d1=d2 <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">    <span class="keyword">if</span> d1&gt;d2 <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        x:=min(d1 <span class="keyword">div</span> d2,k);</div><div class="line">        <span class="keyword">if</span> d2*x=d1 <span class="keyword">then</span> dec(x);</div><div class="line">        dec(k,x);inc(p^,x);</div><div class="line">        dec(f[<span class="number">2</span>],x*d2);dec(f[<span class="number">3</span>],x*d2);</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        x:=min(d2 <span class="keyword">div</span> d1,k);</div><div class="line">        <span class="keyword">if</span> d1*x=d2 <span class="keyword">then</span> dec(x);</div><div class="line">        dec(k,x);inc(p^,x);</div><div class="line">        inc(f[<span class="number">1</span>],x*d1);inc(f[<span class="number">2</span>],x*d1);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> k=<span class="number">0</span> <span class="keyword">then</span> cal:=f <span class="keyword">else</span> cal:=cal(f,k,p);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">equ</span><span class="params">(a,b:arr)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]&lt;&gt;b[i] <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">    equ:=true;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'hop.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'hop.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">read</span>(f[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    sort(f);c1:=<span class="number">0</span>;r1:=cal(f,maxlongint,@c1);</div><div class="line">    sort(t);c2:=<span class="number">0</span>;r2:=cal(t,maxlongint,@c2);</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> equ(r1,r2) <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="string">'NO'</span>);halt <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> c1&gt;c2 <span class="keyword">then</span> f:=cal(f,c1-c2,@i);</div><div class="line">    <span class="keyword">if</span> c2&gt;c1 <span class="keyword">then</span> t:=cal(t,c2-c1,@i);</div><div class="line">    l:=<span class="number">0</span>;r:=c1+c2;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> equ(cal(f,mid,@i),cal(t,mid,@i)) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            ans:=mid*<span class="number">2</span>;r:=mid-<span class="number">1</span></div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(<span class="string">'YES'</span>);<span class="keyword">write</span>(ans+abs(c1-c2));</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bishop&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dfs+打表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;czybm&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左右取数dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;hop&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;图论建模+lca&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-传教士&quot;&gt;&lt;a href=&quot;#P1-传教士&quot; class=&quot;headerlink&quot; title=&quot;P1 传教士&quot;&gt;&lt;/a&gt;P1 传教士&lt;/h1&gt;&lt;p&gt;panzhili王国的疆土恰好是一个矩形，为了管理方便，国王jjs将整个疆土划分成N＊M块大小相同的区域。由于jjs希望他的子民也能信教爱教（”打拳”神教），所以他想安排一些传教士到全国各地去传教。但这些传教士的传教形式非常怪异，他们只在自己据点周围特定的区域内传教且领地意识极其强烈（即任意一个传教士的据点都不能在其他传教士的传教区域内，否则就会发生冲突）。现在我们知道传教士的传教区域为以其据点为中心的两条斜对角线上（如图）。现在jjs请你帮忙找出一个合理的安置方案，使得可以在全国范围内安置尽可能多的传教士而又不至于任意两个传教士会发生冲突。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;x&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;（若A为某传教士的据点，则其传教范围为所有标有X的格子。为不产生冲突，则第二个传教士的据点只能放在上图的空格中。）&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
      <category term="树结构" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="二分" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="打表" scheme="https://cothrax.github.io/tags/%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-18</title>
    <link href="https://cothrax.github.io/2016/09/22/noip-2014-10-18/"/>
    <id>https://cothrax.github.io/2016/09/22/noip-2014-10-18/</id>
    <published>2016-09-22T15:42:48.000Z</published>
    <updated>2016-09-24T12:05:45.903Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">jkl</td>
<td style="text-align:center">贪心乱搞</td>
</tr>
<tr>
<td style="text-align:center">walk</td>
<td style="text-align:center">倍增</td>
</tr>
<tr>
<td style="text-align:center">mokou</td>
<td style="text-align:center">mst+遍历</td>
</tr>
<tr>
<td style="text-align:center">submatrix</td>
<td style="text-align:center">单调栈</td>
</tr>
</tbody>
</table>
<h1 id="P1-肥得更高"><a href="#P1-肥得更高" class="headerlink" title="P1 肥得更高"></a>P1 肥得更高</h1><p>现在，你有n亩的小麦地需要增产，你拥有一些金坷垃，但是金坷垃极其稀少，掺肥料也只够你撒K次。<br>众所周知，金坷垃能激活土壤深处的氮磷钾，同一块地可以撒多次肥料，但是效果是有略微衰减的。<br>实地考察后你发现，第i亩土地第x次撒肥料增产a[i]-x+1公斤。<br>hzwer将代替你去撒肥料，但是他是个蒟蒻，完全不动大脑，所以你想知道如果他随机撒肥料，最坏情况下小麦将增产多少，最好情况下将增产多少？(他最多只会对第i亩地撒肥料a[i]次)<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数n，K<br>第二行n个整数，第i个整数为a[i]</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出最大值，最小值，空格隔开</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 10<br>10 3 3 1 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>58 26</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据n，k&lt;=1000<br>对于70%的数据n，k&lt;=200000<br>对于100%的数据n，k，a[i]&lt;=1000000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>贪心乱搞<br>显然每次取最小值，每次取出a[i]后，a[i]-=1，可以用cnt[i]记录当前a[j]=i的j的个数<br>至于最大值，拿一个指针指想cnt[i]&gt;0的最大i，每次<code>dec(cnt[i]);inc(cnt[i-1])</code>，模拟k次即可<br>最小值的话，因为根据样例a[i]不能减负数，那么用一个指针指向cnt[i]&gt;0的最小i，然后一次性处理cnt[i]（相当于对a[j]=i的所有地j各撒i此，让a[j]减到0，用等差数列求和），然后向上找可用的i，记录次数直到k次<br>最后一个点会爆int</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/jkl.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>jkl.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    tmp,cnt:<span class="keyword">array</span>[-<span class="number">1000010</span>..<span class="number">1000010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,k,i,j,mn,mx,p:int;ans:int64;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'jkl.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'jkl.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    mn:=maxlongint;mx:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);inc(cnt[j]);</div><div class="line">        mn:=min(j,mn);mx:=max(j,mx);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    tmp:=cnt;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> cnt[mx]=<span class="number">0</span> <span class="keyword">do</span> dec(mx);</div><div class="line">        inc(ans,mx);dec(cnt[mx]);inc(cnt[mx-<span class="number">1</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans,<span class="string">' '</span>);</div><div class="line">    p:=mn;i:=k;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> i&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (tmp[p]=<span class="number">0</span>) <span class="keyword">do</span> inc(p);</div><div class="line">        <span class="comment">//p+p-1+p-2+...1</span></div><div class="line">        dec(tmp[p]);j:=min(i,p);dec(i,j);</div><div class="line">        inc(ans,(p+(p-j+<span class="number">1</span>))*j <span class="keyword">div</span> <span class="number">2</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-滑板鞋"><a href="#P2-滑板鞋" class="headerlink" title="P2 滑板鞋"></a>P2 滑板鞋</h1><p>你在魅力之都购买了一双时尚的滑板鞋，你非常兴奋地到处摩擦！<br>hzwer很想问一个问题：按照你的行动方式，你从某个结点摩擦（移动）K步后能到的目的地<br>这显然是一个很简单的问题，但是蒟蒻hzwer总是问个不停，所以你决定写一个程序回答他的询问</p>
<!--more-->
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个数n，m表示结点个数和询问次数<br>接下来n行，第i个数一个数a[i]表示你在第i个结点的话，下一步会移动到第a[i]个结点<br>接下来m行，每行两个数t,k，蒟蒻hzwer询问如果你当前在第t个结点，k步之后你会到第几个节点</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>m行为每次询问的结果</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 2<br>2<br>3<br>2<br>1 2<br>2 4</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>2</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>共十个测试点，每个测试点数据规模如下所示</p>
<ol>
<li>n=10^2,m=n,k&lt;=10^2</li>
<li>n=10^3,m=n,k&lt;=10^3</li>
<li>n=10^4,m=1,k&lt;=10^9</li>
<li>n=10^5,m=1,k&lt;=10^9</li>
<li>n=10^5,m=1,k&lt;=10^12</li>
<li>n=10^5,m=1,k&lt;=10^15</li>
<li>n=10^5,m=1,k&lt;=10^18</li>
<li>n=10^5,m=n,k&lt;=10^12</li>
<li>n=10^5,m=n,k&lt;=10^15<br>10.n=10^5,m=n,k&lt;=10^18</li>
</ol>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>倍增即可</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/walk.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>walk.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> mx=<span class="number">60</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..mx] <span class="keyword">of</span> int;</div><div class="line">    bin:<span class="keyword">array</span>[<span class="number">0</span>..mx] <span class="keyword">of</span> int64;</div><div class="line">    n,m,t,i,j:int;k:int64;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'walk.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'walk.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(f[i,<span class="number">0</span>]);</div><div class="line">    bin[<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> mx <span class="keyword">do</span> bin[i]:=bin[i-<span class="number">1</span>]*int64(<span class="number">2</span>);</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> mx <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            f[i,j]:=f[f[i,j-<span class="number">1</span>],j-<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(t,k);</div><div class="line">        <span class="keyword">for</span> j:=mx <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> bin[j]&lt;=k <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                dec(k,bin[j]);t:=f[t,j];</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        writeln(t);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-警察叔叔"><a href="#P3-警察叔叔" class="headerlink" title="P3 警察叔叔"></a>P3 警察叔叔</h1><p>魅力之都是一个有N个路口，M条双向道路连接的城市。警察叔叔绘制了一张特殊的地图，在地图上只保留了N-1条道路，我们称这些道路为【特殊道路】，要保证任意两个路口间有且仅有一条路径，且满足所有保留的道路长度之和最小。<br>现在要在其中一个连接有多条【特殊道路】的路口设立【根据地】，去掉【根据地】所在路口后，就会出现某些路口间无法通过【特殊道路】相互连通的情况，我们认为这时仍然能够通过【特殊道路】连通的路口属于同一个【区域】。警察叔叔希望最后每个【区域】的【特殊道路】总长尽可能平均。警察叔叔找到了hzwer，但是hzwer是个无向图和有向图都无法区分的蒟蒻，请你帮他计算出应该选择哪一个路口作为【根据地】。<br>(尽可能平均即权值最小，设每一块【区域】的路线总长为Length[i]（包括连接【根据地】与该【区域】的边），平均路线长度为Avg=SUM{Length[i]}/区域数，权值d=∑ (Length[i]-Avg)^2</p>
<!--more-->
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行：2个正整数N,M<br>第2..M+1行：每行2个整数u,v和1个实数len，表示u,v之间存在长度为len的边</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>第1行：1个整数，最后选择的路口编号（存在多个可选路口时选择编号小的）</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 3<br>3 1 5<br>3 2 4<br>1 2 3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于60%的数据：3 ≤ N ≤ 2,000，N-1 ≤ M ≤ 50,000<br>对于100%的数据：3 ≤ N ≤ 40,000，N-1 ≤ M ≤ 200,000<br>对于100%的数据：0 &lt; len ≤ 100,000,000<br>保证不存在相同距离的线路，两个路口间可能出现多条路径，且任意点对间至少存在一条路径</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>首先最小生成树显然<br>然后以1为根，在树上遍历统计以点i为根的子树上的边权和len[i]，在for一遍每个点找出最小值。<br>注意权值不是方差，而是方差×n。</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/mokou.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mokou.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int;w:double <span class="keyword">end</span>;</div><div class="line">    e1=<span class="keyword">record</span> f,t:int;w:double <span class="keyword">end</span>;</div><div class="line"><span class="keyword">const</span> eps=<span class="number">0.0000000001</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    e:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> e1;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">80010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,par,rnk,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>] <span class="keyword">of</span> int;</div><div class="line">    len:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>] <span class="keyword">of</span> double;</div><div class="line">    n,m,sz,i,ans:int;tmp,sum,mn:double;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int;w:double)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].t:=t;g[sz].w:=w;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:e1)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:e1;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;x:double;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=e[random(r-l)+l].w;</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> e[i].w&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> e[j].w&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(e[i],e[j]);inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[x]:=find(par[x]);find:=par[x];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    x:=find(x);y:=find(y);</div><div class="line">    <span class="keyword">if</span> x=y <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> rnk[x]&lt;rnk[y] <span class="keyword">then</span> par[x]:=y</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[y]:=x;</div><div class="line">        <span class="keyword">if</span> rnk[x]=rnk[y] <span class="keyword">then</span> inc(rnk[x]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(x)=find(y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(v,p:int)</span>:</span>double;</div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    len[v]:=<span class="number">0</span>;cnt[v]:=<span class="number">0</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;inc(cnt[v]);</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> len[v]:=len[v]+dfs(u,v)+g[i].w;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs:=len[v];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(v:int)</span>:</span>double;</div><div class="line"><span class="keyword">var</span> i,u:int;avg:double;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> cnt[v]=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(-<span class="number">1</span>);</div><div class="line">    avg:=sum/cnt[v];cal:=<span class="number">0</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> len[u]&lt;len[v] <span class="keyword">then</span></div><div class="line">            cal:=cal+sqr(len[u]+g[i].w-avg);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> v&lt;&gt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        cal:=cal+sqr(sum-len[v]-avg);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mokou.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mokou.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(e[i].f,e[i].t,e[i].w);</div><div class="line">    qsort(<span class="number">1</span>,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        par[i]:=i;rnk[i]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    sz:=<span class="number">0</span>;sum:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> same(e[i].f,e[i].t) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            union(e[i].f,e[i].t);</div><div class="line">            sum:=sum+e[i].w;</div><div class="line">            add(e[i].f,e[i].t,e[i].w);</div><div class="line">            add(e[i].t,e[i].f,e[i].w);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    mn:=-<span class="number">1</span>;dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        tmp:=cal(i);<span class="keyword">if</span> tmp+<span class="number">1</span>&lt;eps <span class="keyword">then</span> continue;</div><div class="line">        <span class="keyword">if</span> (mn=-<span class="number">1</span>) <span class="keyword">or</span> (tmp&lt;mn) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            mn:=tmp;ans:=i;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P4-请客"><a href="#P4-请客" class="headerlink" title="P4 请客"></a>P4 请客</h1><p>chenzeyu97的家可以看成是一个n*m的矩阵，每块区域都有独一无二的海拔高度h（h&gt;0）！其最大值为n*m。现在他要选择一个子矩阵摆放一张桌子，在他眼里，这样摆放桌子的美观度为这个子矩阵的最小值，他想知道，如果他要求摆放桌子的美观度为i，那么可以选择多少种子矩阵呢？对于所有可能的i值（1&lt;=i&lt;=n*m），你都应该得出其方案数，这样你就能顶替蒟蒻hzwer获得被请客的资格！</p>
<!--more-->
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数n，m<br>接下来n行，每行m个整数，描述chenzeyu97的家</p>
<h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h3><p>n*m行，每行一个整数，第i行表示美观度i的方案数</p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 3<br>2 5 1<br>6 3 4</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>6<br>4<br>5<br>1<br>1<br>1</p>
</blockquote>
<h2 id="提示​-3"><a href="#提示​-3" class="headerlink" title="提示​"></a>提示​</h2><p>30%的数据1&lt;=n,m&lt;=50<br>100%的数据1&lt;=n,m&lt;=300</p>
<h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>单调栈<br>依然考虑每个点对答案的贡献<br>对于一个点向二维扩展不方便，于是枚举左右边界l和r<br>预处理每一行l..r的最小值mn<br>对行i，记向上的第一个mn[j]小于mn[i]的行为j，向下第一个mn[k]小于mn[i]的行为k，那么i对答案（美观度为mn[i]的数量）的贡献为(i-j)*(i-k)<br>对于j和k可以用单调栈求得</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/submatrix.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>submatrix.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int;</div><div class="line">    mn:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int;</div><div class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    ans:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j,k:longint;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cal</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> t,i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    t:=<span class="number">0</span>;s[<span class="number">0</span>,<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (t&gt;<span class="number">0</span>) <span class="keyword">and</span> (s[t,<span class="number">0</span>]&gt;mn[i]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            inc(ans[s[t,<span class="number">0</span>]],(s[t,<span class="number">1</span>]-s[t-<span class="number">1</span>,<span class="number">1</span>])*(i-s[t,<span class="number">1</span>]));</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(t);s[t,<span class="number">0</span>]:=mn[i];s[t,<span class="number">1</span>]:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> t&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(ans[s[t,<span class="number">0</span>]],(s[t,<span class="number">1</span>]-s[t-<span class="number">1</span>,<span class="number">1</span>])*(n+<span class="number">1</span>-s[t,<span class="number">1</span>]));</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'submatrix.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'submatrix.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i,j]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        filldword(mn,sizeof(mn) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">        <span class="keyword">for</span> j:=i <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">                mn[k]:=min(mn[k],a[k,j]);</div><div class="line">            cal();</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m*n <span class="keyword">do</span> writeln(ans[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;jkl&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心乱搞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;walk&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;倍增&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mokou&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mst+遍历&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;submatrix&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;单调栈&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-肥得更高&quot;&gt;&lt;a href=&quot;#P1-肥得更高&quot; class=&quot;headerlink&quot; title=&quot;P1 肥得更高&quot;&gt;&lt;/a&gt;P1 肥得更高&lt;/h1&gt;&lt;p&gt;现在，你有n亩的小麦地需要增产，你拥有一些金坷垃，但是金坷垃极其稀少，掺肥料也只够你撒K次。&lt;br&gt;众所周知，金坷垃能激活土壤深处的氮磷钾，同一块地可以撒多次肥料，但是效果是有略微衰减的。&lt;br&gt;实地考察后你发现，第i亩土地第x次撒肥料增产a[i]-x+1公斤。&lt;br&gt;hzwer将代替你去撒肥料，但是他是个蒟蒻，完全不动大脑，所以你想知道如果他随机撒肥料，最坏情况下小麦将增产多少，最好情况下将增产多少？(他最多只会对第i亩地撒肥料a[i]次)&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="倍增" scheme="https://cothrax.github.io/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="生成树" scheme="https://cothrax.github.io/tags/%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="单调栈" scheme="https://cothrax.github.io/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-5</title>
    <link href="https://cothrax.github.io/2016/09/22/noip-2014-10-5/"/>
    <id>https://cothrax.github.io/2016/09/22/noip-2014-10-5/</id>
    <published>2016-09-22T11:16:48.000Z</published>
    <updated>2016-09-24T12:46:56.367Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">tree</td>
<td style="text-align:center">LCA</td>
</tr>
<tr>
<td style="text-align:center">mat</td>
<td style="text-align:center">概率期望+指针+前缀</td>
</tr>
<tr>
<td style="text-align:center">num</td>
<td style="text-align:center">背包+组合数学+容斥</td>
</tr>
</tbody>
</table>
<h1 id="P1-祖孙询问"><a href="#P1-祖孙询问" class="headerlink" title="P1 祖孙询问"></a>P1 祖孙询问</h1><p>已知一棵n个节点的有根树。有m个询问。每个询问给出了一对节点的编号x和y，询问x与y的祖孙关系。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p> 输入第一行包括一个整数n表示节点个数。<br>接下来n行每行一对整数对a和b表示a和b之间有连边。如果b是-1，那么a就是树的根。<br>第n+2行是一个整数m表示询问个数。<br>接下来m行，每行两个正整数x和y。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每一个询问，输出1:如果x是y的祖先，输出2:如果y是x的祖先，否则输出0。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>10<br>234 -1<br>12 234<br>13 234<br>14 234<br>15 234<br>16 234<br>17 234<br>18 234<br>19 234<br>233 19<br>5<br>234 233<br>233 12<br>233 13<br>233 15<br>233 19</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>0<br>0<br>0<br>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，n,m≤1000。<br>对于100%的.据,n,m≤40000，每个节点的编号都不超过40000。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的LCA，倍增即可</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-5/tree.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>tree.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">80010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,dep:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>] <span class="keyword">of</span> int;</div><div class="line">    par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>,<span class="number">0</span>..<span class="number">20</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,logn,k,sz,i,j,r,f,t:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].t:=t;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    dep[v]:=dep[p]+<span class="number">1</span>;par[v,<span class="number">0</span>]:=p;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> dfs(u,v);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(u,v:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> dep[u]&lt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dep[par[u,i]]&gt;=dep[v] <span class="keyword">then</span></div><div class="line">            u:=par[u,i];</div><div class="line">    <span class="keyword">if</span> v=u <span class="keyword">then</span> <span class="keyword">exit</span>(u);</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> par[u,i]&lt;&gt;par[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            u:=par[u,i];v:=par[v,i];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    lca:=par[u,<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'tree.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'tree.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);k:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);</div><div class="line">        k:=max(k,max(f,t));</div><div class="line">        <span class="keyword">if</span> t=-<span class="number">1</span> <span class="keyword">then</span> r:=f</div><div class="line">        <span class="keyword">else</span> <span class="keyword">begin</span> add(f,t);add(t,f) <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dep[<span class="number">0</span>]:=<span class="number">0</span>;dfs(r,<span class="number">0</span>);</div><div class="line">    logn:=floor(ln(n)/ln(<span class="number">2</span>));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span></div><div class="line">            par[j,i]:=par[par[j,i-<span class="number">1</span>],i-<span class="number">1</span>];</div><div class="line">    <span class="keyword">read</span>(m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);</div><div class="line">        <span class="comment">//if f=t then begin writeln(0);continue end;</span></div><div class="line">        j:=lca(f,t);</div><div class="line">        <span class="keyword">if</span> j=f <span class="keyword">then</span> writeln(<span class="number">1</span>)</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> j=t <span class="keyword">then</span> writeln(<span class="number">2</span>)</div><div class="line">        <span class="keyword">else</span> writeln(<span class="number">0</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-比赛"><a href="#P2-比赛" class="headerlink" title="P2 比赛"></a>P2 比赛</h1><p>有两个队伍A和B，每个队伍都有n个人。这两支队伍之间进行n场1对1比赛，每一场都是由A中的一个选手与B中的一个选手对抗。同一个人不会参加多场比赛，每个人的对手都是随机而等概率的。例如A队有A1和A2两个人，B队有B1和B2两个人，那么(A1 vs B1,A2 vs B2)和(A1 vs B2,A2 vs B1)的概率都是均等的50%。<br>每个选手都有一个非负的实力值。如果实力值为X和Y的选手对抗，那么实力值较强的选手所在的队伍将会获得(X-Y)^2的得分。<br>求A的得分减B的得分的期望值。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数n表示两队的人数为n。<br>第二行n个数，第i个数A[i]表示队伍A的第i个人的实力值。<br>第三行n个数，第i个数B[i]表示队伍B的第i个人的实力值。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出仅包含一个实数表示A期望赢B多少分。答案保留到小数点后一位（注意精度）。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>3 7<br>1 5</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>20.0</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，n≤50。<br>对于100%的.据,n≤50000;A[i],B[i]≤50000。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>考虑a中的每个点对答案的贡献<br>对于点i，它对答案的贡献$$=\frac{\sum_j(a[i]-a[j])^2-\sum_k(a[i]-a[k])^2}{n}$$<br>其中j为b中所有实力值小于a[i]的人，k为b中所有实力值大于a[i]的人，这个值可以qsort后，用一个指针维护。<br>式子变形后，维护一个前缀和、前缀平方和，即可在O(N)内解决。<br>注意点：a数组设为int64，int与int64混合计算可能溢出</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-5/mat.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mat.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> int64;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    sum,squ,a,b:arr;</div><div class="line">    n,i,p:int;sa,sb:int64;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int64)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int64;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(<span class="keyword">var</span> b:arr;l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;x:int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=b[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> b[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> b[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(b[i],b[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(b,i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(b,l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mat.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mat.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(b[i]);</div><div class="line">    qsort(a,<span class="number">1</span>,n);qsort(b,<span class="number">1</span>,n);</div><div class="line">    sum[<span class="number">0</span>]:=<span class="number">0</span>;squ[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        sum[i]:=sum[i-<span class="number">1</span>]+b[i];</div><div class="line">        squ[i]:=squ[i-<span class="number">1</span>]+sqr(b[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    p:=<span class="number">1</span>;sa:=<span class="number">0</span>;sb:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (p&lt;=n) <span class="keyword">and</span> (b[p]&lt;=a[i]) <span class="keyword">do</span> inc(p);</div><div class="line">        sa:=sa+(p-<span class="number">1</span>)*sqr(a[i])-<span class="number">2</span>*a[i]*sum[p-<span class="number">1</span>]+squ[p-<span class="number">1</span>];</div><div class="line">        sb:=sb+(n-p+<span class="number">1</span>)*sqr(a[i])-<span class="number">2</span>*a[i]*(sum[n]-sum[p-<span class="number">1</span>])</div><div class="line">            +squ[n]-squ[p-<span class="number">1</span>];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>((sa-sb)/n:<span class="number">0</span>:<span class="number">1</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-数字"><a href="#P3-数字" class="headerlink" title="P3 数字"></a>P3 数字</h1><p>一个数字被称为好数字当他满足下列条件：</p>
<ol>
<li>它有2*n个数位，n是正整数(允许有前导0)。</li>
<li>构成它的每个数字都在给定的数字集合S中。</li>
<li>它前n位之和与后n位之和相等或者它奇数位之和与偶数位之和相等<br>例如对于n=2,S={1,2}，合法的好数字有1111,1122,1212,1221,2112,2121,2211,2222这样8种。<br>已知n，求合法的好数字的个数mod 999983。</li>
</ol>
<!--more-->
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数n。<br>接下来一个长度不超过10的字符串，表示给定的数字集合。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行一个数字表示合法的好数字的个数mod 999983。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>0987654321</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1240</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于20%的数据，n≤7。<br>对于100%的.据,n≤1000,|S|≤10。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>背包+组合数学+容斥<br>见此：<a href="http://www.voidcn.com/blog/pzler/article/p-2260743.html" target="_blank" rel="external">http://www.voidcn.com/blog/pzler/article/p-2260743.html</a><br>$O(|S|N^2)$比较大，注意背包时向前转移，这样可以舍去无效点，加快速度。</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-5/num.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>num.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> z=<span class="number">999983</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int64;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j,k:int;s:<span class="keyword">string</span>;</div><div class="line">    ans,od,ev:int64;p:^int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(n:int)</span>:</span>int64;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    cal:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n*<span class="number">9</span> <span class="keyword">do</span> cal:=(cal+sqr(f[n,i])) <span class="keyword">mod</span> z;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'num.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'num.out'</span>);rewrite(output);</div><div class="line">    readln(n);readln(s);</div><div class="line">    m:=length(s);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> a[i]:=ord(s[i])-ord(<span class="string">'0'</span>);</div><div class="line">    fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> i*<span class="number">9</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> f[i,j]&gt;<span class="number">0</span> <span class="keyword">then</span></div><div class="line">                <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                    p:=@f[i+<span class="number">1</span>,j+a[k]];</div><div class="line">                    p^:=(p^+f[i,j]) <span class="keyword">mod</span> z;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">    ans:=cal(n);ev:=cal(n <span class="keyword">shr</span> <span class="number">1</span>);od:=cal((n+<span class="number">1</span>) <span class="keyword">shr</span> <span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>((ans*<span class="number">2</span>+z-ev*od <span class="keyword">mod</span> z) <span class="keyword">mod</span> z); </div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tree&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;LCA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mat&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;概率期望+指针+前缀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;num&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;背包+组合数学+容斥&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-祖孙询问&quot;&gt;&lt;a href=&quot;#P1-祖孙询问&quot; class=&quot;headerlink&quot; title=&quot;P1 祖孙询问&quot;&gt;&lt;/a&gt;P1 祖孙询问&lt;/h1&gt;&lt;p&gt;已知一棵n个节点的有根树。有m个询问。每个询问给出了一对节点的编号x和y，询问x与y的祖孙关系。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="组合数学" scheme="https://cothrax.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
      <category term="概率期望" scheme="https://cothrax.github.io/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="容斥" scheme="https://cothrax.github.io/tags/%E5%AE%B9%E6%96%A5/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-6</title>
    <link href="https://cothrax.github.io/2016/09/21/noip-2014-10-6/"/>
    <id>https://cothrax.github.io/2016/09/21/noip-2014-10-6/</id>
    <published>2016-09-21T15:34:24.000Z</published>
    <updated>2016-09-30T13:51:41.989Z</updated>
    
    <content type="html"><![CDATA[<p>一道模拟和一道平衡树区间k大没有做</p>
<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">catclimb</td>
<td style="text-align:center">dfs</td>
</tr>
<tr>
<td style="text-align:center">disblo</td>
<td style="text-align:center">分组背包+输出方案</td>
</tr>
</tbody>
</table>
<h1 id="P1-小猫爬山"><a href="#P1-小猫爬山" class="headerlink" title="P1 小猫爬山"></a>P1 小猫爬山</h1><p>Freda和rainbow饲养了N只小猫，这天，小猫们要去爬山。经历了千辛万苦，小猫们终于爬上了山顶，但是疲倦的它们再也不想徒步走下山了（呜咕&gt;_&lt;）。<br>Freda和rainbow只好花钱让它们坐索道下山。索道上的缆车最大承重量为W，而N只小猫的重量分别是C1、C2……CN。当然，每辆缆车上的小猫的重量之和不能超过W。每租用一辆缆车，Freda和rainbow就要付1美元，所以他们想知道，最少需要付多少美元才能把这N只小猫都运送下山？<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个用空格隔开的整数，N和W。<br>接下来N行每行一个整数，其中第i+1行的整数表示第i只小猫的重量C i。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数，最少需要多少美元，也就是最少需要多少辆缆车。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 1996<br>1<br>2<br>1994<br>12<br>29</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于100%的数据，1&lt;=N&lt;=18，1&lt;=C i &lt;=W&lt;=10^8。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>dfs即可，加上最优性剪枝可过</p>
<div><br><div class="copy"><br>    <a href="/2016/09/21/noip-2014-10-6/catclimb.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>catclimb.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    a,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">20</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,cnt,ans:int;w:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> cnt&gt;=ans <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> x=n+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> ans:=min(ans,cnt);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[x]+f[i]&lt;=w <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(f[i],a[x]);</div><div class="line">            dfs(x+<span class="number">1</span>);</div><div class="line">            dec(f[i],a[x]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    inc(cnt);inc(f[cnt],a[x]);</div><div class="line">    dfs(x+<span class="number">1</span>);</div><div class="line">    dec(f[cnt],a[x]);dec(cnt);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'catclimb.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'catclimb.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,w);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    ans:=maxlongint;</div><div class="line">    dfs(<span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-暗黑破坏神"><a href="#P2-暗黑破坏神" class="headerlink" title="P2 暗黑破坏神"></a>P2 暗黑破坏神</h1><p>无聊中的小x玩起了Diablo I…<br>游戏的主人公有n个魔法<br>每个魔法分为若干个等级，第i个魔法有p[i]个等级(不包括0)<br>每个魔法的每个等级都有一个效果值，一个j级的i种魔法的效果值为w[i][j]<br>魔法升一级需要一本相应的魔法书<br>购买魔法书需要金币，第i个魔法的魔法书价格为c[i]<br>而小x只有m个金币(好孩子不用修改器)<br>你的任务就是帮助小x决定如何购买魔法书才能使所有魔法的效果值之和最大<br>开始时所有魔法为0级 效果值为0<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行 用空格隔开的两个整数n m<br>以下n行 描述n个魔法<br>第i+1行描述 第i个魔法 格式如下<br>c[i] p[i] w[i][1] w[i][2] … w[i][p[i]]</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行输出一个整数，即最大效果值。<br>以后n行输出你的方案：<br>第i+1行有一个整数v[i] 表示你决定把第i个魔法学到v[i]级<br>如果有多解 输出花费金币最少的一组<br>如果还多解 输出任意一组</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 10<br>1 3 1 2 2<br>2 3 2 4 6<br>3 3 2 1 10</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>11<br>1<br>0<br>3</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>1&lt;=n&lt;=100<br>1&lt;=m&lt;=500<br>1&lt;=p[i]&lt;=50<br>1&lt;=c[i]&lt;=10<br>保证输入数据和最终结果在longint范围内</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>分组背包<br>f[i,j]表示前i个花费j的最大值，$k\in[1,p_i]$<br>方程：$$f[i,j]:=max{f[i,j],f[i-1,j-k*c[i]]+w[i,k]}$$<br>至于输出方案，向前迭代即可。</p>
<div><br><div class="copy"><br>    <a href="/2016/09/21/noip-2014-10-6/diablo.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>diablo.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    p,c:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    w:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>,<span class="number">0</span>..<span class="number">51</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j,k,ans:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'diablo.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'diablo.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c[i],p[i]);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> p[i] <span class="keyword">do</span> <span class="keyword">read</span>(w[i,j]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> min(j <span class="keyword">div</span> c[i],p[i]) <span class="keyword">do</span></div><div class="line">                f[i,j]:=max(f[i,j],f[i-<span class="number">1</span>,j-k*c[i]]+w[i,k]);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> f[n,i]&gt;ans <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            ans:=f[n,i];j:=i;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> min(j <span class="keyword">div</span> c[i],p[i]) <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> f[i,j]=f[i-<span class="number">1</span>,j-k*c[i]]+w[i,k] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                g[i]:=k;j:=j-k*c[i];break;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    writeln(ans);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(g[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道模拟和一道平衡树区间k大没有做&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;catclimb&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dfs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;disblo&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;分组背包+输出方案&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-小猫爬山&quot;&gt;&lt;a href=&quot;#P1-小猫爬山&quot; class=&quot;headerlink&quot; title=&quot;P1 小猫爬山&quot;&gt;&lt;/a&gt;P1 小猫爬山&lt;/h1&gt;&lt;p&gt;Freda和rainbow饲养了N只小猫，这天，小猫们要去爬山。经历了千辛万苦，小猫们终于爬上了山顶，但是疲倦的它们再也不想徒步走下山了（呜咕&amp;gt;_&amp;lt;）。&lt;br&gt;Freda和rainbow只好花钱让它们坐索道下山。索道上的缆车最大承重量为W，而N只小猫的重量分别是C1、C2……CN。当然，每辆缆车上的小猫的重量之和不能超过W。每租用一辆缆车，Freda和rainbow就要付1美元，所以他们想知道，最少需要付多少美元才能把这N只小猫都运送下山？&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="剪枝" scheme="https://cothrax.github.io/tags/%E5%89%AA%E6%9E%9D/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-4</title>
    <link href="https://cothrax.github.io/2016/09/20/noip-2014-10-4/"/>
    <id>https://cothrax.github.io/2016/09/20/noip-2014-10-4/</id>
    <published>2016-09-20T15:07:13.000Z</published>
    <updated>2016-09-24T12:49:24.947Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">password</td>
<td style="text-align:center">折半枚举</td>
</tr>
<tr>
<td style="text-align:center">formation</td>
<td style="text-align:center">LIS</td>
</tr>
<tr>
<td style="text-align:center">escape</td>
<td style="text-align:center">二分+bfs</td>
</tr>
</tbody>
</table>
<h1 id="P1-某种密码"><a href="#P1-某种密码" class="headerlink" title="P1 某种密码"></a>P1 某种密码</h1><p>关于某种密码有如下描述：某种密码的原文A是由N个数字组成，而密文B是一个长度为N的01数串，原文和密文的关联在于一个钥匙码KEY。若KEY=∑▒〖Ai*Bi〗，则密文就是原文的一组合法密码。<br>现在有原文和钥匙码，请编一个程序来帮助他统计到底有多少个符合条件的密文。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个数N，KEY，意义同题目描述；<br>第二行N个数表示原文A，意义同题目描述。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个数ANS，表示对于原文A和KEY，有多少组可行的密文B。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 2<br>1 1 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>密文110，1<em>1+1</em>1+0<em>2=2<br>密文001，0</em>1+0<em>1+1</em>2=2<br>一共两组可行的密文。<br>60%数据满足N&lt;=25<br>100%数据满足N&lt;=40，-maxlongint&lt;=∑Ai&lt;=maxlongint</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的折半枚举<br>注意点：</p>
<ol>
<li>ai可能为负数</li>
<li>hash中重复元素的计数：每次insert时遍历一遍该链的元素。</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/09/20/noip-2014-10-4/password.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>password.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> z=<span class="number">500009</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">41</span>] <span class="keyword">of</span> int;</div><div class="line">    hash:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500000</span>] <span class="keyword">of</span> int;</div><div class="line">    amt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500000</span>] <span class="keyword">of</span> int;</div><div class="line">    next:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500000</span>] <span class="keyword">of</span> int;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..z] <span class="keyword">of</span> int;</div><div class="line">    sz,n,f,k,w,i:int;cnt:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x:int64)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=(x <span class="keyword">mod</span> z+z) <span class="keyword">mod</span> z;</div><div class="line">    <span class="keyword">if</span> head[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(sz);head[i]:=sz;</div><div class="line">        hash[sz]:=x;inc(amt[sz]);</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    i:=head[i];</div><div class="line">    <span class="keyword">while</span> next[i]&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> hash[i]=x <span class="keyword">then</span> <span class="keyword">begin</span> inc(amt[i]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> hash[i]=x <span class="keyword">then</span> <span class="keyword">begin</span> inc(amt[i]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    inc(sz);hash[sz]:=x;inc(amt[sz]);next[i]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[(x <span class="keyword">mod</span> z+z) <span class="keyword">mod</span> z];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> hash[i]=x <span class="keyword">then</span> <span class="keyword">exit</span>(i);</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    query:=-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(c,x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> t:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (x=<span class="number">0</span>) <span class="keyword">and</span> (c=k+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span> insert(f);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> (x=<span class="number">1</span>) <span class="keyword">and</span> (c=n+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        t:=query(w-f);</div><div class="line">        <span class="keyword">if</span> t&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> inc(cnt,amt[t]);</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    inc(f,a[c]);dfs(c+<span class="number">1</span>,x);</div><div class="line">    dec(f,a[c]);dfs(c+<span class="number">1</span>,x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'password.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'password.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,w);k:=n <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    sz:=<span class="number">0</span>;f:=<span class="number">0</span>;dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    cnt:=<span class="number">0</span>;f:=<span class="number">0</span>;dfs(k+<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>(cnt);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-球的序列"><a href="#P2-球的序列" class="headerlink" title="P2 球的序列"></a>P2 球的序列</h1><p>N个编号为1-n的球，每个球都有唯一的编号。这些球被排成两种序列，分别为A、B序列，现在需要重新寻找一个球的序列l，对于这个子序列l中任意的两个球，要求j,k(j<k)，都要求满足lj在a中位置比lk在a中位置靠前，却lj在b中位置比lk在b中位置靠前，请你计算这个子序列l的最大长度。 <!--more--=""></k)，都要求满足lj在a中位置比lk在a中位置靠前，却lj在b中位置比lk在b中位置靠前，请你计算这个子序列l的最大长度。></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个整数，表示N。<br>第二行N个整数，表示A序列。<br>第三行N个整数，表示B序列。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>1 2 4 3 5<br>5 2 3 4 1</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>样例说明<br>L可以是{2,3}，也可以是{2,4}<br>数据范围:<br>40% N&lt;=5000<br>100% N&lt;=50000</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>以在a中下标重新给球编号，以在b中下标作为球的权值，然后就变成了LIS。<br>LIS有$O(NlogN)$的求法</p>
<div><br><div class="copy"><br>    <a href="/2016/09/20/noip-2014-10-4/formation.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>formation.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,b,w,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,j,len:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bin</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> l,r,mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    bin:=<span class="number">0</span>;;l:=<span class="number">1</span>;r:=len;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> f[mid]&lt;x <span class="keyword">then</span> <span class="keyword">begin</span> bin:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'formation.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'formation.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span> <span class="keyword">read</span>(j);b[j]:=i <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i]:=b[a[i]];</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>]:=<span class="number">0</span>;len:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        j:=bin(w[i])+<span class="number">1</span>;</div><div class="line">        f[j]:=min(f[j],w[i]);</div><div class="line">        len:=max(len,j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(len);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-大逃亡"><a href="#P3-大逃亡" class="headerlink" title="P3 大逃亡"></a>P3 大逃亡</h1><p>N（1&lt;=N&lt;=10000），X（1&lt;=x&lt;=1000），Y（1&lt;=Y&lt;=1000）,代表有N个敌人分布一个X行Y列的矩阵上，矩形的行号从0到X-1,列号从0到Y-1再给出四个数字x1,y1,x2,y2,代表你要从点(x1,y1)移到(x2,y2)。在移动的过程中你当然希望离敌人的距离的最小值最大化，现在请求出这个值最大可以为多少,以及在这个前提下，你最少要走多少步才可以回到目标点。注意这里距离的定义为两点的曼哈顿距离，即某两个点的坐标分为(a,b),(c,d),那么它们的距离为|a-c|+|b-d|。<br><!--more--></p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行给出数字N，X，Y<br>第二行给出x1,y1,x2,y2<br>下面将有N行，给出N个敌人所在的坐标</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>在一行内输出你离敌人的距离及在这个距离的限制下，你回到目标点最少要移动多少步。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 5 6<br>0 0 4 0<br>2 1<br>2 3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2 14</p>
</blockquote>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>先从敌人所在点bfs一次，计算出每个点离最近敌人的距离<br>然后二分答案+bfs判解</p>
<div><br><div class="copy"><br>    <a href="/2016/09/20/noip-2014-10-4/escape.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>escape.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=((<span class="number">1</span>,<span class="number">0</span>),(<span class="number">0</span>,<span class="number">1</span>),(-<span class="number">1</span>,<span class="number">0</span>),(<span class="number">0</span>,-<span class="number">1</span>));</div><div class="line"><span class="keyword">var</span></div><div class="line">    mp,dist:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    k,n,m,i,h,t,</div><div class="line">    x,y,sx,sy,tx,ty,nx,ny,</div><div class="line">    l,r,mid,ans,mn:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x0:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> mp[sx,sy]&lt;x0 <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">    fillchar(dist,sizeof(dist),<span class="number">255</span>);</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">1</span>;q[h,<span class="number">0</span>]:=sx;q[h,<span class="number">1</span>]:=sy;dist[sx,sy]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        x:=q[h,<span class="number">0</span>];y:=q[h,<span class="number">1</span>];inc(h);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            nx:=x+d[i,<span class="number">0</span>];ny:=y+d[i,<span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span> (min(nx,ny)&lt;<span class="number">0</span>) <span class="keyword">or</span> (nx&gt;=n) <span class="keyword">or</span> (ny&gt;=m) <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> dist[nx,ny]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> mp[nx,ny]&lt;x0 <span class="keyword">then</span> continue;</div><div class="line">            dist[nx,ny]:=dist[x,y]+<span class="number">1</span>;</div><div class="line">            q[t,<span class="number">0</span>]:=nx;q[t,<span class="number">1</span>]:=ny;inc(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    check:=dist[tx,ty]&lt;&gt;-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'escape.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'escape.out'</span>);rewrite(output);</div><div class="line">    fillchar(mp,sizeof(mp),<span class="number">255</span>);</div><div class="line">    <span class="keyword">read</span>(k,n,m,sx,sy,tx,ty);</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(x,y);</div><div class="line">        q[t,<span class="number">0</span>]:=x;q[t,<span class="number">1</span>]:=y;inc(t);</div><div class="line">        mp[x,y]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        x:=q[h,<span class="number">0</span>];y:=q[h,<span class="number">1</span>];inc(h);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            nx:=x+d[i,<span class="number">0</span>];ny:=y+d[i,<span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span> (min(nx,ny)&lt;<span class="number">0</span>) <span class="keyword">or</span> (nx&gt;=n) <span class="keyword">or</span> (ny&gt;=m) <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> mp[nx,ny]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> continue;</div><div class="line">            mp[nx,ny]:=mp[x,y]+<span class="number">1</span>;</div><div class="line">            q[t,<span class="number">0</span>]:=nx;q[t,<span class="number">1</span>]:=ny;inc(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    l:=<span class="number">0</span>;r:=n+m+<span class="number">2</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">            ans:=mid;mn:=dist[tx,ty];l:=mid+<span class="number">1</span>; </div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans,<span class="string">' '</span>,mn);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;password&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;折半枚举&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;formation&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;LIS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;escape&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;二分+bfs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-某种密码&quot;&gt;&lt;a href=&quot;#P1-某种密码&quot; class=&quot;headerlink&quot; title=&quot;P1 某种密码&quot;&gt;&lt;/a&gt;P1 某种密码&lt;/h1&gt;&lt;p&gt;关于某种密码有如下描述：某种密码的原文A是由N个数字组成，而密文B是一个长度为N的01数串，原文和密文的关联在于一个钥匙码KEY。若KEY=∑▒〖Ai*Bi〗，则密文就是原文的一组合法密码。&lt;br&gt;现在有原文和钥匙码，请编一个程序来帮助他统计到底有多少个符合条件的密文。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="折半枚举" scheme="https://cothrax.github.io/tags/%E6%8A%98%E5%8D%8A%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="线性DP" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%80%A7DP/"/>
    
  </entry>
  
  <entry>
    <title>Hexo用原生html伪装复制源码的feature</title>
    <link href="https://cothrax.github.io/2016/09/16/hexo-ways-to-copy-code/"/>
    <id>https://cothrax.github.io/2016/09/16/hexo-ways-to-copy-code/</id>
    <published>2016-09-16T05:39:30.000Z</published>
    <updated>2016-09-16T11:24:27.235Z</updated>
    
    <content type="html"><![CDATA[<h2 id="优化源码复制"><a href="#优化源码复制" class="headerlink" title="优化源码复制"></a>优化源码复制</h2><p>之前在【<a href="/2016/08/12/Hexo初体验/" title="Hexo初体验">Hexo初体验</a>】中提到过<strong>代码复制到剪切板</strong>的替代方案，就是用一个link链接到源码文件，这样做对于一个OIer来说，好处有三：</p>
<ol>
<li>便于管理源码</li>
<li>方便复习模板题</li>
<li><del>显示逼格</del>（雾）</li>
</ol>
<a id="more"></a>
<p>但在代码块外面显示一个蓝色链接实在太丑太直接：</p>
<blockquote>
<img src="/2016/09/16/hexo-ways-to-copy-code/codeblock.jpg" alt="codeblock.jpg" title="">
</blockquote>
<p>于是今天我拿css伪装一下，代码如下：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="code">    .copy&#123;</span></div><div class="line"><span class="code">        position:relative;</span></div><div class="line"><span class="code">        z-index:10;</span></div><div class="line"><span class="code">        color:#000;</span></div><div class="line"><span class="code">        font-size:13px;</span></div><div class="line"><span class="code">        margin:0px 11px -98px 0px;</span></div><div class="line"><span class="code">        text-align:right;</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="code">    .copy a&#123;</span></div><div class="line"><span class="code">        color:rgb(153,153,153);</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="xml"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"copy"</span>&gt;</span></span></div><div class="line"><span class="code">    &#123;% asset_link *.pas &#123;Plain Text&#125; %&#125;</span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">&#123;% codeblock lang:delphi *.pas %&#125;</div><div class="line">//code here</div><div class="line">&#123;% endcodeblock %&#125;</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<blockquote>
<img src="/2016/09/16/hexo-ways-to-copy-code/new.png" alt="new.png" title="">
</blockquote>
<p>写可以把这段css写进<strong>主题的css</strong>里，jacman下就是<code>/home/wd/Hexo/themes/jacman/source/css/_partial/article.styl</code></p>
<p>其实照着这个思路，可以通过直接<strong>插入js</strong>来实现copy to clipboard的函数，有时间再试一试。</p>
<h2 id="我的prob模板"><a href="#我的prob模板" class="headerlink" title="我的prob模板"></a>我的prob模板</h2><p>附一份用来写题解的scaffold以供参考。<br><figure class="highlight markdown"><figcaption><span>prob.md</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">tags: [OI]</div><div class="line"><span class="section">categories: Problem Set</span></div><div class="line">---</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="code">    .copy&#123;</span></div><div class="line"><span class="code">        position:relative;</span></div><div class="line"><span class="code">        z-index:10;</span></div><div class="line"><span class="code">        color:#000;</span></div><div class="line"><span class="code">        font-size:13px;</span></div><div class="line"><span class="code">        margin:0px 11px -98px 0px;</span></div><div class="line"><span class="code">        text-align:right;</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="code">    .copy a&#123;</span></div><div class="line"><span class="code">        color:rgb(153,153,153);</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="xml"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></div><div class="line"><span class="section">## 描述</span></div><div class="line"><span class="xml"><span class="comment">&lt;!--more--&gt;</span></span></div><div class="line"><span class="section">## 格式</span></div><div class="line"><span class="section">### 输入格式</span></div><div class="line"><span class="section">### 输出格式</span></div><div class="line"><span class="section">## 样例</span></div><div class="line"><span class="section">### 样例输入</span></div><div class="line"><span class="quote">&gt;</span></div><div class="line">### 样例输出</div><div class="line"><span class="quote">&gt;</span></div><div class="line">## 提示​</div><div class="line"><span class="section">## 题解</span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"copy"</span>&gt;</span></span></div><div class="line"><span class="code">    &#123;% asset_link *.pas &#123;Plain Text&#125; %&#125;</span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">&#123;% codeblock lang:delphi *.pas %&#125;</div><div class="line">//code here</div><div class="line">&#123;% endcodeblock %&#125;</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h2 id="改主题的css"><a href="#改主题的css" class="headerlink" title="改主题的css"></a>改主题的css</h2><p>上面提到了改主题的css以实现一些神奇的效果。<br>实现奇怪效果的一般步骤是：</p>
<ol>
<li>在浏览器下检查元素，考虑如何定位到某个元素（如查看class,id,name）</li>
<li>google实现这种效果的css代码</li>
<li>把它稍作修改copy到主题source的css源文件里</li>
</ol>
<p>比如说把上面实现的.copy类的css写进去<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.copy</span>&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">z-index</span>:<span class="number">10</span>;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#000</span>;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">13px</span>;</div><div class="line">    <span class="attribute">margin</span>:<span class="number">0px</span> <span class="number">11px</span> -<span class="number">98px</span> <span class="number">0px</span>;</div><div class="line">    <span class="attribute">text-align</span>:right;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.copy</span> <span class="selector-tag">a</span>&#123;</div><div class="line">    <span class="attribute">color</span>:<span class="built_in">rgb</span>(153,153,153);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.copy</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#000</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>还可以实现标题hover的动态下划线效果<br>转自此处：<a href="https://eyehere.net/2015/css-sliding-underline/" target="_blank" rel="external">目光博客</a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">padding-bottom</span>: <span class="number">2px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">background</span>: transparent;</div><div class="line">    <span class="attribute">transition</span>: width .<span class="number">5s</span> ease, background-color .<span class="number">5s</span> ease;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">background</span>: blue;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">padding-bottom</span>: <span class="number">2px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">background</span>: transparent;</div><div class="line">    <span class="attribute">transition</span>: width .<span class="number">5s</span> ease, background-color .<span class="number">5s</span> ease;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">background</span>: color-blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>另外关于jacman主题色的修改，<code>_config.yml</code>提供的<code>theme</code>属性并不能修改文本的颜色，我们考虑直接修改css即<code>theme/jacman/source/css/_base/varible.styl</code><br>详见：<a href="http://ppting.me/2015/01/26/change-jacman-theme/" target="_blank" rel="external">修改jacman主题色</a></p>
<p>好像跑题了==</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;优化源码复制&quot;&gt;&lt;a href=&quot;#优化源码复制&quot; class=&quot;headerlink&quot; title=&quot;优化源码复制&quot;&gt;&lt;/a&gt;优化源码复制&lt;/h2&gt;&lt;p&gt;之前在【&lt;a href=&quot;/2016/08/12/Hexo初体验/&quot; title=&quot;Hexo初体验&quot;&gt;Hexo初体验&lt;/a&gt;】中提到过&lt;strong&gt;代码复制到剪切板&lt;/strong&gt;的替代方案，就是用一个link链接到源码文件，这样做对于一个OIer来说，好处有三：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;便于管理源码&lt;/li&gt;
&lt;li&gt;方便复习模板题&lt;/li&gt;
&lt;li&gt;&lt;del&gt;显示逼格&lt;/del&gt;（雾）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Tinkering Note" scheme="https://cothrax.github.io/categories/Tinkering-Note/"/>
    
    
      <category term="CSS" scheme="https://cothrax.github.io/tags/CSS/"/>
    
      <category term="Hexo" scheme="https://cothrax.github.io/tags/Hexo/"/>
    
      <category term="Html" scheme="https://cothrax.github.io/tags/Html/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 打地鼠游戏</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-8-2-mouse/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-8-2-mouse/</id>
    <published>2016-09-15T14:42:22.000Z</published>
    <updated>2016-09-16T09:29:52.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>伟大的2320学长特别喜欢打地鼠游戏，这个游戏开始后，会在地板上冒出一些地鼠来，你可以用榔头去敲击这些地鼠，每个地鼠被敲击后，将会增加相应的游戏分值。可是，所有地鼠只会在地上出现一段时间（而且消失后再也不会出现），每个地鼠都在0时刻冒出，但停留的时间可能是不同的，而且每个地鼠被敲击后增加的游戏分值也可能是不同。<br>最近2320学长经常玩这个游戏，以至于敲击每个地鼠只要1秒。他在想如何敲击能使总分最大。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入包含3行，第一行包含一个整数n（1&lt;=n&lt;=100000）表示有n个地鼠从地上冒出来，第二行n个用空格分隔的整数表示每个地鼠冒出后停留的时间（Maxt&lt;=50000），第三行n个用空格分隔的整数表示每个地鼠被敲击后会增加的分值v（v&lt;=1000）。每行中第i个数都表示第i个地鼠的信息。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，最大分值。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>5 3 6 1 4<br>7 9 2 1 5</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>24</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>30%的数据保证n&lt;=100, t&lt;=500,v&lt;=50<br>60%的数据保证 n&lt;=10000,t&lt;=3000,v&lt;=500<br>100%的数据保证 n&lt;=100000,t&lt;=5000,v&lt;=1000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>以前在codevs上做过这道题，因为数据小写了背包</p>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-8-2-mouse/7166.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>7166.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,ans:longint;</div><div class="line">    t,w:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> longint;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> longint;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:longint)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x,tmp:longint;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=t[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> t[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> t[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=t[i];t[i]:=t[j];t[j]:=tmp;</div><div class="line">            tmp:=w[i];w[i]:=w[j];w[j]:=tmp;</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);m:=t[n];</div><div class="line">    fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=t[i] <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">            f[j]:=max(f[j],f[j-<span class="number">1</span>]+w[i]);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> ans:=max(ans,f[i]);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<p>但这次数据比较大，于是有两种贪心的思路</p>
<ul>
<li>按价值降序排列，1..n遍历，对于一个地鼠i，从t[i]..1遍历一遍，如果找到没有用过的1秒，用这1秒打这只地鼠。<br>但最坏复杂度为$O(maxT\cdot n)$，与dp相同</li>
</ul>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-8-2-mouse/mouse_che.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mouse_che.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,i,j:int;ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=a[random(r-l)+r];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i]&gt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j]&lt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(t[i],t[j]);swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line">    </div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mouse.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mouse.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        j:=t[i];</div><div class="line">        <span class="keyword">while</span> (j&gt;<span class="number">0</span>) <span class="keyword">and</span> used[j] <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">            inc(ans,a[i]);used[j]:=true;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<ul>
<li>按时间升序排列地鼠，1..n遍历，打地鼠并统计个数，如果个数超过当前时间，删除已打的地鼠中价值最小的，可以用堆维护。<br>复杂度为$O(NlogN)$</li>
</ul>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-8-2-mouse/mouse.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mouse.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    n,sz,i,cnt:int;ans:int64;</div><div class="line">    a,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">heapify</span><span class="params">(i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> l,r,s:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=i*<span class="number">2</span>;r:=i*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=sz) <span class="keyword">and</span> (h[l]&lt;h[i]) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=i;</div><div class="line">    <span class="keyword">if</span> (r&lt;=sz) <span class="keyword">and</span> (h[r]&lt;h[s]) <span class="keyword">then</span> s:=r;</div><div class="line">    <span class="keyword">if</span> i&lt;&gt;s <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        swap(h[i],h[s]);heapify(s);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">extract</span><span class="params">()</span>:</span>int;</div><div class="line"><span class="keyword">begin</span> extract:=h[<span class="number">1</span>];h[<span class="number">1</span>]:=h[sz];dec(sz);heapify(<span class="number">1</span>) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);h[sz]:=x;i:=sz;</div><div class="line">    <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> (h[i]&lt;h[i <span class="keyword">shr</span> <span class="number">1</span>]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        swap(h[i],h[i <span class="keyword">shr</span> <span class="number">1</span>]);i:=i <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=t[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> t[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> t[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(t[i],t[j]);swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mouse.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mouse.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    sz:=<span class="number">0</span>;cnt:=<span class="number">0</span>;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(cnt);inc(ans,a[i]);insert(a[i]);</div><div class="line">        <span class="keyword">while</span> cnt&gt;t[i] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            dec(cnt);dec(ans,extract);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;伟大的2320学长特别喜欢打地鼠游戏，这个游戏开始后，会在地板上冒出一些地鼠来，你可以用榔头去敲击这些地鼠，每个地鼠被敲击后，将会增加相应的游戏分值。可是，所有地鼠只会在地上出现一段时间（而且消失后再也不会出现），每个地鼠都在0时刻冒出，但停留的时间可能是不同的，而且每个地鼠被敲击后增加的游戏分值也可能是不同。&lt;br&gt;最近2320学长经常玩这个游戏，以至于敲击每个地鼠只要1秒。他在想如何敲击能使总分最大。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="堆" scheme="https://cothrax.github.io/tags/%E5%A0%86/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 交通</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-9-27-traffic/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-9-27-traffic/</id>
    <published>2016-09-15T12:55:31.000Z</published>
    <updated>2016-09-16T09:30:14.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>黄金大神国的首都位于hzwer河中的一座岛屿。一道上班的时候，成千上万辆汽车通过岛屿从西岸的住宅区（由桥连接岛的西部）到东岸的工业区（由桥连接岛的东部）。<br>该岛类似于矩形，它的边平行于主方向。故可将它看作是笛卡尔坐标系中的一个A*B的矩形，它的对角分别为（0, 0）和（A, B）。<br>岛上有n个交通节点（后宫建筑），编号为1…n，第i个节点坐标为(xi, yi)。如果一个节点的坐标为(0, y)，它就位于岛的西岸。类似的，坐标为(A, y)的节点位于岛的东岸。各个节点由街道连接，每条街道用线段连接两个节点。街道有单向行驶或双向行驶之分。除端点外任意两条街道都没有公共点。也没有桥梁或者隧道。<br>你不能对道路网络形状做任何其他假设。沿河岸的街道或节点可能没有入口或者出口街道。由于交通堵塞日趋严重，黄金大神想快速治理好他的国家，于是聘请你测试岛上当前的道路网是否足够。要求你写一个程序确定从岛的西岸的每个节点能够到达东岸的多少个节点。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行包含4个整数n, m, A, B，分别表示hzwer市中心的节点数，街道数和岛屿的尺寸。<br>接下来的n行，每行包含两个整数xi，yi (0≤xi≤A,0≤yi≤B)，表示第i个节点的坐标。任意两个节点的坐标都不相同。<br>再往下的m行表示街道，每条街道用3个整数ci, di, ki（1≤ci, di≤n, ci≠di, ki∈{1,2}），表示节点ci、di有街道连接，如果ki=1,表示从ci到di的街道是单向的，否则，这条街道可以双向行驶。每个无序对{ci, di}最多出现1次。<br>你可以假设西岸节点中至少有1个能够到达东岸的一些节点。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>为每个西岸节点输出1行，表示这个节点出发能够到达东岸的节点数目</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>12 13 7 9<br>0 1<br>0 3<br>2 2<br>5 2<br>7 1<br>7 4<br>7 6<br>7 7<br>3 5<br>0 5<br>0 9<br>3 9<br>1 3 2<br>3 2 1<br>3 4 1<br>4 5 1<br>5 6 1<br>9 3 1<br>9 4 1<br>9 7 1<br>9 12 2<br>10 9 1<br>11 12 1<br>12 8 1<br>12 10 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4<br>4<br>0<br>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，n, m≤6000<br>对于100%的数据，1≤n≤300000, 0≤m≤900000,1≤A,B≤10^9<br><img src="/2016/09/15/noip-2014-9-27-traffic/illu.png" alt="illu.png" title=""></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>第一遍看题目，发现除了两边的点以外的坐标毫无用处，然后yy缩点+各种数据结构的启发式合并，然后果断看了标程。<br>其实这个图的形式正是本题的关键所在：</p>
<blockquote>
<p>除端点外任意两条街道都没有公共点。也没有桥梁或者隧道。</p>
</blockquote>
<p>这是一个<strong>平面图</strong>：</p>
<blockquote>
<p>在图论中，平面图是可以画在平面上并且使得不同的边可以互不交叠的图。–Wikipedia</p>
</blockquote>
<p>先从西岸正向bfs，标记所有从西岸可达的点；对于可达点i，d[i]=1<br>考虑西岸的一个点i，记它能到达的东岸上最北边的点为u[i]，最南边的点为d[i]，那么，那么点i能够到达<strong>东岸上$y_j\in[y_{d[i]},y_{u[i]}]\ and\ d[j]=1$的所有点j</strong>：</p>
<blockquote>
<p>由于图上的边不能相交，<em>边i-&gt;u[i]</em>,<em>边i-&gt;d[i]</em>和<em>东岸</em>构成了一个封闭的三角形，位于其中的点j想与外界联通，必然要经过<span>$\{i,(a,d[i]),(a,u[i])\}$</span><!-- Has MathJax -->中的点，即与i连通<br>所以将东岸的点排序后，反向bfs，做两次标记算出d[i]和u[i]即可。</p>
</blockquote>
<p>平面图还有一些奇怪的性质，详见<a href="https://en.wikipedia.org/wiki/Planar_graph" target="_blank" rel="external">Wikipedia</a></p>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-9-27-traffic/traffic0.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>traffic0.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,next:int <span class="keyword">end</span>;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000010</span>] <span class="keyword">of</span> edge;</div><div class="line">    l,r,u,d,x,y,head,q:arr;</div><div class="line">    n,m,i,j,f,t,a,b:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f;g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(a,b,s:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> com:=((s=<span class="number">0</span>) <span class="keyword">and</span> (a&lt;b)) <span class="keyword">or</span> ((s=<span class="number">1</span>) <span class="keyword">and</span> (a&gt;b)) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(<span class="keyword">var</span> a:arr;l,r,s:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=y[a[random(r-l)+l]];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> com(y[a[i]],x,s) <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> com(x,y[a[j]],s) <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(a,i,r,s);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(a,l,j,s);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">(<span class="keyword">var</span> d:arr;s,k:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,v,u,h,t:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=s;d[s]:=k;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inc(h);i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]=-<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=k;</div><div class="line">                q[t]:=u;inc(t);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cal</span><span class="params">(<span class="keyword">var</span> d:arr)</span>;</span></div><div class="line"><span class="keyword">var</span> j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(d,sizeof(d),<span class="number">255</span>);</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> r[<span class="number">0</span>] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> d[r[j]]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> continue;</div><div class="line">        bfs(d,r[j],j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'traffic.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'traffic.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,a,b);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(x[i],y[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t,j);</div><div class="line">        add(f,t);<span class="keyword">if</span> j=<span class="number">2</span> <span class="keyword">then</span> add(t,f);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> x[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> inc(l[<span class="number">0</span>]);l[l[<span class="number">0</span>]]:=i <span class="keyword">end</span>;</div><div class="line">    qsort(l,<span class="number">1</span>,l[<span class="number">0</span>],<span class="number">1</span>);</div><div class="line">    fillchar(d,sizeof(d),<span class="number">255</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l[<span class="number">0</span>] <span class="keyword">do</span> </div><div class="line">        <span class="keyword">if</span> d[l[i]]=-<span class="number">1</span> <span class="keyword">then</span> bfs(d,l[i],<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> (x[i]=a) <span class="keyword">and</span> (d[i]=<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(r[<span class="number">0</span>]);r[r[<span class="number">0</span>]]:=i;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    m:=head[<span class="number">0</span>];</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> add(g[i].t,g[i].f);</div><div class="line">    qsort(r,<span class="number">1</span>,r[<span class="number">0</span>],<span class="number">0</span>);cal(d);</div><div class="line">    qsort(r,<span class="number">1</span>,r[<span class="number">0</span>],<span class="number">1</span>);cal(u);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l[<span class="number">0</span>] <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> u[l[i]]=-<span class="number">1</span> <span class="keyword">then</span> writeln(<span class="number">0</span>)</div><div class="line">        <span class="keyword">else</span> writeln(r[<span class="number">0</span>]-u[l[i]]+<span class="number">2</span>-d[l[i]]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;黄金大神国的首都位于hzwer河中的一座岛屿。一道上班的时候，成千上万辆汽车通过岛屿从西岸的住宅区（由桥连接岛的西部）到东岸的工业区（由桥连接岛的东部）。&lt;br&gt;该岛类似于矩形，它的边平行于主方向。故可将它看作是笛卡尔坐标系中的一个A*B的矩形，它的对角分别为（0, 0）和（A, B）。&lt;br&gt;岛上有n个交通节点（后宫建筑），编号为1…n，第i个节点坐标为(xi, yi)。如果一个节点的坐标为(0, y)，它就位于岛的西岸。类似的，坐标为(A, y)的节点位于岛的东岸。各个节点由街道连接，每条街道用线段连接两个节点。街道有单向行驶或双向行驶之分。除端点外任意两条街道都没有公共点。也没有桥梁或者隧道。&lt;br&gt;你不能对道路网络形状做任何其他假设。沿河岸的街道或节点可能没有入口或者出口街道。由于交通堵塞日趋严重，黄金大神想快速治理好他的国家，于是聘请你测试岛上当前的道路网是否足够。要求你写一个程序确定从岛的西岸的每个节点能够到达东岸的多少个节点。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="平面图" scheme="https://cothrax.github.io/tags/%E5%B9%B3%E9%9D%A2%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 人偶师</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-9-27-alice/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-9-27-alice/</id>
    <published>2016-09-15T09:18:05.000Z</published>
    <updated>2016-09-15T09:46:02.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>n点m双向边的图，每个点有2个状态：开和关。每次操作改变一个点的状态，以及与其有边直接相连的点的状态。问开启所有点至少需要多少次操作。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行2个整数n,m。<br>第二行n个整数，第i个数表示第i点的状态，0为关，1为开。<br>第3..m+2行，每行2个整数a,b，表示a和b直接相连，同一条边不会出现多次。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行一个整数k表示最少的操作次数，所有数据保证至少有一组可行解。<br>第二行k个整数，表示操作的点的编号。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 3<br>1 1 0 0<br>2 3<br>1 3<br>2 4</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>1 2 3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，1&lt;=n&lt;=10，0&lt;=m&lt;=40<br>对于60%的数据，1&lt;=n&lt;=30，0&lt;=m&lt;=100<br>对于100%的数据，1&lt;=n&lt;=40，0&lt;=m&lt;=500</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>图上的反转问题，可以联想到如下题目：</p>
<ol>
<li>最小权匹配（状压dp）：<a href="/2016/09/04/欢乐赛-2014-5-31/" title="P3密码锁">P3密码锁</a></li>
<li>部分枚举+贪心：<a href="/2016/08/25/POJ-P3279-Fliptile/" title="关灯游戏">关灯游戏</a></li>
<li>状压dp：<a href="/2016/08/17/JSOI2016-提高2班-位运算/" title="P4黑客的攻击">P4黑客的攻击</a></li>
<li><del>这是线段树：<a href="/2016/08/22/JSOI2016-提高1班-Day6/" title="P3小W开关灯">P3小W开关灯</a></del></li>
</ol>
<p>关于本题，由n≤40<del>很容易</del>是<strong>折半枚举</strong>。<br>方案和状态可以压成int64，于是可以用位运算优化。<br>用hash拉链存第一次dfs的结果，然后第二次反过来dfs。<br>还有就是pascal的一个坑，下面程序的输出结果是-2147483648<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> i,a:int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=<span class="number">31</span>;a:=<span class="number">1</span> <span class="keyword">shl</span> i;</div><div class="line">    <span class="keyword">write</span>(a);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure></p>
<p>原因是shl操作时默认参数1为longint，所以会发生溢出，要强转<code>a:=int64(1) shl int64(i)</code>，参考了<a href="https://stackoverflow.com/questions/8127693/how-can-i-get-a-result-larger-than-232-from-shl" target="_blank" rel="external">stackoverflow</a></p>
<dir style="text-align:right"><a href="/2016/09/15/noip-2014-9-27-alice/alice.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>alice.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> z=<span class="number">500009</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    h,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500010</span>] <span class="keyword">of</span> int64;</div><div class="line">    c,next:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500010</span>] <span class="keyword">of</span> int;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..z] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">41</span>] <span class="keyword">of</span> int64;</div><div class="line">    i,j,k,n,m,sz,cnt,mn:int;lb,h0,f0,ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lsh</span><span class="params">(a,b:int64)</span>:</span>int64;</div><div class="line"><span class="keyword">begin</span> lsh:=int64(a) <span class="keyword">shl</span> int64(b) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(h0,f0:int64;cnt:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=h0 <span class="keyword">mod</span> z;</div><div class="line">    inc(sz);h[sz]:=h0;f[sz]:=f0;c[sz]:=cnt;</div><div class="line">    next[sz]:=head[i];head[i]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(h0:int64)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=h0 <span class="keyword">mod</span> z;i:=head[i];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> h0=h[i] <span class="keyword">then</span> <span class="keyword">exit</span>(i);</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    query:=-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">print</span><span class="params">(ans:int64)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> ans&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        lb:=ans <span class="keyword">and</span> (-ans);</div><div class="line">        <span class="keyword">write</span>(round(ln(lb)/ln(<span class="number">2</span>))+<span class="number">1</span>,<span class="string">' '</span>);</div><div class="line">        dec(ans,lb);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (x=<span class="number">0</span>) <span class="keyword">and</span> (v=k+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span> insert(h0,f0,cnt);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> (x=<span class="number">1</span>) <span class="keyword">and</span> (v=n+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        i:=query(h0);</div><div class="line">        <span class="keyword">if</span> (i&lt;&gt;-<span class="number">1</span>) <span class="keyword">and</span> (c[i]+cnt&lt;mn) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            mn:=c[i]+cnt;</div><div class="line">            ans:=f[i] <span class="keyword">or</span> f0;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    h0:=h0 xor g[v];f0:=f0 <span class="keyword">or</span> lsh(<span class="number">1</span>,v-<span class="number">1</span>);inc(cnt);</div><div class="line">    dfs(v+<span class="number">1</span>,x);</div><div class="line">    h0:=h0 xor g[v];f0:=f0-lsh(<span class="number">1</span>,v-<span class="number">1</span>);dec(cnt);</div><div class="line">    dfs(v+<span class="number">1</span>,x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span> <span class="comment">&#123;main&#125;</span></div><div class="line">    assign(input,<span class="string">'alice.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'alice.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);h0:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);inc(h0,lsh(<span class="number">1</span>,i-<span class="number">1</span>)*j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> g[i]:=lsh(<span class="number">1</span>,i-<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,k);</div><div class="line">        inc(g[j],lsh(<span class="number">1</span>,k-<span class="number">1</span>));</div><div class="line">        inc(g[k],lsh(<span class="number">1</span>,j-<span class="number">1</span>));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    k:=n <span class="keyword">shr</span> <span class="number">1</span>;f0:=<span class="number">0</span>;cnt:=<span class="number">0</span>;sz:=<span class="number">0</span>;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    h0:=lsh(<span class="number">1</span>,n)-<span class="number">1</span>;f0:=<span class="number">0</span>;cnt:=<span class="number">0</span>;mn:=maxlongint;</div><div class="line">    dfs(k+<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">    </div><div class="line">    writeln(mn);print(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;n点m双向边的图，每个点有2个状态：开和关。每次操作改变一个点的状态，以及与其有边直接相连的点的状态。问开启所有点至少需要多少次操作。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="折半枚举" scheme="https://cothrax.github.io/tags/%E6%8A%98%E5%8D%8A%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="Hash" scheme="https://cothrax.github.io/tags/Hash/"/>
    
      <category term="位运算" scheme="https://cothrax.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 舞蹈课</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-9-13-dancingLessons/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-9-13-dancingLessons/</id>
    <published>2016-09-15T02:18:52.000Z</published>
    <updated>2016-09-15T02:46:17.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>有 n 个人参加一个舞蹈课。每个人的舞蹈技术由整数 来决定。在舞蹈课的开始,他们从左到右站成一排。当这一排中至少有一对相邻的异性时,舞蹈技术相差最小的那一对会出列并开始跳舞。如果相差最小的不止一对,那么最左边的那一对出列。一对异性出列之后,队伍中的空白按原顺序补上(即:若队伍为 ABCD,那么 BC 出列之后队伍变为 AD)。舞蹈技术相差最小即是 的绝对值最小。<br>你的任务是,模拟以上过程,确定跳舞的配对及顺序。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为正整数n(1≤n≤2*10e5):队伍中的人数。下一行包含 n 个字<br>符 B 或者 G,B 代表男,G 代表女。下一行为 n 个整数ai(ai≤10e7)有信息按照从左到右的顺序给出。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行:出列的总对数 k。接下来输出 k 行,每行是两个整数。按跳舞顺序输出,两个整数代表这一对舞伴的编号(按输入顺序从左往右 1 至 n 编号)。请先输出较小的整数,再输出较大的整数。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4<br>BGBG<br>4 2 4 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2<br>3 4<br>1 2</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>用堆维护最小值，元素的删除用链表维护。<br>关于最小堆中任意元素的删除：</p>
<ol>
<li>将该元素的值设成inf，然后heapify</li>
<li>注意在维护下标映射时，不考虑值为inf的元素</li>
<li>如果堆的size=0或堆顶元素为inf，则已经为空</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/15/noip-2014-9-13-dancingLessons/dancingLessons.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>classroomLessons.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=maxlongint <span class="keyword">shr</span> <span class="number">2</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    nh=<span class="keyword">record</span> l,r,d:int <span class="keyword">end</span>;</div><div class="line">    nl=<span class="keyword">record</span> l,r:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    hp:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> nh;</div><div class="line">    lk:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> nl;</div><div class="line">    lh,a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> char;</div><div class="line">    ans:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,sh,cnt,l1,r1,l2,r2:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(i,j:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:nh;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> hp[i].d&lt;&gt;inf <span class="keyword">then</span> lh[hp[i].l]:=j;</div><div class="line">    <span class="keyword">if</span> hp[j].d&lt;&gt;inf <span class="keyword">then</span> lh[hp[j].l]:=i;</div><div class="line">    tmp:=hp[i];hp[i]:=hp[j];hp[j]:=tmp;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(p,c:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    com:=(hp[p].d&lt;hp[c].d) <span class="keyword">or</span> </div><div class="line">        ((hp[p].d=hp[c].d) <span class="keyword">and</span> (hp[p].l&lt;hp[c].l));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">heapify</span><span class="params">(i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> l,r,s:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=i <span class="keyword">shl</span> <span class="number">1</span>;r:=l <span class="keyword">or</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=sh) <span class="keyword">and</span> com(l,i) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=i;</div><div class="line">    <span class="keyword">if</span> (r&lt;=sh) <span class="keyword">and</span> com(r,s) <span class="keyword">then</span> s:=r;</div><div class="line">    <span class="keyword">if</span> s&lt;&gt;i <span class="keyword">then</span> <span class="keyword">begin</span> swap(s,i);heapify(s) <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extract</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">begin</span> swap(<span class="number">1</span>,sh);dec(sh);heapify(<span class="number">1</span>) <span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">delete</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span> i:=lh[x];hp[i].d:=inf;heapify(i) <span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sh);lh[x]:=sh;</div><div class="line">    hp[sh].l:=x;hp[sh].r:=y;</div><div class="line">    hp[sh].d:=abs(a[x]-a[y]);</div><div class="line">    i:=sh;</div><div class="line">    <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> com(i,i <span class="keyword">shr</span> <span class="number">1</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        swap(i,i <span class="keyword">shr</span> <span class="number">1</span>);i:=i <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'dancingLessons.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'dancingLessons.out'</span>);rewrite(output);</div><div class="line">    readln(n);sh:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(g[i]);readln;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i]);</div><div class="line">        lk[i].l:=i-<span class="number">1</span>;lk[i].r:=i+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    lk[n].r:=<span class="number">0</span>;lk[<span class="number">0</span>].r:=<span class="number">1</span>;lk[<span class="number">0</span>].l:=n;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> g[i]&lt;&gt;g[i-<span class="number">1</span>] <span class="keyword">then</span> insert(i-<span class="number">1</span>,i);</div><div class="line">    cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (hp[<span class="number">1</span>].d&lt;&gt;inf) <span class="keyword">and</span> (sh&lt;&gt;<span class="number">0</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(cnt);</div><div class="line">        l1:=hp[<span class="number">1</span>].l;r1:=hp[<span class="number">1</span>].r;extract;</div><div class="line">        l2:=lk[l1].l;r2:=lk[r1].r;</div><div class="line">        <span class="keyword">if</span> (l2&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (g[l1]&lt;&gt;g[l2]) <span class="keyword">then</span> delete(l2);</div><div class="line">        <span class="keyword">if</span> (r2&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (g[r1]&lt;&gt;g[r2]) <span class="keyword">then</span> delete(r1);</div><div class="line">        <span class="keyword">if</span> (min(l2,r2)&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (g[l2]&lt;&gt;g[r2]) <span class="keyword">then</span></div><div class="line">            insert(l2,r2);</div><div class="line">        ans[cnt,<span class="number">0</span>]:=l1;ans[cnt,<span class="number">1</span>]:=r1;</div><div class="line">        lk[l2].r:=r2;lk[r2].l:=l2;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(cnt);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span> writeln(ans[i,<span class="number">0</span>],<span class="string">' '</span>,ans[i,<span class="number">1</span>]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;有 n 个人参加一个舞蹈课。每个人的舞蹈技术由整数 来决定。在舞蹈课的开始,他们从左到右站成一排。当这一排中至少有一对相邻的异性时,舞蹈技术相差最小的那一对会出列并开始跳舞。如果相差最小的不止一对,那么最左边的那一对出列。一对异性出列之后,队伍中的空白按原顺序补上(即:若队伍为 ABCD,那么 BC 出列之后队伍变为 AD)。舞蹈技术相差最小即是 的绝对值最小。&lt;br&gt;你的任务是,模拟以上过程,确定跳舞的配对及顺序。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="堆" scheme="https://cothrax.github.io/tags/%E5%A0%86/"/>
    
      <category term="链表" scheme="https://cothrax.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
</feed>
