<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cothrax</title>
  <subtitle>I don&#39;t need a subtitle.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cothrax.github.io/"/>
  <updated>2016-08-25T08:04:58.291Z</updated>
  <id>https://cothrax.github.io/</id>
  
  <author>
    <name>Cothrax</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[POJ] P3279 Fliptile</title>
    <link href="https://cothrax.github.io/2016/08/25/POJ-P3279-Fliptile/"/>
    <id>https://cothrax.github.io/2016/08/25/POJ-P3279-Fliptile/</id>
    <published>2016-08-25T07:51:58.000Z</published>
    <updated>2016-08-25T08:04:58.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>Farmer John knows that an intellectually satisfied cow is a happy cow who will give more milk. He has arranged a brainy activity for cows in which they manipulate an M × N grid (1 ≤ M ≤ 15; 1 ≤ N ≤ 15) of square tiles, each of which is colored black on one side and white on the other side.</p>
<p>As one would guess, when a single white tile is flipped, it changes to black; when a single black tile is flipped, it changes to white. The cows are rewarded when they flip the tiles so that each tile has the white side face up. However, the cows have rather large hooves and when they try to flip a certain tile, they also flip all the adjacent tiles (tiles that share a full edge with the flipped tile). Since the flips are tiring, the cows want to minimize the number of flips they have to make.</p>
<p>Help the cows determine the minimum number of flips required, and the locations to flip to achieve that minimum. If there are multiple ways to achieve the task with the minimum amount of flips, return the one with the least lexicographical ordering in the output when considered as a string. If the task is impossible, print one line with the word “IMPOSSIBLE”.</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>Line 1: Two space-separated integers: M and N<br>Lines 2..M+1: Line i+1 describes the colors (left to right) of row i of the grid with N space-separated integers which are 1 for black and 0 for white</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>Lines 1..M: Each line contains N space-separated integers, each specifying how many times to flip that particular location.<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 4<br>1 0 0 1<br>0 1 1 0<br>0 1 1 0<br>1 0 0 1</p>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>0 0 0 0<br>1 0 0 1<br>1 0 0 1<br>0 0 0 0</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这些牛玩的是ubuntu自带的小游戏叫关灯。<br>这是一个二维的反转问题，这在<a href="/2016/08/23/JSOI2016-提高2班-贪心/" title="贪心">贪心</a>中提到过。<br>考察点(i,j)，可以反转它的格子有5个，不便于处理，我么可以先枚举第一行的翻转方法，让后for i=2..n for j=1..m逐格枚举，这样每个格子是否要翻转就唯一确定了。<br>比如说(2,2)，由于(1,i)已知，(2,1)已经考察过了，能翻转(1,2)的只有(2,2)，于是如果(1,2)=1，那(2,2)就要翻转。<br>当全部考虑过后，如果发现最后一行还有为1个格子，那就无解。<br>另外第一行的方法可以用位运算表示。<br>可以用ac的程序玩游戏啦。<br><img src="/2016/08/25/POJ-P3279-Fliptile/game.png" alt="game.png" title=""></p>
<dir style="text-align:right"><a href="/2016/08/25/POJ-P3279-Fliptile/3279.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>3279.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=</div><div class="line">    ((<span class="number">0</span>,<span class="number">0</span>),(<span class="number">0</span>,<span class="number">1</span>),(<span class="number">1</span>,<span class="number">0</span>),(-<span class="number">1</span>,<span class="number">0</span>),(<span class="number">0</span>,-<span class="number">1</span>));</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,j,k,x,ans,cnt:int;i:int;</div><div class="line">    mat,tmp,opt,cur:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">16</span>,<span class="number">0</span>..<span class="number">16</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span> <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> min:=a <span class="keyword">else</span> min:=b <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">flip</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;p:^int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(cnt);inc(cur[x,y]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">4</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        p:=@mat[x+d[i,<span class="number">0</span>],y+d[i,<span class="number">1</span>]];</div><div class="line">        p^:=<span class="number">1</span>-p^;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(mat[i,j]);</div><div class="line">    </div><div class="line">    tmp:=mat;ans:=maxlongint;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">shl</span> m-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        j:=i;cnt:=<span class="number">0</span>;</div><div class="line">        fillchar(cur,sizeof(cur),<span class="number">0</span>);</div><div class="line">        <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            x:=j <span class="keyword">and</span> (-j);</div><div class="line">            flip(<span class="number">1</span>,round(ln(x)/ln(<span class="number">2</span>))+<span class="number">1</span>);</div><div class="line">            dec(j,x);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">                <span class="keyword">if</span> mat[j-<span class="number">1</span>,k]=<span class="number">1</span> <span class="keyword">then</span> flip(j,k);</div><div class="line">        </div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> mat[n,j]=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">                cnt:=maxlongint;</div><div class="line">                break; </div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> cnt&lt;ans <span class="keyword">then</span> <span class="keyword">begin</span> ans:=cnt;opt:=cur <span class="keyword">end</span>;</div><div class="line">        mat:=tmp;</div><div class="line">    <span class="keyword">end</span>; </div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ans=maxlongint <span class="keyword">then</span> <span class="keyword">write</span>(<span class="string">'IMPOSSIBLE'</span>)</div><div class="line">    <span class="keyword">else</span> </div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">write</span>(opt[i,j],<span class="string">' '</span>);</div><div class="line">            writeln;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;Farmer John knows that an intellectually satisfied cow is a happy cow who will give more milk. He has arranged a brainy activity for cows in which they manipulate an M × N grid (1 ≤ M ≤ 15; 1 ≤ N ≤ 15) of square tiles, each of which is colored black on one side and white on the other side.&lt;/p&gt;
&lt;p&gt;As one would guess, when a single white tile is flipped, it changes to black; when a single black tile is flipped, it changes to white. The cows are rewarded when they flip the tiles so that each tile has the white side face up. However, the cows have rather large hooves and when they try to flip a certain tile, they also flip all the adjacent tiles (tiles that share a full edge with the flipped tile). Since the flips are tiring, the cows want to minimize the number of flips they have to make.&lt;/p&gt;
&lt;p&gt;Help the cows determine the minimum number of flips required, and the locations to flip to achieve that minimum. If there are multiple ways to achieve the task with the minimum amount of flips, return the one with the least lexicographical ordering in the output when considered as a string. If the task is impossible, print one line with the word “IMPOSSIBLE”.&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;Line 1: Two space-separated integers: M and N&lt;br&gt;Lines 2..M+1: Line i+1 describes the colors (left to right) of row i of the grid with N space-separated integers which are 1 for black and 0 for white&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;Lines 1..M: Each line contains N space-separated integers, each specifying how many times to flip that particular location.&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高2班 DP</title>
    <link href="https://cothrax.github.io/2016/08/24/JSOI2016-%E6%8F%90%E9%AB%982%E7%8F%AD-DP/"/>
    <id>https://cothrax.github.io/2016/08/24/JSOI2016-提高2班-DP/</id>
    <published>2016-08-24T05:30:36.000Z</published>
    <updated>2016-08-24T08:02:31.659Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P1-飞扬的小鸟"><a href="#P1-飞扬的小鸟" class="headerlink" title="P1 飞扬的小鸟"></a>P1 飞扬的小鸟</h1><p>Flappy Bird 是一款风靡一时的休闲手机游戏。玩家需要不断控制点击手机屏幕的频率来调节小鸟的飞行高度，让小鸟顺利通过画面右方的管道缝隙。如果小鸟一不小心撞到了水管或者掉在地上的话，便宣告失败。<br><img src="/2016/08/24/JSOI2016-提高2班-DP/noip2014tgd1p3i1.jpg" alt="noip2014tgd1p3i1.jpg" title=""><br>为了简化问题，我们对游戏规则进行了简化和改编：</p>
<ol>
<li>游戏界面是一个长为 n，高为 m 的二维平面，其中有k 个管道（忽略管道的宽度）。</li>
<li>小鸟始终在游戏界面内移动。小鸟从游戏界面最左边 任意整数高度位置出发，到达游戏界面最右边时，游戏完成。</li>
<li>小鸟每个单位时间沿横坐标方向右移的距离为 1，竖直移动的距离由玩家控制。如果点击屏幕，小鸟就会上升一定高度 X，每个单位时间可以点击多次，效果叠加； 如果不点击屏幕，小鸟就会下降一定高度 Y。小鸟位于横坐标方向不同位置时，上 升的高度 X 和下降的高度 Y 可能互不相同。</li>
<li>小鸟高度等于 0 或者小鸟碰到管道时，游戏失败。小鸟高度为 m 时，无法再上升。</li>
</ol>
<p>现在，请你判断是否可以完成游戏。如果可以，输出最少点击屏幕数；否则，输出小鸟最多可以通过多少个管道缝隙。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第 1 行有 3 个整数 n，m，k，分别表示游戏界面的长度，高度和水管的数量，每两个 整数之间用一个空格隔开；<br>接下来的 n 行，每行 2 个用一个空格隔开的整数 X 和 Y，依次表示在横坐标位置 0~n-1 上玩家点击屏幕后，小鸟在下一位置上升的高度 X，以及在这个位置上玩家不点击屏幕时， 小鸟在下一位置下降的高度 Y。<br>接下来 k 行，每行 3 个整数 P，L，H，每两个整数之间用一个空格隔开。每行表示一个管道，其中 P 表示管道的横坐标，L 表示此管道缝隙的下边沿高度为 L，H 表示管道缝隙上边沿的高度（输入数据保证 P 各不相同，但不保证按照大小顺序给出）。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>共两行。<br>第一行，包含一个整数，如果可以成功完成游戏，则输出 1，否则输出 0。 第二行，包含一个整数，如果第一行为 1，则输出成功完成游戏需要最少点击屏幕数，否则，输出小鸟最多可以通过多少个管道缝隙。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>10 10 6<br>3 9<br>9 9<br>1 2<br>1 3<br>1 2<br>1 1<br>2 1<br>2 1<br>1 6<br>2 2<br>1 2 7<br>5 1 5<br>6 3 5<br>7 5 8<br>8 7 9<br>9 1 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>6</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 30%的数据：5≤n≤10，5≤m≤10，k=0，保证存在一组最优解使得同一单位时间最多点击屏幕 3 次；<br>对于 50%的数据：5≤n≤20，5≤m≤10，保证存在一组最优解使得同一单位时间最多点击屏幕 3 次；<br>对于 70%的数据：5≤n≤1000，5≤m≤100；<br>对于 100%的数据：<span>$5&le;n&le;10000,5&le;m&le;1000,0&le;k&lt;n,$</span><!-- Has MathJax --><br><span>$0&lt;X&lt;m,0&lt;Y&lt;m,0&lt;P&lt;n,0&le;L&lt;H&le;m,L+1&lt;H$</span><!-- Has MathJax -->。</p>
<p>如下图所示，蓝色直线表示小鸟的飞行轨迹，红色直线表示管道。<br><img src="/2016/08/24/JSOI2016-提高2班-DP/noip2014tgd1p3i2.png" alt="noip2014tgd1p3i2.png" title=""></p>
<p>NOIP2014 提高组 Day1</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>变形背包，几个注意点</p>
<ol>
<li>顶端要特判一下</li>
<li>以下方案是<strong>不可行</strong>的：对于第i列，<strong>只</strong>对不被管道覆盖的点做背包。<br>因为用了完全背包的$O(N^2)$优化，被管道覆盖的点是有可能作为中间值出现的，所以正确的方案是：<strong>先该列对所有做背包，然后把被管道覆盖的点标记为inf。</strong></li>
</ol>
<dir style="text-align:right"><a href="/2016/08/24/JSOI2016-提高2班-DP/pp1907.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>pp1907.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    n,m,k,i,i1,i0,j,cnt,ans:int;</div><div class="line">    x,y,lb,ub:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    flag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> boolean;b:boolean;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(x[i],y[i]);</div><div class="line">        lb[i]:=<span class="number">0</span>;ub[i]:=m+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(flag,sizeof(flag),false);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);<span class="keyword">read</span>(lb[j],ub[j]);</div><div class="line">        flag[j]:=true;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    filldword(f[<span class="number">0</span>],sizeof(f[<span class="number">0</span>]) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> f[<span class="number">0</span>,i]:=<span class="number">0</span>;</div><div class="line">    cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        i1:=i <span class="keyword">mod</span> <span class="number">2</span>;i0:=<span class="number">1</span>-i1;</div><div class="line">        filldword(f[i1],sizeof(f[i1]) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span>+x[i] <span class="keyword">to</span> m <span class="keyword">do</span> <span class="comment">//完全背包（上升）</span></div><div class="line">            f[i1,j]:=min(f[i1,j],min(f[i1,j-x[i]],f[i0,j-x[i]])+<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> x[i] <span class="keyword">do</span> <span class="comment">//特判顶点</span></div><div class="line">            f[i1,m]:=min(f[i1,m],min(f[i0,m-j],f[i1,m-j])+<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m-y[i] <span class="keyword">do</span> <span class="comment">//01背包（下落）</span></div><div class="line">            f[i1,j]:=min(f[i1,j],f[i0,j+y[i]]);</div><div class="line">        <span class="comment">//不可达的点标记为inf</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> lb[i] <span class="keyword">do</span> f[i1,j]:=inf;</div><div class="line">        <span class="keyword">for</span> j:=ub[i] <span class="keyword">to</span> m <span class="keyword">do</span> f[i1,j]:=inf;</div><div class="line">        <span class="comment">//判无解，和cnt更新</span></div><div class="line">        b:=false;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> f[i1,j]&lt;&gt;inf <span class="keyword">then</span> <span class="keyword">begin</span> b:=true;break <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> b <span class="keyword">then</span> break</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> flag[i] <span class="keyword">then</span> inc(cnt);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> b <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        ans:=inf;i1:=n <span class="keyword">mod</span> <span class="number">2</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> ans:=min(ans,f[i1,i]);</div><div class="line">        writeln(<span class="number">1</span>);<span class="keyword">write</span>(ans);</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        writeln(<span class="number">0</span>);<span class="keyword">write</span>(cnt);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-Sanguo"><a href="#P2-Sanguo" class="headerlink" title="P2 Sanguo"></a>P2 Sanguo</h1><p>After East Han dynasty, China was divided into several states. Wei, Wu, and Shu are the greatest three states among them. This was the era of Sanguo. During this period, wars frequently happened between states. Zhuge Liang, the commander and strategist of Shu, wanted to enlarge Shu’s power. He was considering conquering N cities. However, these cities must be defeated in a specified order. City-X could be defeated only after City-1, City-2, City-3 … City-(X-1) had been defeated. However, passing through the cities that had not been defeated was eligible. Zhuge wanted to use three generals, Guan Yu, Zhang Fei, and Zhao yun, each of whom should lead an army. The three armies, started from Yizhou, which was numbered with City-0. After conquered all the N cities (each cities must be conquered at least by one army), they had to return to Yizhou.<br>The N cities and Yizhou were connected by M bi-directed roads. To travel from city to city was a very boring and expensive thing. So Zhuge wanted to minimize the total length of the three armies’ traveling. You were hired to help him to compute the minimum total length of the traveling.</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>Line1: two integers N and M. N is the number of cities Zhuge wanted to conquer, and M is the number of roads between the N + 1 cities.<br>Line2…Line(M+1): each line contain 3 integers, X, Y, Len, indicating a road between City-X and City-Y, with the length of Len.<br>You can suppose that all the N + 1 cities are connected.<br>N ≤ 500, M ≤ 20000, Len ≤ 1000</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>Line1: an integer, which is the minimum total length of the three armies’ traveling.<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 15<br>5 5 48<br>1 4 658<br>4 0 843<br>1 4 41<br>1 4 330<br>5 2 864<br>4 2 115<br>4 0 303<br>2 3 685<br>0 0 879<br>1 5 649<br>2 4 942<br>4 0 379<br>5 2 769<br>5 1 856</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3668</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p><strong>图上DP+floyd+滚动数组</strong><br>跑floyd得任意两点最短路d[i,j]。<br>$f[i,j,k]$表示已经1..i的城市，三支部队分别在i,j,k(j,k&lt;=i)的最小路程。<br>$f[0,0,0]=0$<br>$f[i+1,j,k]=min(f[i+1,j,k],f[i,j,k]+d[i,i+1])$<br>$f[i+1,i,k]=min(f[i+1,i,k],f[i,j,k]+d[j,i+1])$<br>$f[i+1,i,j]=min(f[i+1,i,j],f[i,j,k]+d[k,i+1])$<br><span>$ans=min\{f[n,j,k]+d[n,0]+d[j,0]+d[k,0]\}$</span><!-- Has MathJax --><br>滚动数组注意每次用的时候，要<strong>初始化</strong>。</p>
<dir style="text-align:right"><a href="/2016/08/24/JSOI2016-提高2班-DP/3368.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>3368.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> n,m,i,j,k,tmp,ans,i0,i1:int;</div><div class="line">    d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">510</span>,<span class="number">0</span>..<span class="number">510</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">510</span>,<span class="number">0</span>..<span class="number">510</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    filldword(d,sizeof(d) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,k,tmp);</div><div class="line">        d[j,k]:=min(d[j,k],tmp);d[k,j]:=d[j,k];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> d[i,i]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">                d[i,j]:=min(d[i,j],d[i,k]+d[k,j]);</div><div class="line">    </div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        i0:=i <span class="keyword">mod</span> <span class="number">2</span>;i1:=<span class="number">1</span>-i0;</div><div class="line">        filldword(f[i1],sizeof(f[i1]) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> i <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> i <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                f[i1,j,k]:=min(f[i1,j,k],f[i0,j,k]+d[i,i+<span class="number">1</span>]);</div><div class="line">                f[i1,i,k]:=min(f[i1,i,k],f[i0,j,k]+d[j,i+<span class="number">1</span>]);</div><div class="line">                f[i1,j,i]:=min(f[i1,j,i],f[i0,j,k]+d[k,i+<span class="number">1</span>]);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=inf;i0:=n <span class="keyword">mod</span> <span class="number">2</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            ans:=min(ans,f[i0,i,j]+d[<span class="number">0</span>,n]+d[i,<span class="number">0</span>]+d[j,<span class="number">0</span>]);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-子矩阵"><a href="#P3-子矩阵" class="headerlink" title="P3 子矩阵"></a>P3 子矩阵</h1><p>给出如下定义：</p>
<ol>
<li>子矩阵：从一个矩阵当中选取某些行和某些列交叉位置所组成的新矩阵（保持行与 列的相对顺序）被称为原矩阵的一个子矩阵。<br>例如，下面左图中选取第 2、4 行和第 2、4、5 列交叉位置的元素得到一个 2*3 的子矩阵如右图所示。<img src="/2016/08/24/JSOI2016-提高2班-DP/noip2014pjp4.png" alt="noip2014pjp4.png" title=""></li>
<li>相邻的元素：矩阵中的某个元素与其上下左右四个元素（如果存在的话）是相邻的。</li>
<li>矩阵的分值：矩阵中每一对相邻元素之差的绝对值之和。</li>
</ol>
<p>本题任务：给定一个 n 行 m 列的正整数矩阵，请你从这个矩阵中选出一个 r 行 c 列的 子矩阵，使得这个子矩阵的分值最小，并输出这个分值。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含用空格隔开的四个整数 n，m，r，c，意义如问题描述中所述，每两个整数之间用一个空格隔开。<br>接下来的 n 行，每行包含 m 个用空格隔开的整数，用来表示问题描述中那个 n 行 m 列的矩阵。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出共 1 行，包含 1 个整数，表示满足题目描述的子矩阵的最小分值。<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 5 2 3<br>9 3 3 3 9<br>9 4 8 7 4<br>1 7 4 6 6<br>6 8 5 6 9<br>7 4 5 6 1</p>
<p>7 7 3 3<br>7 7 7 6 2 10 5<br>5 8 8 2 1 6 2<br>2 9 5 5 6 1 7<br>7 9 3 6 1 7 8<br>1 9 1 4 7 8 8<br>10 5 9 1 1 8 10<br>1 3 1 5 4 8 6</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>6</p>
<p>16</p>
</blockquote>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>对于 50%的数据，1 ≤ n ≤ 12, 1 ≤ m ≤ 12, 矩阵中的每个元素 1 ≤ a[i][j] ≤20；<br>对于 100%的数据，1 ≤ n ≤ 16, 1 ≤ m ≤ 16, 矩阵中的每个元素 1 ≤ a[i][j] ≤1000,1 ≤ r ≤ n, 1 ≤ c ≤ m。<br>时间限制：每一组测试数据1s。</p>
<p>NOIP2014 普及组</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>怎么普及组的DP写了这么久。。。<br>先<strong>dfs</strong>枚举选的<strong>行</strong><br>再在<strong>列</strong>上<strong>DP</strong><br>乍一看似乎是01背包，但发现前一列的选取对后一列是有影响的，所以不是。</p>
<p>f[i,j]选了i列，最后一列是j时的最小值<br>cal(i,j)：第i列和第j列放一起，在已知选的是哪几行时，横向相邻能产生的分值<br>v[i]：在已知选的哪几行时，第i列纵向相邻能产生的分值<br>方程长这样：$f[i,j]=f[i,k]+cal(k,i)+v[j] 0≤k≤j-1$<br>特别的$cal(0,i)=0$<br>答案是<span>$min\{f[c,i]\}$</span><!-- Has MathJax --></p>
<dir style="text-align:right"><a href="/2016/08/24/JSOI2016-提高2班-DP/p1914.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1914.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,r,c,i,j,ans:int;</div><div class="line">    mat:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">17</span>,<span class="number">0</span>..<span class="number">17</span>] <span class="keyword">of</span> int;</div><div class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">17</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(a,b:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> min(a,b)=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    cal:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span></div><div class="line">        inc(cal,abs(mat[s[i],a]-mat[s[i],b]));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    i,j,k,tmp:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">17</span>,<span class="number">0</span>..<span class="number">17</span>] <span class="keyword">of</span> int;</div><div class="line">    v:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">17</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(v,sizeof(v),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v[i]:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">2</span> <span class="keyword">to</span> r <span class="keyword">do</span></div><div class="line">            inc(v[i],abs(mat[s[j],i]-mat[s[j-<span class="number">1</span>],i]));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> c <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> j-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">                f[i,j]:=min(f[i,j],f[i-<span class="number">1</span>,k]+cal(j,k)+v[j]);</div><div class="line">    tmp:=inf;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> tmp:=min(tmp,f[c,i]);</div><div class="line">    ans:=min(tmp,ans);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(i,j:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> j&gt;r <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> i=n+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> j=r <span class="keyword">then</span> dp();</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    s[j+<span class="number">1</span>]:=i;</div><div class="line">    dfs(i+<span class="number">1</span>,j+<span class="number">1</span>);</div><div class="line">    dfs(i+<span class="number">1</span>,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m,r,c);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(mat[i,j]);</div><div class="line">    ans:=inf;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P1-飞扬的小鸟&quot;&gt;&lt;a href=&quot;#P1-飞扬的小鸟&quot; class=&quot;headerlink&quot; title=&quot;P1 飞扬的小鸟&quot;&gt;&lt;/a&gt;P1 飞扬的小鸟&lt;/h1&gt;&lt;p&gt;Flappy Bird 是一款风靡一时的休闲手机游戏。玩家需要不断控制点击手机屏幕的频率来调节小鸟的飞行高度，让小鸟顺利通过画面右方的管道缝隙。如果小鸟一不小心撞到了水管或者掉在地上的话，便宣告失败。&lt;br&gt;&lt;img src=&quot;/2016/08/24/JSOI2016-提高2班-DP/noip2014tgd1p3i1.jpg&quot; alt=&quot;noip2014tgd1p3i1.jpg&quot; title=&quot;&quot;&gt;&lt;br&gt;为了简化问题，我们对游戏规则进行了简化和改编：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;游戏界面是一个长为 n，高为 m 的二维平面，其中有k 个管道（忽略管道的宽度）。&lt;/li&gt;
&lt;li&gt;小鸟始终在游戏界面内移动。小鸟从游戏界面最左边 任意整数高度位置出发，到达游戏界面最右边时，游戏完成。&lt;/li&gt;
&lt;li&gt;小鸟每个单位时间沿横坐标方向右移的距离为 1，竖直移动的距离由玩家控制。如果点击屏幕，小鸟就会上升一定高度 X，每个单位时间可以点击多次，效果叠加； 如果不点击屏幕，小鸟就会下降一定高度 Y。小鸟位于横坐标方向不同位置时，上 升的高度 X 和下降的高度 Y 可能互不相同。&lt;/li&gt;
&lt;li&gt;小鸟高度等于 0 或者小鸟碰到管道时，游戏失败。小鸟高度为 m 时，无法再上升。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在，请你判断是否可以完成游戏。如果可以，输出最少点击屏幕数；否则，输出小鸟最多可以通过多少个管道缝隙。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第 1 行有 3 个整数 n，m，k，分别表示游戏界面的长度，高度和水管的数量，每两个 整数之间用一个空格隔开；&lt;br&gt;接下来的 n 行，每行 2 个用一个空格隔开的整数 X 和 Y，依次表示在横坐标位置 0~n-1 上玩家点击屏幕后，小鸟在下一位置上升的高度 X，以及在这个位置上玩家不点击屏幕时， 小鸟在下一位置下降的高度 Y。&lt;br&gt;接下来 k 行，每行 3 个整数 P，L，H，每两个整数之间用一个空格隔开。每行表示一个管道，其中 P 表示管道的横坐标，L 表示此管道缝隙的下边沿高度为 L，H 表示管道缝隙上边沿的高度（输入数据保证 P 各不相同，但不保证按照大小顺序给出）。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;共两行。&lt;br&gt;第一行，包含一个整数，如果可以成功完成游戏，则输出 1，否则输出 0。 第二行，包含一个整数，如果第一行为 1，则输出成功完成游戏需要最少点击屏幕数，否则，输出小鸟最多可以通过多少个管道缝隙。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高2班 贪心</title>
    <link href="https://cothrax.github.io/2016/08/23/JSOI2016-%E6%8F%90%E9%AB%982%E7%8F%AD-%E8%B4%AA%E5%BF%83/"/>
    <id>https://cothrax.github.io/2016/08/23/JSOI2016-提高2班-贪心/</id>
    <published>2016-08-23T07:15:25.000Z</published>
    <updated>2016-08-23T10:12:27.950Z</updated>
    
    <content type="html"><![CDATA[<p>贪心考的是RP，想对贪心策略就A了，想不到只有乱搞了。</p>
<h1 id="P1-拼点游戏"><a href="#P1-拼点游戏" class="headerlink" title="P1 拼点游戏"></a>P1 拼点游戏</h1><p>C和S两位同学一起玩拼点游戏。有一堆白色卡牌和一堆蓝色卡牌，每张卡牌上写了一个整数点数。C随机抽取n张白色卡牌，S随机抽取n张蓝色卡牌，他们进行n回合拼点，每次两人各出一张卡牌，点数大者获得三颗巧克力，小者获得一颗巧克力，如果点数相同，每人各得二颗巧克力，使用过的卡牌不得重复使用。已知C和S取到的卡牌点数，请编程计算S最多和最少能得到多少颗巧克力。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入包含多组测试数据。<br>每组测试数据的第一行是一个整数n(1&lt;=n&lt;=1000)，接下来一行是n个整数，表示C抽到的白色卡牌的点数，下一行也是n个整数，表示S抽到的蓝色卡牌的点数。<br>输入的最后以一个0表示结束。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>对每组数据，输出一行，内容是两个整数用空格格开，分别表示S最多和最少可获得的巧克力数。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3<br>92 83 71<br>95 87 74<br>2<br>20 20<br>20 20<br>2<br>20 19<br>22 18<br>0</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>9 5<br>4 4<br>4 4</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>第一个想到的是二分图匹配，但n≤1000 KM算法的复杂度是无法承受的。<br>其实是贪心，类似于田忌赛马。</p>
<ol>
<li>S的最小牌x&gt;C的最小牌y，先得3分。因为比x大的牌一定比x有更广的适用性，保留一定是更优的</li>
<li>S的最大牌x&gt;C的最大牌y，先得3分。因为如果s次大牌z比y小，不选x的话只能得1分，如果z也比y大，由于y是C的最大牌，取x和z是等价的。</li>
<li>上述都不满足，取S的最小牌消耗Y的最大牌</li>
</ol>
<p>最小得分就是4*n（总得分）-C的最大得分</p>
<dir style="text-align:right"><a href="/2016/08/23/JSOI2016-提高2班-贪心/2986.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>2986.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,i:int;</div><div class="line">    a,b:arr;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(<span class="keyword">var</span> a:arr;b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=a[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(a,i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(a,b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">solve</span><span class="params">(a,b:arr)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> la,lb,ra,rb,ans:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    la:=<span class="number">1</span>;lb:=<span class="number">1</span>;ra:=n;rb:=n;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (la&lt;=ra) <span class="keyword">and</span> (lb&lt;=rb) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> a[la]&lt;b[lb] <span class="keyword">then</span> <span class="keyword">begin</span> inc(ans,<span class="number">3</span>);inc(la);inc(lb) <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> a[ra]&lt;b[rb] <span class="keyword">then</span> <span class="keyword">begin</span> inc(ans,<span class="number">3</span>);dec(ra);dec(rb) <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> a[ra]=b[lb] <span class="keyword">then</span> <span class="keyword">begin</span> inc(ans,<span class="number">2</span>);dec(ra);inc(lb) <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">begin</span> inc(ans);dec(ra);inc(lb) <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    solve:=ans;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">while</span> n&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(b[i]);</div><div class="line">        qsort(a,<span class="number">1</span>,n);</div><div class="line">        qsort(b,<span class="number">1</span>,n);</div><div class="line">        writeln(solve(a,b),<span class="string">' '</span>,<span class="number">4</span>*n-solve(b,a));</div><div class="line">        <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-特殊密码锁"><a href="#P2-特殊密码锁" class="headerlink" title="P2 特殊密码锁"></a>P2 特殊密码锁</h1><p>有一种特殊的二进制密码锁，由n个相连的按钮组成（n&lt;30），按钮有凹/凸两种状态，用手按按钮会改变其状态。<br>然而让人头疼的是，当你按一个按钮时，跟它相邻的两个按钮状态也会反转。当然，如果你按的是最左或者最右边的按钮，该按钮只会影响到跟它相邻的一个按钮。<br>当前密码锁状态已知，需要解决的问题是，你至少需要按多少次按钮，才能将密码锁转变为所期望的目标状态。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>两行，给出两个由0、1组成的等长字符串，表示当前/目标密码锁状态，其中0代表凹，1代表凸。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>至少需要进行的按按钮操作次数，如果无法实现转变，则输出impossible。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>011<br>000</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>这是一个简单的反转问题<br>基于以下事实：</p>
<ol>
<li>按按钮的顺序是没有影响的</li>
<li>对于一个按钮被反转多次是多余的</li>
</ol>
<p>所以，从左到右扫一边，遇到不同的按钮i，将i..i+2反转，到n时如果不同说明无解。<br>还有一个细节，因为按第1个按钮会影响到第0个按钮，而第0个按钮的状态我们是不知道的，因此即使1..2个按钮的状态是正确的，我们也要尝试一下按第一个按钮，看看有没有更优解。</p>
<dir style="text-align:right"><a href="/2016/08/23/JSOI2016-提高2班-贪心/8469.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>8469.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> n,ans:int;</div><div class="line">    s,d:<span class="keyword">string</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">flip</span><span class="params">(<span class="keyword">var</span> s:<span class="keyword">string</span>;i:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    s[i]:=chr(ord(<span class="string">'1'</span>)+ord(<span class="string">'0'</span>)-ord(s[i]));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">solve</span><span class="params">(s,d:<span class="keyword">string</span>)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=<span class="number">1</span>;solve:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> i&lt;=n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (s[i]=d[i]) <span class="keyword">and</span> (i&lt;=n) <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">if</span> i&lt;n <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">for</span> j:=i <span class="keyword">to</span> min(i+<span class="number">2</span>,n) <span class="keyword">do</span> flip(s,j);</div><div class="line">            inc(solve);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(i);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> s[i]&lt;&gt;d[i] <span class="keyword">then</span> <span class="keyword">exit</span>(maxlongint);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    readln(s);readln(d);</div><div class="line">    n:=length(s);</div><div class="line">    ans:=solve(s,d);</div><div class="line">    flip(s,<span class="number">1</span>);flip(s,<span class="number">2</span>);</div><div class="line">    ans:=min(ans,solve(s,d)+<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> ans=maxlongint <span class="keyword">then</span> <span class="keyword">write</span>(<span class="string">'impossible'</span>) <span class="keyword">else</span> <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-电池的寿命"><a href="#P3-电池的寿命" class="headerlink" title="P3 电池的寿命"></a>P3 电池的寿命</h1><p>小S新买了一个掌上游戏机，这个游戏机由两节5号电池供电。为了保证能够长时间玩游戏，他买了很多5号电池，这些电池的生产商不同，质量也有差异，因而使用寿命也有所不同，有的能使用5个小时，有的可能就只能使用3个小时。显然如果他只有两个电池一个能用5小时一个能用3小时，那么他只能玩3个小时的游戏，有一个电池剩下的电量无法使用，但是如果他有更多的电池，就可以更加充分地利用它们，比如他有三个电池分别能用3、3、5小时，他可以先使用两节能用3个小时的电池，使用半个小时后再把其中一个换成能使用5个小时的电池，两个半小时后再把剩下的一节电池换成刚才换下的电池（那个电池还能用2.5个小时），这样总共就可以使用5.5个小时，没有一点浪费。<br>现在已知电池的数量和电池能够使用的时间，请你找一种方案使得使用时间尽可能的长。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入包含多组数据。每组数据包括两行，第一行是一个整数N (2 ≤ N ≤ 1000)，表示电池的数目，接下来一行是N个正整数表示电池能使用的时间。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>输入包含多组数据。每组数据包括两行，第一行是一个整数N (2 ≤ N ≤ 1000)，表示电池的数目，接下来一行是N个正整数表示电池能使用的时间。<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>3 5<br>3<br>3 3 5</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3.0<br>5.5</p>
</blockquote>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>记最长的电池长为mxl，所有电池长度加起来为sum<br>如果mxl&lt;=sum/2，那么答案是sum/2<br>否则答案是sum-mxl</p>
<dir style="text-align:right"><a href="/2016/08/23/JSOI2016-提高2班-贪心/2469.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>8469.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> n,i,j,sum,mxl:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">not</span> eof <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        readln(n);</div><div class="line">        mxl:=<span class="number">0</span>;sum:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(j);</div><div class="line">            mxl:=max(mxl,j);</div><div class="line">            inc(sum,j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        readln;</div><div class="line">        writeln(min((sum-mxl)/<span class="number">1</span>,sum/<span class="number">2</span>):<span class="number">0</span>:<span class="number">1</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P4-积木大赛"><a href="#P4-积木大赛" class="headerlink" title="P4 积木大赛"></a>P4 积木大赛</h1><p>春春幼儿园举办了一年一度的“积木大赛”。今年比赛的内容是搭建一座宽度为 n 的大厦，大厦可以看成由 n 块宽度为1的积木组成，第𝑖块积木的最终高度需要是hi。<br>在搭建开始之前，没有任何积木（可以看成 n 块高度为 0 的积木）。接下来每次操作，小朋友们可以选择一段连续区间[L,R]，然后将第 L 块到第 R 块之间（含第 L 块和第 R 块）所有积木的高度分别增加1。<br>小 M 是个聪明的小朋友，她很快想出了建造大厦的最佳策略，使得建造所需的操作次数最少。但她不是一个勤于动手的孩子，所以想请你帮忙实现这个策略，并求出最少的操作次数。</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入包含两行，第一行包含一个整数 n，表示大厦的宽度。<br>第二行包含 n 个整数，第i个整数为hi。</p>
<h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>仅一行，即建造所需的最少操作数。<br><!--more--></p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>2 3 4 1 2</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>5</p>
</blockquote>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>每个测试点1s。<br>其中一种可行的最佳方案,依次选择 [1,5] [1,3] [2,3] [3,3] [5,5]<br>对于 30%的数据，有1 ≤ n ≤ 10;<br>对于 70%的数据，有1 ≤ n ≤ 1000;<br>对于 100%的数据，有1 ≤ n ≤ 100000，0 ≤ hi ≤ 10000。</p>
<h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>显然我们希望一个区间尽量地长。<br>对于一块的高度h(i)<br>如果h(i+1)&lt;=h(i)，覆盖1..i的区间一定能覆盖h(i)，不用增加新区间。<br>否则，要覆盖h(i+1)-h(i)的高度差，新区间数=高度差。</p>
<dir style="text-align:right"><a href="/2016/08/23/JSOI2016-提高2班-贪心/p1844.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1844.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span> n,i,j,last,ans:longint;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    ans:=<span class="number">0</span>;last:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        inc(ans,max(<span class="number">0</span>,j-last));</div><div class="line">        last:=j;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P5-国王游戏"><a href="#P5-国王游戏" class="headerlink" title="P5 国王游戏"></a>P5 国王游戏</h1><p>恰逢H国国庆，国王邀请n位大臣来玩一个有奖游戏。首先，他让每个大臣在左、右手上面分别写下一个整数，国王自己也在左、右手上各写一个整数。然后，让这n位大臣排成一排，国王站在队伍的最前面。排好队后，所有的大臣都会获得国王奖赏的若干金币，每位大臣获得的金币数分别是：排在该大臣前面的所有人的左手上的数的乘积除以他自己右手上的数，然后向下取整得到的结果。<br>国王不希望某一个大臣获得特别多的奖赏，所以他想请你帮他重新安排一下队伍的顺序，使得获得奖赏最多的大臣，所获奖赏尽可能的少。注意，国王的位置始终在队伍的最前面。 </p>
<h2 id="格式-4"><a href="#格式-4" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含一个整数n，表示大臣的人数。<br>第二行包含两个整数a和b，之间用一个空格隔开，分别表示国王左手和右手上的整数。接下来n行，每行包含两个整数a和b，之间用一个空格隔开，分别表示每个大臣左手和右手上的整数。 </p>
<h2 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出只有一行，包含一个整数，表示重新排列后的队伍中获奖赏最多的大臣所获得的金币数。<br><!--more--></p>
<h2 id="样例-4"><a href="#样例-4" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3<br>1 1<br>2 3<br>7 4<br>4 6 </p>
</blockquote>
<h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><p>每个测试点1s<br>对于20%的数据，有1≤ n≤ 10，0 &lt; a×b &lt; 8；<br>对于40%的数据，有1≤ n≤20，0 &lt; a×b &lt; 8；<br>对于60%的数据，有1≤ n≤100；<br>对于60%的数据，保证答案不超过10^9；<br>对于100%的数据，有1 ≤ n ≤1,000，0 &lt; a、b &lt; 10000。<br>Noip2012提高组复赛Day1T2</p>
<h2 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h2><p>首先这题是一个很隐蔽的<strong>贪心</strong>，能不能看出来要看水（R）平（P）<br>其实数据范围中给了暗示：<strong>a×b</strong><br>记相邻的两个人左右手为(a,b)和(A,B)，记这两个人之前的人左手乘积S<br>(a,b)在前，最多金币值为a1=max(S/b,S×a/B)<br>(A,B)在前，最多为a2=max(S/B,S×A/b)<br>显然：S/B&lt;S×a/B，S/b&lt;S×A/b<br>要使得a1&lt;a2，则S×a/B&lt;S×A/b<br>变形后：a×b&lt;A×B<br>所以<strong>左右手乘积</strong>大的人，排在前面得到的金币数多，为了使得金币数最大值最小，按左右手乘积<strong>升序排列</strong>，然后上<strong>高精度</strong>。<br>注意：print时对a[i]用ln算位数，<strong>要确保a[i]≠0</strong>，否则RE</p>
<dir style="text-align:right"><a href="/2016/08/23/JSOI2016-提高2班-贪心/p1779.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1779.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    big=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int64;</div><div class="line">    int=longint;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    bs:int64=<span class="number">100000000</span>;</div><div class="line">    k=<span class="number">8</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i:int;</div><div class="line">    tmp,ans,prob:big;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;a[<span class="number">0</span>]:=a[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i,<span class="number">0</span>]*a[i,<span class="number">1</span>]&lt;a[<span class="number">0</span>,<span class="number">0</span>]*a[<span class="number">0</span>,<span class="number">1</span>] <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j,<span class="number">0</span>]*a[j,<span class="number">1</span>]&gt;a[<span class="number">0</span>,<span class="number">0</span>]*a[<span class="number">0</span>,<span class="number">1</span>] <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i,<span class="number">0</span>],a[j,<span class="number">0</span>]);swap(a[i,<span class="number">1</span>],a[j,<span class="number">1</span>]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(a,b:big)</span>:</span>int64;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=max(a[<span class="number">0</span>],b[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">while</span> (a[i]=b[i]) <span class="keyword">and</span> (i&gt;<span class="number">0</span>) <span class="keyword">do</span> dec(i);</div><div class="line">    com:=a[i]-b[i];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span><span class="params">(a:big;b:int)</span>:</span>big;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(mul,sizeof(mul),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> a[<span class="number">0</span>] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(mul[i],a[i]*b);</div><div class="line">        inc(mul[i+<span class="number">1</span>],mul[i] <span class="keyword">div</span> bs);</div><div class="line">        mul[i]:=mul[i] <span class="keyword">mod</span> bs;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    mul[<span class="number">0</span>]:=a[<span class="number">0</span>];</div><div class="line">    <span class="keyword">while</span> mul[mul[<span class="number">0</span>]+<span class="number">1</span>]&gt;<span class="number">0</span> <span class="keyword">do</span> inc(mul[<span class="number">0</span>]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sdiv</span><span class="params">(a:big;b:int)</span>:</span>big;</div><div class="line"><span class="keyword">var</span> m:int64;i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(sdiv,sizeof(sdiv),<span class="number">0</span>);</div><div class="line">    m:=<span class="number">0</span>;</div><div class="line">    sdiv[<span class="number">0</span>]:=a[<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> i:=a[<span class="number">0</span>] <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        sdiv[i]:=(m*bs+a[i]) <span class="keyword">div</span> b;</div><div class="line">        m:=(m*bs+a[i]) <span class="keyword">mod</span> b;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> (sdiv[sdiv[<span class="number">0</span>]]=<span class="number">0</span>) <span class="keyword">and</span> (sdiv[<span class="number">0</span>]&gt;<span class="number">0</span>) <span class="keyword">do</span> dec(sdiv[<span class="number">0</span>]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">print</span><span class="params">(a:big)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> a[<span class="number">0</span>]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="number">0</span>);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(a[a[<span class="number">0</span>]]);</div><div class="line">    <span class="keyword">for</span> i:=a[<span class="number">0</span>]-<span class="number">1</span> <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> a[i]=<span class="number">0</span> <span class="keyword">then</span> x:=<span class="number">1</span> <span class="keyword">else</span> x:=floor(ln(a[i])/ln(<span class="number">10</span>))+<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> k-x <span class="keyword">do</span> <span class="keyword">write</span>(<span class="number">0</span>);</div><div class="line">        <span class="keyword">write</span>(a[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'p1779.in'</span>);reset(input);</div><div class="line">    <span class="keyword">read</span>(n);inc(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i,<span class="number">0</span>],a[i,<span class="number">1</span>]);</div><div class="line">    qsort(<span class="number">2</span>,n);</div><div class="line">    ans[<span class="number">0</span>]:=<span class="number">0</span>;prob[<span class="number">0</span>]:=<span class="number">1</span>;prob[<span class="number">1</span>]:=a[<span class="number">1</span>,<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        tmp:=sdiv(prob,a[i,<span class="number">1</span>]);</div><div class="line">        <span class="keyword">if</span> com(tmp,ans)&gt;<span class="number">0</span> <span class="keyword">then</span> ans:=tmp;</div><div class="line">        prob:=mul(prob,a[i,<span class="number">0</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    print(ans);</div><div class="line">    close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;贪心考的是RP，想对贪心策略就A了，想不到只有乱搞了。&lt;/p&gt;
&lt;h1 id=&quot;P1-拼点游戏&quot;&gt;&lt;a href=&quot;#P1-拼点游戏&quot; class=&quot;headerlink&quot; title=&quot;P1 拼点游戏&quot;&gt;&lt;/a&gt;P1 拼点游戏&lt;/h1&gt;&lt;p&gt;C和S两位同学一起玩拼点游戏。有一堆白色卡牌和一堆蓝色卡牌，每张卡牌上写了一个整数点数。C随机抽取n张白色卡牌，S随机抽取n张蓝色卡牌，他们进行n回合拼点，每次两人各出一张卡牌，点数大者获得三颗巧克力，小者获得一颗巧克力，如果点数相同，每人各得二颗巧克力，使用过的卡牌不得重复使用。已知C和S取到的卡牌点数，请编程计算S最多和最少能得到多少颗巧克力。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入包含多组测试数据。&lt;br&gt;每组测试数据的第一行是一个整数n(1&amp;lt;=n&amp;lt;=1000)，接下来一行是n个整数，表示C抽到的白色卡牌的点数，下一行也是n个整数，表示S抽到的蓝色卡牌的点数。&lt;br&gt;输入的最后以一个0表示结束。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;对每组数据，输出一行，内容是两个整数用空格格开，分别表示S最多和最少可获得的巧克力数。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="高精度" scheme="https://cothrax.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
      <category term="Maths" scheme="https://cothrax.github.io/tags/Maths/"/>
    
  </entry>
  
  <entry>
    <title>折腾Ubuntu</title>
    <link href="https://cothrax.github.io/2016/08/22/%E6%8A%98%E8%85%BEUbuntu/"/>
    <id>https://cothrax.github.io/2016/08/22/折腾Ubuntu/</id>
    <published>2016-08-22T13:00:50.000Z</published>
    <updated>2016-08-24T10:56:42.241Z</updated>
    
    <content type="html"><![CDATA[<p>noi_linux所用的ubuntu版本已经不被官方支持了，于是apt-get都无法正常工作，旧版的firefox无法解析各大OJ的css3/h5，于是试试Ubuntu。<br>以此日志记录一个下午的各种BUG和解决方案。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>之前用U盘启动盘装Linux失败了无数次，症状是进了loading界面，然后黑屏，光标闪了几秒后系统就休眠了，风扇还在转但不见动静。<br>我的解决方案是：</p>
<ol>
<li>换低版本的Ubuntu，用了32位的Ubuntu 14。</li>
<li>用Win32 Disk Imager。之前用的UltraISO和Universal USB Installer都失败了。</li>
<li>经过前面的步骤，能进选择界面了，然后按F6，把<code>nomodeset</code>选上，就可以install Ubuntu了。<a id="more"></a>
</li>
</ol>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="GMONE"><a href="#GMONE" class="headerlink" title="GMONE"></a>GMONE</h3><p>noi_linux的桌面是gnome，而ubuntu 14默认桌面的unity。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install gnome</div></pre></td></tr></table></figure></p>
<p>然后注销，在登陆时选一下就可以了。</p>
<h3 id="切换root"><a href="#切换root" class="headerlink" title="切换root"></a>切换root</h3><p>每次都要sudo很不爽，于是切换到root，passwd后设置新的root密码，su后输入密码就可以了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo passwd</div><div class="line">su</div></pre></td></tr></table></figure>
<p><strong>下文的命令都是以root执行的</strong></p>
<p>还可以切换回普通用户，两个都可以<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">exit</span></div><div class="line">su user_name</div></pre></td></tr></table></figure></p>
<h3 id="改hosts"><a href="#改hosts" class="headerlink" title="改hosts"></a>改hosts</h3><p>科学上网可以用vpn，当然如果需求比较低的话，性价比最高的是hosts<br>linux的hosts的位置是<code>/etc/hosts</code><br>记得刷新dns<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/networking restart</div></pre></td></tr></table></figure></p>
<h3 id="安装Node-js等"><a href="#安装Node-js等" class="headerlink" title="安装Node.js等"></a>安装Node.js等</h3><p>这篇日志发自Ubuntu，要用Hexo就需要Node.js</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt-get update  </div><div class="line">apt-get install -y python-software-properties software-properties-common  </div><div class="line">add-apt-repository ppa:chris-lea/node.js</div><div class="line">apt-get update  </div><div class="line">apt-get install nodejs</div></pre></td></tr></table></figure>
<h4 id="npm换源"><a href="#npm换源" class="headerlink" title="npm换源"></a>npm换源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm config <span class="built_in">set</span> registry http://registry.cnpmjs.org</div><div class="line">npm info express</div></pre></td></tr></table></figure>
<h4 id="装GIT和HEXO"><a href="#装GIT和HEXO" class="headerlink" title="装GIT和HEXO"></a>装GIT和HEXO</h4><p><code>-g</code>选项指默认安装到<code>/usr/lib/node_modules/npm</code>下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt-get install git-core</div><div class="line">npm install -g hexo</div><div class="line">npm install -g hexo-math</div></pre></td></tr></table></figure></p>
<h4 id="更新node-js"><a href="#更新node-js" class="headerlink" title="更新node.js"></a>更新node.js</h4><p>然后似乎报了<code>TypeError: Object #&lt;Object&gt; has no method &#39;parse&#39;</code>错误，google了一下好像是因为node版本低了，于是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm cache clean <span class="_">-f</span></div><div class="line">npm install -g n</div><div class="line">n stable</div></pre></td></tr></table></figure></p>
<h3 id="添加path"><a href="#添加path" class="headerlink" title="添加path"></a>添加path</h3><p>因为没有忘记加<code>-g</code>，报<code>Hexo command not found</code>，于是手动将hexo的bin加到path里，gedit打开后添加<code>PATH=$PATH:$HOME/bin:/home/cothrax/Hexo/node_modules/hexo/bin</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gedit ~/.bash_profile</div><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure></p>
<h3 id="设置命令别名"><a href="#设置命令别名" class="headerlink" title="设置命令别名"></a>设置命令别名</h3><p>有些命令很长每次都要敲不方便，于是再<code>~/</code>下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">touch .bash_aliases</div><div class="line">gedit .bash_aliases</div><div class="line"><span class="built_in">source</span> .bash_aliases</div></pre></td></tr></table></figure></p>
<p>编辑时写入alias，比如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> chrome=<span class="string">'chromium-browser &amp;'</span></div><div class="line"><span class="built_in">alias</span> ff=<span class="string">'firefox &amp;'</span></div><div class="line"><span class="built_in">alias</span> en=<span class="string">'firefox https://app.yinxiang.com/Home.action &amp;'</span></div><div class="line"><span class="built_in">alias</span> opdir=<span class="string">'nautilus'</span></div></pre></td></tr></table></figure></p>
<h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><p>每次都要敲很长的路径名，不如设一下环境变量，同样在<code>~/.bash_aliases</code>写入，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> BLOG=<span class="string">'/home/wd/Hexo/'</span></div><div class="line"><span class="built_in">export</span> POST=<span class="string">'/home/wd/Hexo/source/_posts/'</span></div></pre></td></tr></table></figure></p>
<h3 id="安装Brother打印机驱动"><a href="#安装Brother打印机驱动" class="headerlink" title="安装Brother打印机驱动"></a>安装Brother打印机驱动</h3><p>Brother提供了LINUX版本的驱动，到官网找Driver Install Tool，或者google设备号就能找到。<br>比如我的港版L2700D在：<a href="http://support.brother.com/g/b/downloadlist.aspx?c=hk&amp;lang=en&amp;prod=mfcl2700d_as&amp;os=128" target="_blank" rel="external">http://support.brother.com/g/b/downloadlist.aspx?c=hk&amp;lang=en&amp;prod=mfcl2700d_as&amp;os=128</a><br>然后root身份运行脚本就可以了，先输入设备好查询deb包，然后N个y同意协议，然后问你要不要specify device URI，选n就好了（不是那是什么），然后test page就打印出来了。</p>
<h3 id="切换应用程序快捷键"><a href="#切换应用程序快捷键" class="headerlink" title="切换应用程序快捷键"></a>切换应用程序快捷键</h3><p>gnome compiz下这个快捷键似乎坏了，系统设置里选了也没用。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install compizconfig-settings-manager</div></pre></td></tr></table></figure></p>
<p>应用程序-&gt;系统工具-&gt;Preference -&gt; CompizConfig Setting Manager，点左侧 窗口管理，勾选右面的“static application switch”</p>
<h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>装了14想升到16，于是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get dist-upgrade</div><div class="line">sudo reboot</div><div class="line">sudo update-manager –d</div></pre></td></tr></table></figure></p>
<p>当然以上操作也可以在图形界面下完成，系统工具里有软件包更新，Administration里有软件更新器<br>然后重启后，再进ubuntu时黑屏了，都做好重装的准备了，然后在win下把easybcd的ubuntu引导删掉重加一下就好了。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="USB容量丢失"><a href="#USB容量丢失" class="headerlink" title="USB容量丢失"></a>USB容量丢失</h3><p>原来30G的U盘做了启动盘后还剩1.03G囧。<br>找Win下的磁盘管理却不能删除卷，然后用<a href="http://www.diskgenius.cn/download.php" target="_blank" rel="external">Disk Genius</a>解决啦。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;noi_linux所用的ubuntu版本已经不被官方支持了，于是apt-get都无法正常工作，旧版的firefox无法解析各大OJ的css3/h5，于是试试Ubuntu。&lt;br&gt;以此日志记录一个下午的各种BUG和解决方案。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;之前用U盘启动盘装Linux失败了无数次，症状是进了loading界面，然后黑屏，光标闪了几秒后系统就休眠了，风扇还在转但不见动静。&lt;br&gt;我的解决方案是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;换低版本的Ubuntu，用了32位的Ubuntu 14。&lt;/li&gt;
&lt;li&gt;用Win32 Disk Imager。之前用的UltraISO和Universal USB Installer都失败了。&lt;/li&gt;
&lt;li&gt;经过前面的步骤，能进选择界面了，然后按F6，把&lt;code&gt;nomodeset&lt;/code&gt;选上，就可以install Ubuntu了。
    
    </summary>
    
      <category term="Tinkering Note" scheme="https://cothrax.github.io/categories/Tinkering-Note/"/>
    
    
      <category term="Bash" scheme="https://cothrax.github.io/tags/Bash/"/>
    
      <category term="Linux" scheme="https://cothrax.github.io/tags/Linux/"/>
    
      <category term="Hexo" scheme="https://cothrax.github.io/tags/Hexo/"/>
    
      <category term="Ubuntu" scheme="https://cothrax.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班 Day6</title>
    <link href="https://cothrax.github.io/2016/08/22/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day6/"/>
    <id>https://cothrax.github.io/2016/08/22/JSOI2016-提高1班-Day6/</id>
    <published>2016-08-22T04:05:46.000Z</published>
    <updated>2016-08-22T04:29:57.956Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目名称</th>
<th style="text-align:center">小W买礼物</th>
<th style="text-align:center">小W理笔记</th>
<th style="text-align:center">小W开关灯</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">存盘文件名</td>
<td style="text-align:center">bday</td>
<td style="text-align:center">note</td>
<td style="text-align:center">lites</td>
</tr>
<tr>
<td style="text-align:center">输入文件名</td>
<td style="text-align:center">bday.in</td>
<td style="text-align:center">note.in</td>
<td style="text-align:center">lites.in</td>
</tr>
<tr>
<td style="text-align:center">输出文件名</td>
<td style="text-align:center">bday.out</td>
<td style="text-align:center">note.out</td>
<td style="text-align:center">lites.out</td>
</tr>
<tr>
<td style="text-align:center">时限</td>
<td style="text-align:center">3s</td>
<td style="text-align:center">1s</td>
<td style="text-align:center">1s</td>
</tr>
<tr>
<td style="text-align:center">内存限制</td>
<td style="text-align:center">64MB</td>
<td style="text-align:center">256MB</td>
<td style="text-align:center">256MB</td>
</tr>
</tbody>
</table>
<h1 id="P1-小W买礼物"><a href="#P1-小W买礼物" class="headerlink" title="P1 小W买礼物"></a>P1 小W买礼物</h1><p>小W 今天很高兴，因为商店给OIer 们发购物券了。小W 得到了一些价值不菲的SHOP<br>购物券，所以他决定买N 件礼物送给小M。<br>当小W 选好了N 件礼物，高兴地去结账时，他突然发现SHOP 对购物券的使用有非常奸<br>商（天下哪有免费的购物券？）的规定：一次只允许使用一张、不找零、不与现金混用。小<br>W 身上根本没有现金，并且他不愿意全部放弃挑选好的礼物。这就意味着，他只能通过这些<br>购物券结账，而且这张购物券所购买的物品的总价格，必须精确的等于这张购物券的面额。<br>怎么样才能顺利的买回这N 件礼物中的部分或全部送给小M 呢？<br>你的任务就是帮助小W 确定是否存在一个购买方案。小W 会告诉你每张购物券的面额以<br>及所有商品的价格，对每张购物券，你只需要确定能否找到一种选礼物方案，使得选出来的<br>礼物的价格总和正好是这张购物券的面额即可。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件bday.in 中有多组数据，每组数据的第一行为两个整数N 和M，分别表示小W<br>一共挑选了N 件礼物以及小W 的一张购物券的面额为M。接下来一行有N 个用空格隔开的正<br>整数，第I 个数表示第I 个礼物的价格。<br>输入数据以0 0 结束。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出文件bday.out 包含若干行，每行一个单词“YES”或者“NO”，分别代表存在一个<br>购买方案和不存在一个购买方案。</p>
<a id="more"></a>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>10 2000<br>1000 100 200 300 400 500 700 600 900 800<br>10 2290<br>1000 100 200 300 400 500 700 600 900 800<br>0 0</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>YES<br>NO</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于30%的输入文件，所有的N≤20。<br>对于100%的输入文件，所有的N≤40，并且M 和物品的总价值不超过2^31-1，测试组<br>数不超过10 组，不少于5 组。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>m很大，背包显然不行，考虑到n很小，<strong>折半枚举</strong>。<br>记k=n div 2<br>枚举1..k的所有组合存入<strong>hash表</strong><br>枚举k+1..n的所有组合，对于每一个组合w查询hash表中m-w的值是否存在。<br>hash不要开太大，小心MLE，可以用拉链+数组模拟指针来实现。<br>当然也可以不用hash，前一半存入数组，排序，在枚举后一半时<strong>二分查找</strong></p>
<p>自己的错误点</p>
<ol>
<li>所有物品都枚举完后（x=k+1/x=n+1）才能插入/查询hash。</li>
<li>习惯用h[0]保存表的大小，但hash值=k mod sz是有可能为0的，所以不行。</li>
</ol>
<dir style="text-align:right"><a href="/2016/08/22/JSOI2016-提高1班-Day6/bday.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>bday.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> </div><div class="line">    maxn=<span class="number">1024</span>*<span class="number">1024</span>+<span class="number">10</span>;</div><div class="line">    sz=<span class="number">500009</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    node=<span class="keyword">record</span> i,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..sz] <span class="keyword">of</span> int;</div><div class="line">    t:<span class="keyword">array</span>[<span class="number">0</span>..maxn] <span class="keyword">of</span> node;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">41</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,hsz,i,k:int;flag:boolean;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hash</span><span class="params">(k:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span> hash:=k <span class="keyword">mod</span> sz <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(k:int)</span>;</span></div><div class="line"><span class="keyword">var</span> j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(hsz);</div><div class="line">    j:=hash(k);</div><div class="line">    t[hsz].next:=h[j];t[hsz].i:=k;</div><div class="line">    h[j]:=hsz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(k:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> k&lt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">    i:=h[hash(k)];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> t[i].i=k <span class="keyword">then</span> <span class="keyword">exit</span>(true);</div><div class="line">        i:=t[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    query:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(x,w,s:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> flag <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> (s=<span class="number">0</span>) <span class="keyword">and</span> (x=k+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span> insert(w);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> (s=<span class="number">1</span>) <span class="keyword">and</span> (x=n+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> query(m-w) <span class="keyword">then</span> flag:=true;</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs(x+<span class="number">1</span>,w+a[x],s);</div><div class="line">    dfs(x+<span class="number">1</span>,w,s);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'bday.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'bday.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">while</span> (n&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (m&lt;&gt;<span class="number">0</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        k:=n <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">        fillchar(h,sizeof(h),<span class="number">0</span>);hsz:=<span class="number">0</span>;</div><div class="line">        flag:=false;</div><div class="line">        dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);dfs(k+<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> flag <span class="keyword">then</span> writeln(<span class="string">'YES'</span>) <span class="keyword">else</span> writeln(<span class="string">'NO'</span>);</div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-小W-理笔记"><a href="#P2-小W-理笔记" class="headerlink" title="P2 小W 理笔记"></a>P2 小W 理笔记</h1><p>小W 由于购物浪费了太多时间，导致他外语课都没有好好听。为什么是外语课？不是英<br>语课？因为小W 肯定会好好听英语课。由于没有好好听课， 小W 的笔记全都记的杂乱无章，<br>出现了好多错误的地方。 小W 的笔记是如此的糟糕，以至于他只记了一句例句，而且自己<br>还不知道是什么意思……然后在老师讲语法的时候， 小W 又零星的记了几个字母对，老师<br>说：这几个字母对是绝对不能相邻的，而且相邻是不关心字母的顺序的，比如老师说，‘ab’<br>不能相邻，那么相同的，‘ba’也不能相邻。<br>现在小W 到家了，打开了上课的笔记，然后他发现笔记有很多自相矛盾的地方：为什<br>么下面的不能相邻的字母对会出现在上面的例句里面呢？纠结再三， 小W 觉得下面的东西<br>相对比较简单，所以记错的概率比较小……他决定在上面的例句里面擦掉几个字母，使得句<br>子变得合法。<br>但是小W 还要把礼物送给小M，来不及整理笔记了，就把这个艰巨的任务留给了大家，<br>请问大家， 小W 最少要擦掉几个字母，才能使得上面的例句合法？</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行：一个整数 N。<br>第二行：一个长度为 N 的字符串，只包含小写字母，代表小W 记下的例句。<br>第三行：一个整数 M，代表不能相邻的字母对的个数。<br>接下来 M 行：每行两个小写字母，代表不能相邻的字母对，因为小W 太不认真了，所以可<br>能有重复。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行一个整数：最少要擦除的字母数。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4<br>jsoi<br>2<br>oi<br>mo</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>对于10%的数据，M=0<br>对于另外30%的数据，N≤1000<br>对于100%的数据，N≤100000，M≤400</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>开始以为是什么高深的图论题，结果是DP囧。<br>首先很容易想到线性DP：f[i]为1..i个字符，以s[i]结尾，形成合法字串的最少擦去数。<br>$f[i]=f[j]+i-j$（s[i]与s[j]不排斥）<br>但$O(N^2)$是会TLE的<br>然后考虑到字母总共只有26个，于是有另一种DP法：记f[i,c]是1..i个字符中，以字母c结尾，形成合法串的最小擦去数。<br>然后根据排斥关系f[i]可以通过f[i-1]转移得到。<br>还要注意一下初始化。</p>
<dir style="text-align:right"><a href="/2016/08/22/JSOI2016-提高1班-Day6/note.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>note.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,ans:int;s:ansistring;c1,c2:char;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="string">'a'</span>..<span class="string">'z'</span>] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="string">'a'</span>..<span class="string">'z'</span>,<span class="string">'a'</span>..<span class="string">'z'</span>] <span class="keyword">of</span> boolean;</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'note.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'note.out'</span>);rewrite(output);</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    fillchar(g,sizeof(g),true);</div><div class="line">    readln(n);readln(s);readln(m);</div><div class="line">    <span class="keyword">if</span> m=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="number">0</span>);halt <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        readln(c1,c2);</div><div class="line">        g[c1,c2]:=false;g[c2,c1]:=false;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> f[i,s[i]]:=i-<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> c1:=<span class="string">'a'</span> <span class="keyword">to</span> <span class="string">'z'</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> s[i]=c1 <span class="keyword">then</span></div><div class="line">                <span class="keyword">for</span> c2:=<span class="string">'a'</span> <span class="keyword">to</span> <span class="string">'z'</span> <span class="keyword">do</span></div><div class="line">                    <span class="keyword">if</span> g[c1,c2] <span class="keyword">then</span></div><div class="line">                        f[i,c1]:=min(f[i,c1],f[i-<span class="number">1</span>,c2]);</div><div class="line">            f[i,c1]:=min(f[i,c1],f[i-<span class="number">1</span>,c1]+<span class="number">1</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    ans:=n;</div><div class="line">    <span class="keyword">for</span> c1:=<span class="string">'a'</span> <span class="keyword">to</span> <span class="string">'z'</span> <span class="keyword">do</span></div><div class="line">        ans:=min(ans,f[n,c1]);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-小W-开关灯"><a href="#P3-小W-开关灯" class="headerlink" title="P3 小W 开关灯"></a>P3 小W 开关灯</h1><p>晚上到家小W 通过开关灯来保持自己神经的兴奋以便清醒地理笔记。<br>N(2≤N≤100,000)盏灯被连续的编号为1..N。刚回到家的时候,所有的灯都是关闭的。<br>小W 通过N 个按钮来控制灯的开关， 按第i 个按钮可以改变第 i 盏灯的状态。<br>小W 发出 M (1≤M≤100,000)条指令,每个指令都是两个整数中的一个(0 或1)。<br>第 1 种指令(用 0 表示)包含两个数字Si 和Ei(1≤Si≤Ei≤N)，它们表示起始开<br>关和终止开关。小W 需要把从 Si 到 Ei 之间的按钮都按一次,就可以完成这个指令。<br>第2 种指令(用 1 表示)同样包含两个数字Si 和Ei(1≤Si≤Ei≤N),不过这种指令<br>是询问从Si 到Ei 之间的灯有多少是亮着的。<br>请你帮助小W 得到正确的答案。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第 1 行: 用空格隔开的两个整数 N 和 M。<br>第 2..M+1 行: 每行表示一个操作, 有三个用空格分开的整数: 指令号, Si 和 Ei。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>对于每一次询问, 输出一行表示询问的结果。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 5<br>0 1 2<br>0 2 4<br>1 2 3<br>0 2 4<br>1 1 4</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>2</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p><strong>【样例解释】</strong><br>一共有 4 盏灯， 5 个指令。 下面是执行的情况:<br>1 2 3 4<br>Init: O O O O O = 关 + = 开<br>0 1 2 -&gt; + + O O 改变灯 1 和 2 的状态<br>0 2 4 -&gt; + O + +<br>1 2 3 -&gt; 1 输出在 2..3 的范围内有多少灯是亮的<br>0 2 4 -&gt; + + O O 改变灯 2 ,3 和 4 的状态<br>1 1 4 -&gt; 2 输出在 1..4 的范围内有多少灯是亮的<br><strong>【数据规模】</strong><br>对于 20%的数据: 1≤N,M≤100<br>对于 40%的数据: 1≤N,M≤10000<br>对于另外30%的数据: 只有最后一组是1 指令，前M-1 组为0 指令<br>对于100%的数据： 1≤N,M≤100000</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>这是道很水的线段树操作。</p>
<dir style="text-align:right"><a href="/2016/08/22/JSOI2016-提高1班-Day6/lites.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>lites.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    sgt,tag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">400010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j,x,y:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">putdown</span><span class="params">(i,b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b&lt;e <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        tag[i*<span class="number">2</span>]:=<span class="number">1</span>-tag[i*<span class="number">2</span>];sgt[i*<span class="number">2</span>]:=mid-b+<span class="number">1</span>-sgt[i*<span class="number">2</span>];</div><div class="line">        tag[i*<span class="number">2</span>+<span class="number">1</span>]:=<span class="number">1</span>-tag[i*<span class="number">2</span>+<span class="number">1</span>];sgt[i*<span class="number">2</span>+<span class="number">1</span>]:=e-mid-sgt[i*<span class="number">2</span>+<span class="number">1</span>];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    tag[i]:=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(i,b,e,l,r:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (r&lt;b) <span class="keyword">or</span> (l&gt;e) <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> (l&lt;=b) <span class="keyword">and</span> (e&lt;=r) <span class="keyword">then</span> <span class="keyword">exit</span>(sgt[i]);</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> tag[i]=<span class="number">1</span> <span class="keyword">then</span> putdown(i,b,e);</div><div class="line">    query:=query(i*<span class="number">2</span>,b,mid,l,r)+query(i*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,e,l,r);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(i,b,e,l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (r&lt;b) <span class="keyword">or</span> (l&gt;e) <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=b) <span class="keyword">and</span> (e&lt;=r) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        sgt[i]:=e-b+<span class="number">1</span>-sgt[i];</div><div class="line">        tag[i]:=<span class="number">1</span>-tag[i];</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> tag[i]=<span class="number">1</span> <span class="keyword">then</span> putdown(i,b,e);</div><div class="line">    insert(i*<span class="number">2</span>,b,mid,l,r);insert(i*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,e,l,r);</div><div class="line">    sgt[i]:=sgt[i*<span class="number">2</span>]+sgt[i*<span class="number">2</span>+<span class="number">1</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'lites.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'lites.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,x,y);</div><div class="line">        <span class="keyword">if</span> j=<span class="number">0</span> <span class="keyword">then</span> insert(<span class="number">1</span>,<span class="number">1</span>,n,x,y)</div><div class="line">        <span class="keyword">else</span> writeln(query(<span class="number">1</span>,<span class="number">1</span>,n,x,y));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目名称&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;小W买礼物&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;小W理笔记&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;小W开关灯&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;存盘文件名&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bday&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;note&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lites&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;输入文件名&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bday.in&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;note.in&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lites.in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;输出文件名&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bday.out&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;note.out&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lites.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;时限&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3s&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1s&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;内存限制&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;64MB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;256MB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;256MB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-小W买礼物&quot;&gt;&lt;a href=&quot;#P1-小W买礼物&quot; class=&quot;headerlink&quot; title=&quot;P1 小W买礼物&quot;&gt;&lt;/a&gt;P1 小W买礼物&lt;/h1&gt;&lt;p&gt;小W 今天很高兴，因为商店给OIer 们发购物券了。小W 得到了一些价值不菲的SHOP&lt;br&gt;购物券，所以他决定买N 件礼物送给小M。&lt;br&gt;当小W 选好了N 件礼物，高兴地去结账时，他突然发现SHOP 对购物券的使用有非常奸&lt;br&gt;商（天下哪有免费的购物券？）的规定：一次只允许使用一张、不找零、不与现金混用。小&lt;br&gt;W 身上根本没有现金，并且他不愿意全部放弃挑选好的礼物。这就意味着，他只能通过这些&lt;br&gt;购物券结账，而且这张购物券所购买的物品的总价格，必须精确的等于这张购物券的面额。&lt;br&gt;怎么样才能顺利的买回这N 件礼物中的部分或全部送给小M 呢？&lt;br&gt;你的任务就是帮助小W 确定是否存在一个购买方案。小W 会告诉你每张购物券的面额以&lt;br&gt;及所有商品的价格，对每张购物券，你只需要确定能否找到一种选礼物方案，使得选出来的&lt;br&gt;礼物的价格总和正好是这张购物券的面额即可。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入文件bday.in 中有多组数据，每组数据的第一行为两个整数N 和M，分别表示小W&lt;br&gt;一共挑选了N 件礼物以及小W 的一张购物券的面额为M。接下来一行有N 个用空格隔开的正&lt;br&gt;整数，第I 个数表示第I 个礼物的价格。&lt;br&gt;输入数据以0 0 结束。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出文件bday.out 包含若干行，每行一个单词“YES”或者“NO”，分别代表存在一个&lt;br&gt;购买方案和不存在一个购买方案。&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="折半枚举" scheme="https://cothrax.github.io/tags/%E6%8A%98%E5%8D%8A%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="枚举" scheme="https://cothrax.github.io/tags/%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="Hash" scheme="https://cothrax.github.io/tags/Hash/"/>
    
      <category term="线段树" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="字符串" scheme="https://cothrax.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>Bash对拍和数据生成</title>
    <link href="https://cothrax.github.io/2016/08/21/Bash%E5%AF%B9%E6%8B%8D%E5%92%8C%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90/"/>
    <id>https://cothrax.github.io/2016/08/21/Bash对拍和数据生成/</id>
    <published>2016-08-21T14:32:04.000Z</published>
    <updated>2016-08-24T02:34:20.362Z</updated>
    
    <content type="html"><![CDATA[<p>NOIP2016在即，学习一下Linux下对拍脚本的编写以及数据生成的技巧。</p>
<h2 id="Bash对拍脚本"><a href="#Bash对拍脚本" class="headerlink" title="Bash对拍脚本"></a>Bash对拍脚本</h2><p>先把dash关掉防止脚本报<code>Syntax error: Bad for loop variable</code>的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dpkg-reconfigure dash</div></pre></td></tr></table></figure></p>
<p>在弹出的选项中选NO即可。<br>然后可以开始写脚本了，name是程序的名字xxx，<code>xxx_gen</code>是数据生成器，<code>xxx_che</code>是暴力程序，对于每一道题改一下name变量值即可。</p>
<dir style="text-align:right"><a href="/2016/08/21/Bash对拍和数据生成/check.sh" title="复制代码">复制代码</a></dir>

<figure class="highlight bash"><figcaption><span>check.sh</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">name=<span class="string">"test"</span>                         <span class="comment">#程序名</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> ((;1;))                         <span class="comment">#死循环</span></div><div class="line"><span class="keyword">do</span></div><div class="line">    ./<span class="variable">$&#123;name&#125;</span>_gen                   <span class="comment">#数据生成器</span></div><div class="line">    ./<span class="variable">$&#123;name&#125;</span>_che                   <span class="comment">#暴力程序</span></div><div class="line">    ./<span class="variable">$&#123;name&#125;</span>                       <span class="comment">#程序</span></div><div class="line">    diff <span class="variable">$&#123;name&#125;</span>.out <span class="variable">$&#123;name&#125;</span>.ans    <span class="comment">#比较</span></div><div class="line">    <span class="keyword">if</span> [ $? <span class="_">-ne</span> <span class="string">"0"</span> ]; <span class="keyword">then</span>         <span class="comment">#如果diff的输出$?和"0"不等</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"fail"</span></div><div class="line">        <span class="built_in">exit</span>                        <span class="comment">#退出</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"pass"</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>然后赋予脚本执行权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x check.sh</div></pre></td></tr></table></figure></p>
<h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><p>bash下可以用time输出程序运行时间，当然你也可以用pascal的sysutils库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">time test.exe</div></pre></td></tr></table></figure></p>
<p>如果你写-v参数的话，还可以输出更多的东西。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/time -v test.exe</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Command being timed: &quot;./plutotree0&quot;</div><div class="line">    User time (seconds): 0.33</div><div class="line">    System time (seconds): 0.31</div><div class="line">    Percent of CPU this job got: 99%</div><div class="line">    Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.64</div><div class="line">    Average shared text size (kbytes): 0</div><div class="line">    Average unshared data size (kbytes): 0</div><div class="line">    Average stack size (kbytes): 0</div><div class="line">    Average total size (kbytes): 0</div><div class="line">    Maximum resident set size (kbytes): 94816</div><div class="line">    Average resident set size (kbytes): 0</div><div class="line">    Major (requiring I/O) page faults: 0</div><div class="line">    Minor (reclaiming a frame) page faults: 6069</div><div class="line">    Voluntary context switches: 1</div><div class="line">    Involuntary context switches: 4</div><div class="line">    Swaps: 0</div><div class="line">    File system inputs: 0</div><div class="line">    File system outputs: 1760</div><div class="line">    Socket messages sent: 0</div><div class="line">    Socket messages received: 0</div><div class="line">    Signals delivered: 0</div><div class="line">    Page size (bytes): 4096</div><div class="line">    Exit status: 0</div></pre></td></tr></table></figure></p>
<h3 id="本地数据check"><a href="#本地数据check" class="headerlink" title="本地数据check"></a>本地数据check</h3><p>因为大多数据给的check脚本都是bat，要改造成sh，以transport 50组数据为例。</p>
<dir style="text-align:right"><a href="/2016/08/21/Bash对拍和数据生成/check0.sh" title="复制代码">复制代码</a></dir>

<figure class="highlight bash"><figcaption><span>check0.sh</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> ((i=1;i&lt;51;i++))</div><div class="line"><span class="keyword">do</span></div><div class="line">    cp ./transport<span class="variable">$&#123;i&#125;</span>.in ./transport.in</div><div class="line">    ./transport</div><div class="line">    diff -w ./transport.out ./transport<span class="variable">$&#123;i&#125;</span>.out</div><div class="line">    <span class="keyword">if</span> [ $? <span class="_">-ne</span> <span class="string">"0"</span> ];<span class="keyword">then</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"fail: "</span><span class="variable">$&#123;i&#125;</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"pass: "</span><span class="variable">$&#123;i&#125;</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line">    rm ./transport.in</div><div class="line">    rm ./transport.out</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<h2 id="更通用的对拍程序"><a href="#更通用的对拍程序" class="headerlink" title="更通用的对拍程序"></a>更通用的对拍程序</h2><p>直接用pascal写</p>
<dir style="text-align:right"><a href="/2016/08/21/Bash对拍和数据生成/compare.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>compare.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> crt,dos;</div><div class="line"><span class="keyword">const</span> name=<span class="string">'test'</span>; <span class="comment">//程序名</span></div><div class="line"><span class="keyword">var</span> a,b:ansistring; </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">readin</span><span class="params">(f:<span class="keyword">string</span>;<span class="keyword">var</span> a:ansistring)</span>;</span> </div><div class="line"><span class="keyword">begin</span>  </div><div class="line">    assign(input,f);reset(input);  </div><div class="line">    <span class="keyword">read</span>(a);</div><div class="line">    close(input);  </div><div class="line"><span class="keyword">end</span>;  </div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        exec(name+<span class="string">'_gen'</span>,<span class="string">''</span>);  </div><div class="line">        exec(name+<span class="string">'_che'</span>,<span class="string">''</span>);  </div><div class="line">        exec(name,<span class="string">''</span>);  </div><div class="line">        readin(name+<span class="string">'.out'</span>,a);  </div><div class="line">        readin(name+<span class="string">'.ans'</span>,b);  </div><div class="line">        writeln(a=b);</div><div class="line">    <span class="keyword">until</span> a&lt;&gt;b;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="数据生成"><a href="#数据生成" class="headerlink" title="数据生成"></a>数据生成</h2><blockquote>
<p>留坑待填</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;NOIP2016在即，学习一下Linux下对拍脚本的编写以及数据生成的技巧。&lt;/p&gt;
&lt;h2 id=&quot;Bash对拍脚本&quot;&gt;&lt;a href=&quot;#Bash对拍脚本&quot; class=&quot;headerlink&quot; title=&quot;Bash对拍脚本&quot;&gt;&lt;/a&gt;Bash对拍脚本&lt;/h2&gt;&lt;p&gt;先把dash关掉防止脚本报&lt;code&gt;Syntax error: Bad for loop variable&lt;/code&gt;的错误&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo dpkg-reconfigure dash&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在弹出的选项中选NO即可。&lt;br&gt;然后可以开始写脚本了，name是程序的名字xxx，&lt;code&gt;xxx_gen&lt;/code&gt;是数据生成器，&lt;code&gt;xxx_che&lt;/code&gt;是暴力程序，对于每一道题改一下name变量值即可。&lt;/p&gt;
&lt;dir style=&quot;text-align:right&quot;&gt;&lt;a href=&quot;/2016/08/21/Bash对拍和数据生成/check.sh&quot; title=&quot;复制代码&quot;&gt;复制代码&lt;/a&gt;&lt;/dir&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;check.sh&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;name=&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;                         &lt;span class=&quot;comment&quot;&gt;#程序名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ((;1;))                         &lt;span class=&quot;comment&quot;&gt;#死循环&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ./&lt;span class=&quot;variable&quot;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;_gen                   &lt;span class=&quot;comment&quot;&gt;#数据生成器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ./&lt;span class=&quot;variable&quot;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;_che                   &lt;span class=&quot;comment&quot;&gt;#暴力程序&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ./&lt;span class=&quot;variable&quot;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;                       &lt;span class=&quot;comment&quot;&gt;#程序&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    diff &lt;span class=&quot;variable&quot;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;.out &lt;span class=&quot;variable&quot;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;.ans    &lt;span class=&quot;comment&quot;&gt;#比较&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ $? &lt;span class=&quot;_&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;         &lt;span class=&quot;comment&quot;&gt;#如果diff的输出$?和&quot;0&quot;不等&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fail&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;                        &lt;span class=&quot;comment&quot;&gt;#退出&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pass&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Tinkering Note" scheme="https://cothrax.github.io/categories/Tinkering-Note/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="Bash" scheme="https://cothrax.github.io/tags/Bash/"/>
    
      <category term="Linux" scheme="https://cothrax.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班 Day5</title>
    <link href="https://cothrax.github.io/2016/08/21/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day5/"/>
    <id>https://cothrax.github.io/2016/08/21/JSOI2016-提高1班-Day5/</id>
    <published>2016-08-21T02:01:49.000Z</published>
    <updated>2016-08-21T02:52:46.421Z</updated>
    
    <content type="html"><![CDATA[<p>第1题一如既往地水，第3题的数据BT，但用dfs栈并没有爆。</p>
<h1 id="P1-Video"><a href="#P1-Video" class="headerlink" title="P1 Video"></a>P1 Video</h1><p>pluto 喜欢看片，现在他的硬盘里有n 部片，但是由于他还要把妹，所以看片时间有限，他只能挑出其中的k 部片来看，他想知道有多少种不同的选片方案。方案数可能很大，答案mod 1000000007 输出。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一行两个整数，n和m</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行一个整数，即所求答案<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>6 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>15</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><ul>
<li>对于30% 的数据，n &lt; 10</li>
<li>对于60% 的数据，n &lt; 3000</li>
<li>对于100% 的数据，n &lt; 2x10e5</li>
</ul>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>难得碰到这么水的题，暴力算一下阶乘，拿扩展欧几里得求一下逆元就好了。</p>
<dir style="text-align:right"><a href="/2016/08/21/JSOI2016-提高1班-Day5/video.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>video.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> z=<span class="number">1000000007</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,a,rev,tmp,ans:int64;</div><div class="line">    i:longint;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extgcd</span><span class="params">(a,b:int64;<span class="keyword">var</span> x,y:int64)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        x:=<span class="number">1</span>;y:=<span class="number">0</span>;<span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    extgcd(b,a <span class="keyword">mod</span> b,y,x);</div><div class="line">    dec(y,(a <span class="keyword">div</span> b)*x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'video.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'video.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    a:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> a:=a*i <span class="keyword">mod</span> z;</div><div class="line">    extgcd(a,z,rev,tmp);</div><div class="line">    rev:=(rev+z) <span class="keyword">mod</span> z;</div><div class="line">    ans:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=n-m+<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> ans:=ans*i <span class="keyword">mod</span> z;</div><div class="line">    <span class="keyword">write</span>(ans*rev <span class="keyword">mod</span> z);</div><div class="line">    </div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-Chance"><a href="#P2-Chance" class="headerlink" title="P2 Chance"></a>P2 Chance</h1><p>pluto 去找妹子xxx 约会，然而xxx 要求和pluto 玩一个游戏，pluto 赢了才能获得和xxx约会的机会。游戏内容为：现在有N 个袋子(你可以认为它是哆啦A 梦的口袋，每个袋子里放着一些球)，所以容量十分大，第i 个袋子里放着编号为Li 到Ri 的球(除编号外完全相同)，pluto 需要从每个袋子里摸出一个球，第i 个袋子里任何一个球被摸到的概率是1/(Ri - Li + 1)，如果pluto 摸出的球中有K% 或以上的球的编号的第一位是1(比如11,121,199 的第一位是1, 而21,233 第一位就不是1)，那么pluto 就将赢得与xxx 约会的机会。现在pluto 想知道他能人生中第一次与妹子约会的概率有多大。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数N,K<br>接下来N 行，每行两个整数，Li 和Ri</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行一个实数（保留7位小数）表示答案<br>绝对误差不超过10e-6 即视为正确<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 50<br>1 2<br>9 11</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>0.833333333333333</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><ul>
<li>对于100% 的数据，0 &lt; k &lt; 100，0 &lt; Li &lt; Ri</li>
<li>对于30% 的数据，n &lt; 10，Li &lt; Ri &lt; 100</li>
<li>对于60% 的数据，n &lt; 500，Li &lt; Ri &lt; 2000</li>
<li>对于100% 的数据，n &lt; 2000，Li &lt; Ri &lt; 10e18</li>
</ul>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>先乱搞就能够求出第i个袋子中摸出第一位是1的球的概率p[i]（然而因为乱搞WA N次）<br>然后DP，f[i,j]在前i个袋子中摸出j个符合要求的球的概率<br><span>$f[i,j]=f[i-1,j-1]*p[i]+f[i-1,j]*(1-p[i])$</span><!-- Has MathJax --><br>注意：</p>
<ol>
<li>乱搞需谨慎</li>
<li>f[0,i]也要算</li>
<li>答案是<span>$\sum\{ f[n,j]\ |\ j\geq \left\lceil n*k\% \right\rceil\}$</span><!-- Has MathJax --></li>
</ol>
<dir style="text-align:right"><a href="/2016/08/21/JSOI2016-提高1班-Day5/chance.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>chance.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,k,i,j:longint;l,r:int64;</div><div class="line">    p:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2010</span>] <span class="keyword">of</span> double;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2010</span>,-<span class="number">1</span>..<span class="number">2010</span>] <span class="keyword">of</span> double;</div><div class="line">    ans:double;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">()</span>:</span>double;</div><div class="line"><span class="keyword">var</span> x,y,tot:int64;i:longint;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(l,r);</div><div class="line">    x:=<span class="number">1</span>;tot:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">18</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> x&gt;r <span class="keyword">then</span> break;</div><div class="line">        y:=<span class="number">2</span>*x-<span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> y&gt;=l <span class="keyword">then</span></div><div class="line">            inc(tot,min(y,r)-max(l,x)+<span class="number">1</span>);</div><div class="line">        x:=x*<span class="number">10</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    cal:=tot/(r-l+<span class="number">1</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'chance.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'chance.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> p[i]:=cal();</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            f[i,j]:=f[i-<span class="number">1</span>,j-<span class="number">1</span>]*p[i]+f[i-<span class="number">1</span>,j]*(<span class="number">1</span>-p[i]); </div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=ceil(n*k/<span class="number">100</span>) <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        ans:=ans+f[n,i];</div><div class="line">    <span class="keyword">write</span>(ans:<span class="number">0</span>:<span class="number">7</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-Plutotree"><a href="#P3-Plutotree" class="headerlink" title="P3 Plutotree"></a>P3 Plutotree</h1><p>有一棵n 个节点的树，节点编号为1 到n，i 号节点的权值为Wi。这棵树有些奇怪，它的每一个叶子节点都是根节点的父亲(表示每个叶子节点与根节点之间有一条边权为0 的边)。我们称这样的树为pluto 树，根节点编号为1。我们需要最小化从u 到v 的路径(每条边只能经过一次) 上的节点权值之和，并且在最小化节点权值之和的同时求这个路径上可能的最大权值。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数n 和q，n 表示节点个数，q 表示询问个数。<br>第二行n-1 个整数Ai，表示i + 1 号节点的父亲为Ai<br>第三行n 个整数Wi 表示i 号节点的权值为Wi<br>接下来q 行，每行两个整数u，v，表示一组询问</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>对于每组询问输出两个整数x; y<br>x 表示u 到v 的权值和最小的路径的权值和，y 表示这条路径上点权最大值。如果有多个相同权值和的路径，输出那个点权最大值最大的。<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 1<br>1 2 3 4<br>413 127 263 869 960<br>1 5</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1373 960</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p>• 对于30% 的数据，n ≤ 300，q ≤ 1000<br>• 对于50% 的数据，n ≤ 2000，q ≤ 10000<br>• 对于100% 的数据，n ≤ 100000，q ≤ 100000</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p><strong>倍增LCA+树形DP</strong><br>对于查询(u,v)，分类讨论</p>
<ol>
<li>直接走树上的简单路径，这种情况倍增一下就可以了</li>
<li>一个点通过叶子走回根，再从根走到另一个点</li>
<li>两个点都通过叶子，在根相遇</li>
</ol>
<p>后两种情况，要处理出离每个点最近的叶子节点，对于点i，有两种情况：</p>
<ol>
<li>走到i的子树上叶子，这个dfs顺手就算出来了</li>
<li>先向上（父节点）走，然后向下到达一个叶子，这个在情况1算出来后再dp一下。</li>
</ol>
<p>注意点：</p>
<ol>
<li>算最近的叶子不要忘了情况2（数据比较BT，忘了就爆0了）</li>
<li>倍增数组要开大，我开到15然后爆了。</li>
<li>还有就是关于每条边只能经过一次的问题，但由于是<strong>最小化权值和</strong>，重复经过的情况不可能是最优解，所以没有必要多做考虑。</li>
<li>分类2有两种走法都要考虑</li>
<li>由于是点权，和边权类似，但注意边界问题</li>
</ol>
<dir style="text-align:right"><a href="/2016/08/21/JSOI2016-提高1班-Day5/plutotree0.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>plutotree0.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span></div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,dep,w,dist:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    par,mxw:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">25</span>] <span class="keyword">of</span> int;</div><div class="line">    n,logn,q,i,j:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">//为了省事，更新答案用</span></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(<span class="keyword">var</span> x,y:int;nx,ny:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (nx&lt;x) <span class="keyword">or</span> ((nx=x) <span class="keyword">and</span> (ny&gt;y)) <span class="keyword">then</span></div><div class="line">        <span class="keyword">begin</span> x:=nx;y:=ny <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    dep[v]:=dep[p]+<span class="number">1</span>; <span class="comment">//深度</span></div><div class="line">    dist[v]:=dist[p]+w[v]; <span class="comment">//到根的路径上的点权和</span></div><div class="line">    par[v,<span class="number">0</span>]:=p; <span class="comment">//父节点</span></div><div class="line">    mxw[v,<span class="number">0</span>]:=max(w[p],w[v]); <span class="comment">//倍增路径上的最大点权</span></div><div class="line">    i:=head[v];</div><div class="line">    <span class="comment">//d是dp数组，d[v,0]是离最近叶子的路径上的点权和，d[v,1]是这个路径上的最大点权</span></div><div class="line">    <span class="keyword">if</span> i=<span class="number">0</span> <span class="keyword">then</span> d[v,<span class="number">0</span>]:=w[v] <span class="keyword">else</span> d[v,<span class="number">0</span>]:=inf;</div><div class="line">    d[v,<span class="number">1</span>]:=w[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        dfs(u,v);</div><div class="line">        update(d[v,<span class="number">0</span>],d[v,<span class="number">1</span>],d[u,<span class="number">0</span>]+w[v],max(d[u,<span class="number">1</span>],w[v]));</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    update(d[v,<span class="number">0</span>],d[v,<span class="number">1</span>],d[p,<span class="number">0</span>]+w[v],max(d[p,<span class="number">1</span>],w[v]));</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        dp(g[i].t,v);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">lca</span><span class="params">(u,v:int;<span class="keyword">var</span> c,mx:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> dep[u]&lt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">    mx:=max(w[u],w[v]);</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dep[par[u,i]]&gt;=dep[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            mx:=max(mx,mxw[u,i]);</div><div class="line">            u:=par[u,i];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> u=v <span class="keyword">then</span> <span class="keyword">begin</span> c:=u;<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> par[u,i]&lt;&gt;par[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            mx:=max(mx,max(mxw[u,i],mxw[v,i]));</div><div class="line">            u:=par[u,i];v:=par[v,i];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    mx:=max(mx,max(mxw[u,<span class="number">0</span>],mxw[v,<span class="number">0</span>]));</div><div class="line">    c:=par[u,<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> t1,t2,c,mx,mx1,md,md1:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(t1,t2);</div><div class="line">    <span class="keyword">if</span> t1=t2 <span class="keyword">then</span> <span class="keyword">begin</span> writeln(w[t1],<span class="string">' '</span>,w[t1]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//Case 1</span></div><div class="line">    lca(t1,t2,c,mx);</div><div class="line">    md:=dist[t1]+dist[t2]-<span class="number">2</span>*dist[c]+w[c];</div><div class="line">    <span class="comment">//Case 2.1</span></div><div class="line">    mx1:=max(mxw[t1,logn],d[t2,<span class="number">1</span>]);</div><div class="line">    md1:=dist[t1]+d[t2,<span class="number">0</span>];</div><div class="line">    update(md,mx,md1,mx1);</div><div class="line">    <span class="comment">//Case 2.2</span></div><div class="line">    mx1:=max(mxw[t2,logn],d[t1,<span class="number">1</span>]);</div><div class="line">    md1:=dist[t2]+d[t1,<span class="number">0</span>];</div><div class="line">    update(md,mx,md1,mx1);</div><div class="line">    <span class="comment">//Case 3</span></div><div class="line">    mx1:=max(w[<span class="number">1</span>],max(d[t1,<span class="number">1</span>],d[t2,<span class="number">1</span>]));</div><div class="line">    md1:=d[t1,<span class="number">0</span>]+d[t2,<span class="number">0</span>]+w[<span class="number">1</span>];</div><div class="line">    update(md,mx,md1,mx1);</div><div class="line"></div><div class="line">    writeln(md,<span class="string">' '</span>,mx);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'plutotree.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'plutotree.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,q);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);add(j,i);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    dp(<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">    <span class="comment">//倍增数组</span></div><div class="line">    logn:=floor(ln(n)/ln(<span class="number">2</span>));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            par[j,i]:=par[par[j,i-<span class="number">1</span>],i-<span class="number">1</span>];</div><div class="line">            mxw[j,i]:=max(mxw[j,i-<span class="number">1</span>],mxw[par[j,i-<span class="number">1</span>],i-<span class="number">1</span>]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span> solve();</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第1题一如既往地水，第3题的数据BT，但用dfs栈并没有爆。&lt;/p&gt;
&lt;h1 id=&quot;P1-Video&quot;&gt;&lt;a href=&quot;#P1-Video&quot; class=&quot;headerlink&quot; title=&quot;P1 Video&quot;&gt;&lt;/a&gt;P1 Video&lt;/h1&gt;&lt;p&gt;pluto 喜欢看片，现在他的硬盘里有n 部片，但是由于他还要把妹，所以看片时间有限，他只能挑出其中的k 部片来看，他想知道有多少种不同的选片方案。方案数可能很大，答案mod 1000000007 输出。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;一行两个整数，n和m&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;一行一个整数，即所求答案&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="数论" scheme="https://cothrax.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="乘法逆元" scheme="https://cothrax.github.io/tags/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/"/>
    
      <category term="排列组合" scheme="https://cothrax.github.io/tags/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/"/>
    
      <category term="概率期望" scheme="https://cothrax.github.io/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="树形DP" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2DP/"/>
    
      <category term="倍增" scheme="https://cothrax.github.io/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高2班 单调队列及动规优化</title>
    <link href="https://cothrax.github.io/2016/08/20/JSOI2016-%E6%8F%90%E9%AB%982%E7%8F%AD-%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E5%8F%8A%E5%8A%A8%E8%A7%84%E4%BC%98%E5%8C%96/"/>
    <id>https://cothrax.github.io/2016/08/20/JSOI2016-提高2班-单调队列及动规优化/</id>
    <published>2016-08-20T10:34:23.000Z</published>
    <updated>2016-08-20T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P1-轰炸机"><a href="#P1-轰炸机" class="headerlink" title="P1 轰炸机"></a>P1 轰炸机</h1><p>大山两侧的X国与Y国爆发了一场战争，由于山势险峻，只有一条山路可以通行，所以双方的军营都设置在这一条路上（直线）。X国科学家正在研制一种高威力轰炸机，其炮弹可以大规模精准摧毁目标。由于在前线连连失利，X国高层决定提前将其投入使用。但由于研发尚未完成，仅有一枚导弹可供使用。这枚导弹至多可以摧毁M个目标（包括敌方军营和己方军营），但这些目标必须是连续的。<br>在一个月黑风高的夜晚，X国高层决定用这架轰炸机发起突袭。他们预先侦查到了山路上双方军营共有N个军营，并探清了每个军营的情况，他们请你帮他们设计出这次突袭战果最大的方案。<br>X国战国的计算公式为：战果=敌方损失的战斗力-己方损失的战斗力。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数 N,M;<br>第2~N+1行，每行一个整数Ai，表示第i个军营的属性值。<br>abs(Ai)表示第i个军营的战斗力。<br>Ai>0，表明该军营是Y国的军营；<br>Ai&lt;0，表明该军营是X国的军营；<br>Ai=0，表明该军营是空的。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>仅一行，输出使突袭战果最大的方案（按照输入顺序输出所有轰炸目标的属性值），每两个属性值之间用一个空格隔开。</p>
<a id="more"></a>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 2<br>-1<br>3<br>–10<br>20</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>20</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>30%的数据：N&lt;=3000,M&lt;=100<br>100%的数据N,M&lt;=1000000 -maxlongint&lt;=Ai&lt;=maxlongint</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>最大子段和的升级版，要求长度不超过m。<br>先求前缀和sum[i]<br>然后，记f[i]是以i结尾的最大子段和，<span>$f[i]=sum[i]-min\{sum[j]\ |\ i-j&lt;=m\}$</span><!-- Has MathJax --><br>然后可以用一个严格递增的单调队列维护sum[j]</p>
<dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-单调队列及动规优化/sum.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>sum.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,k,d,h,t,ans:int;</div><div class="line">    c,w,a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int; <span class="comment">//费用,价值,数量</span></div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(c[i],w[i],a[i]);</div><div class="line">    d:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        d:=min(m,d+c[i]*a[i]);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> c[i]-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            h:=<span class="number">1</span>;t:=<span class="number">0</span>;k:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">while</span> j+c[i]*k&lt;=d <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (q[t,<span class="number">0</span>]&lt;=f[j+c[i]*k]-w[i]*k) <span class="keyword">do</span> dec(t);</div><div class="line">                inc(t);q[t,<span class="number">1</span>]:=k;q[t,<span class="number">0</span>]:=f[j+c[i]*k]-w[i]*k;</div><div class="line">                <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (k-q[h,<span class="number">1</span>]&gt;a[i]) <span class="keyword">do</span> inc(h);</div><div class="line">                f[j+c[i]*k]:=max(f[j+c[i]*k],q[h,<span class="number">0</span>]+k*w[i]);</div><div class="line">                inc(k);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> ans:=max(ans,f[i]);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-武器调度"><a href="#P2-武器调度" class="headerlink" title="P2 武器调度"></a>P2 武器调度</h1><p>为了取得胜利，X国高层决定调动武器库中的装备支援前线，以增强前线的战斗力。X国武器库中共有N种武器，每种武器都有固定的质量，且数量有限，能给前线增加的战斗力也是已知的。拟定将用飞机运送，为了使飞机具有能摆脱Y国防空导弹的速度，其最大装载质量不得超过M。现在他们需要你求出这一次装备运输最多能给前线增加多少战斗力。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数 N，M；<br>第2~N+1行，每行三个整数Pi、Wi、Ci，<br>Pi表示每件第i种武器的质量；<br>Wi表示每件第i种武器能给前线增加的战斗力；<br>Ci表示第i种武器的数量。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>仅一行，输出这一次装备运输能给前线增加的最大战斗力。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 20<br>3 8 5<br>12 16 2<br>1 4 1<br>5 9 2<br>4 11 1</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>55</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>30%的数据中，n&lt;=10<br>50%的数据中，n&lt;=50,m&lt;=5000<br>100%的数据中，n&lt;=100,m&lt;=10000,ci&lt;=100<br>保证输出结果在maxlongint范围内。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>单调队列优化多重背包，代码优美到不可思议。<br>详解见此：<a href="http://www.cppblog.com/flyinghearts/archive/2010/09/01/125555.html" target="_blank" rel="external">http://www.cppblog.com/flyinghearts/archive/2010/09/01/125555.html</a></p>
<dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-单调队列及动规优化/war.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>war.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,k,d,h,t,ans:int;</div><div class="line">    c,w,a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int; <span class="comment">//费用,价值,数量</span></div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'war.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'war.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(c[i],w[i],a[i]);</div><div class="line">    d:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        d:=min(m,d+c[i]*a[i]);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> c[i]-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            h:=<span class="number">1</span>;t:=<span class="number">0</span>;k:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">while</span> j+c[i]*k&lt;=d <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (q[t,<span class="number">0</span>]&lt;=f[j+c[i]*k]-w[i]*k) <span class="keyword">do</span> dec(t);</div><div class="line">                inc(t);q[t,<span class="number">1</span>]:=k;q[t,<span class="number">0</span>]:=f[j+c[i]*k]-w[i]*k;</div><div class="line">                <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (k-q[h,<span class="number">1</span>]&gt;a[i]) <span class="keyword">do</span> inc(h);</div><div class="line">                f[j+c[i]*k]:=max(f[j+c[i]*k],q[h,<span class="number">0</span>]+k*w[i]);</div><div class="line">                inc(k);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> ans:=max(ans,f[i]);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-瑰丽华尔兹"><a href="#P3-瑰丽华尔兹" class="headerlink" title="P3 瑰丽华尔兹"></a>P3 瑰丽华尔兹</h1><blockquote>
<p>前面的废话被我删了</p>
</blockquote>
<p>晚上在金色的地板上快乐地跳着华尔兹是不是很惬意呢？也许，我们忘记了一个人，那就是艾米丽，她可没闲着：她必须在适当的时候施魔法帮助1900，不让钢琴碰上舞厅里的家具。而艾米丽还小，她无法施展魔法改变钢琴的运动方向或速度，而只能让钢琴停一下。<br>不妨认为舞厅是一个N行M列的矩阵，矩阵中的某些方格上堆放了一些家具，其他的则是空地。钢琴可以在空地上滑动，但不能撞上家具或滑出舞厅，否则会损坏钢琴和家具，引来难缠的船长。<br>每个时刻，钢琴都会随着船体倾斜的方向向相邻的方格滑动一格，其中相邻的方格可以是向东、向西、向南或向北的。而艾米丽可以选择施魔法或不施魔法，如果不施魔法，则钢琴会滑动，而如果施魔法，则钢琴会原地不动。 艾米丽是个天使，她知道每段时间的船体的倾斜情况。她想使钢琴尽量长时间在舞厅里滑行，这样1900会非常高兴，同时也有利于治疗托尼的晕船。但艾米丽还太小，不会算，所以希望你能帮助她。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件的第一行包含5个数N, M, x, y和K。N和M描述舞厅的大小，x和y为在第1时刻初钢琴的位置（x行y列）；我们对船体倾斜情况是按时间的区间来描述的，比如“在[1, 3]时间里向东倾斜，[4, 5]时间里向北倾斜”，因此这里的K表示区间的数目。<br>以下N行，每行M个字符，描述舞厅里的家具。第i行第j列的字符若为‘ . ‘，则表示该位置是空地；若为‘ x ‘，则表示有家具。<br>以下K行，顺序描述K个时间区间，格式为：si ti di(1 ≤ i ≤ K)。表示在时间区间[si, ti]内，船体都是向di方向倾斜的。di为1, 2, 3, 4中的一个，依次表示北、南、西、东（分别对应矩阵中的上、下、左、右）。输入保证区间是连续的，即<br>s1 = 1<br>ti = si-1 + 1 (1 &lt; i ≤ K)<br>tK = T</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出文件仅有1行，包含一个整数，表示钢琴滑行的最长距离(即格子数)。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 5 4 1 3<br>..xx.<br>…..<br>…x.<br>…..<br>1 3 4<br>4 5 1<br>6 7 3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>6</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><img src="/2016/08/20/JSOI2016-提高2班-单调队列及动规优化/adv.png" alt="adv.png" title="">
<p>钢琴在“×位置上时天使使用一次魔法，因此滑动总长度为6。<br>【数据范围】<br>50%的数据中，1≤N, M≤200，T≤200；<br>100%的数据中，1≤N, M≤200，K≤200，T≤40000。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>NOI2005的题目，帮助理解单调队列的好题。<br>黄学长的题解已经很清楚了：<a href="http://hzwer.com/7397.html" target="_blank" rel="external">http://hzwer.com/7397.html</a><br>其实可以发现，这一题和多重背包有异曲同工之妙，把k个区间看成k种物品，把滑1步看成添加1个物品，每个物品的价值为1，区间长度就是物品的总数，而可以施魔法停止就意味着可以取任意数量的物品，多重背包是通过对c[i]取模分组，而这一题是通过行列分组，所以 可以看出，这就是一个二维的多重背包。<br>和P2的代码一样，可以把k个区间（物品种类）这一维压掉。</p>
<dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-单调队列及动规优化/adv1900.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>adv1900</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    inf=<span class="number">1000000000</span>;</div><div class="line">    dir:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">4</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=((-<span class="number">1</span>,<span class="number">0</span>),(<span class="number">1</span>,<span class="number">0</span>),(<span class="number">0</span>,-<span class="number">1</span>),(<span class="number">0</span>,<span class="number">1</span>));</div><div class="line"><span class="keyword">var</span> </div><div class="line">    map:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">210</span>,<span class="number">0</span>..<span class="number">210</span>] <span class="keyword">of</span> char;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">210</span>,<span class="number">0</span>..<span class="number">210</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,k,i,j,sx,sy,l,r,d,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(x,y,d,l:int)</span>;</span></div><div class="line"><span class="keyword">var</span> h,t,cnt:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">0</span>;cnt:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> (x&gt;<span class="number">0</span>) <span class="keyword">and</span> (y&gt;<span class="number">0</span>) <span class="keyword">and</span> (x&lt;=n) <span class="keyword">and</span> (y&lt;=m) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> map[x,y]=<span class="string">'x'</span> <span class="keyword">then</span> <span class="keyword">begin</span> h:=<span class="number">1</span>;t:=<span class="number">0</span> <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (q[t,<span class="number">0</span>]&lt;f[x,y]-cnt) <span class="keyword">do</span> dec(t);</div><div class="line">        inc(t);q[t,<span class="number">0</span>]:=f[x,y]-cnt;q[t,<span class="number">1</span>]:=cnt;</div><div class="line">        <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (cnt-q[h,<span class="number">1</span>]&gt;l) <span class="keyword">do</span> inc(h);</div><div class="line">        f[x,y]:=q[h,<span class="number">0</span>]+cnt;</div><div class="line">        ans:=max(ans,f[x,y]);</div><div class="line">        inc(x,dir[d,<span class="number">0</span>]);inc(y,dir[d,<span class="number">1</span>]);inc(cnt);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'adv1900.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'adv1900.out'</span>);rewrite(output);</div><div class="line">    readln(n,m,sx,sy,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(map[i,j]);</div><div class="line">        readln;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,-inf);</div><div class="line">    f[sx,sy]:=<span class="number">0</span>;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(l,r,d);</div><div class="line">        <span class="keyword">if</span> d=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> dp(n,j,d,r-l+<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> d=<span class="number">2</span> <span class="keyword">then</span> <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> dp(<span class="number">1</span>,j,d,r-l+<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> d=<span class="number">3</span> <span class="keyword">then</span> <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> dp(j,m,d,r-l+<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> d=<span class="number">4</span> <span class="keyword">then</span> <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> dp(j,<span class="number">1</span>,d,r-l+<span class="number">1</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P4-Dividing"><a href="#P4-Dividing" class="headerlink" title="P4 Dividing"></a>P4 Dividing</h1><p>Marsha and Bill own a collection of marbles. They want to split the collection among themselves so that both receive an equal share of the marbles. This would be easy if all the marbles had the same value, because then they could just split the collection in half. But unfortunately, some of the marbles are larger, or more beautiful than others. So, Marsha and Bill start by assigning a value, a natural number between one and six, to each marble. Now they want to divide the marbles so that each of them gets the same total value. Unfortunately, they realize that it might be impossible to divide the marbles in this way (even if the total value of all marbles is even). For example, if there are one marble of value 1, one of value 3 and two of value 4, then they cannot be split into sets of equal value. So, they ask you to write a program that checks whether there is a fair partition of the marbles.</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>Each line in the input file describes one collection of marbles to be divided. The lines contain six non-negative integers n1 , . . . , n6 , where ni is the number of marbles of value i. So, the example from above would be described by the input-line “1 0 1 2 0 0”. The maximum total number of marbles will be 20000.<br>The last line of the input file will be “0 0 0 0 0 0”; do not process this line.</p>
<h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h3><p>For each collection, output “Collection #k:”, where k is the number of the test case, and then either “Can be divided.” or “Can’t be divided.”.<br>Output a blank line after each test case.</p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>1 0 1 2 0 0<br>1 0 0 0 1 1<br>0 0 0 0 0 0 </p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>Collection #1:<br>Can’t be divided.</p>
<p>Collection #2:<br>Can be divided.</p>
</blockquote>
<h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>这是<a href="http://noi.openjudge.cn/ch0405/16/" target="_blank" rel="external">OJ上的一道题</a><br>题目大意是：求给定数量的数字1~6能否分成和相等的两组。<br>体积为1..6的物品做多重背包，问达到体积sum div 2是否可行。<br>同样用单调队列优化即可，只不过这里不计价值，dp数组可以存boolean。<br>对于给定体积v=i+k*c，如果f[i-1,v]=true则入队，接下来无效元素出队，之后如果队列不为空则f[i,v]:=true<br>如果f[6,sum div 2]=true就可以被划分。</p>
<dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-单调队列及动规优化/dividing.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>dividing.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">6</span>] <span class="keyword">of</span> int;</div><div class="line">    i,sum,cnt,d:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">print</span><span class="params">(i:int;b:boolean)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    writeln(<span class="string">'Collection #'</span>,cnt,<span class="string">':'</span>);</div><div class="line">    <span class="keyword">if</span> b <span class="keyword">then</span> writeln(<span class="string">'Can be divided.'</span>) </div><div class="line">    <span class="keyword">else</span> writeln(<span class="string">'Can'</span>,chr(<span class="number">39</span>),<span class="string">'t be divided.'</span>);</div><div class="line">    writeln;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(c,a:int)</span>;</span></div><div class="line"><span class="keyword">var</span> h,t,k,i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> a=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    d:=min(sum,d+c*a);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> c-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        h:=<span class="number">1</span>;t:=<span class="number">0</span>;k:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> i+k*c&lt;=d <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> f[i+k*c] <span class="keyword">then</span> <span class="keyword">begin</span> inc(t);q[t]:=k <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (k-q[h]&gt;a) <span class="keyword">do</span> inc(h);</div><div class="line">            <span class="keyword">if</span> (h&lt;=t) <span class="keyword">then</span> f[i+k*c]:=true;</div><div class="line">            inc(k);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        sum:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">6</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(a[i]);</div><div class="line">            inc(sum,a[i]*i);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> sum=<span class="number">0</span> <span class="keyword">then</span> break;</div><div class="line">        inc(cnt);</div><div class="line">        <span class="keyword">if</span> odd(sum) <span class="keyword">then</span> <span class="keyword">begin</span> print(cnt,false);continue <span class="keyword">end</span>;</div><div class="line">        fillchar(f,sizeof(f),false);</div><div class="line">        f[<span class="number">0</span>]:=true;d:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">6</span> <span class="keyword">do</span> dp(i,a[i]);</div><div class="line">        print(cnt,f[sum <span class="keyword">div</span> <span class="number">2</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P1-轰炸机&quot;&gt;&lt;a href=&quot;#P1-轰炸机&quot; class=&quot;headerlink&quot; title=&quot;P1 轰炸机&quot;&gt;&lt;/a&gt;P1 轰炸机&lt;/h1&gt;&lt;p&gt;大山两侧的X国与Y国爆发了一场战争，由于山势险峻，只有一条山路可以通行，所以双方的军营都设置在这一条路上（直线）。X国科学家正在研制一种高威力轰炸机，其炮弹可以大规模精准摧毁目标。由于在前线连连失利，X国高层决定提前将其投入使用。但由于研发尚未完成，仅有一枚导弹可供使用。这枚导弹至多可以摧毁M个目标（包括敌方军营和己方军营），但这些目标必须是连续的。&lt;br&gt;在一个月黑风高的夜晚，X国高层决定用这架轰炸机发起突袭。他们预先侦查到了山路上双方军营共有N个军营，并探清了每个军营的情况，他们请你帮他们设计出这次突袭战果最大的方案。&lt;br&gt;X国战国的计算公式为：战果=敌方损失的战斗力-己方损失的战斗力。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行两个整数 N,M;&lt;br&gt;第2~N+1行，每行一个整数Ai，表示第i个军营的属性值。&lt;br&gt;abs(Ai)表示第i个军营的战斗力。&lt;br&gt;Ai&gt;0，表明该军营是Y国的军营；&lt;br&gt;Ai&amp;lt;0，表明该军营是X国的军营；&lt;br&gt;Ai=0，表明该军营是空的。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;仅一行，输出使突袭战果最大的方案（按照输入顺序输出所有轰炸目标的属性值），每两个属性值之间用一个空格隔开。&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="单调队列" scheme="https://cothrax.github.io/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高2班 二分答案</title>
    <link href="https://cothrax.github.io/2016/08/20/JSOI2016-%E6%8F%90%E9%AB%982%E7%8F%AD-%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    <id>https://cothrax.github.io/2016/08/20/JSOI2016-提高2班-二分答案/</id>
    <published>2016-08-20T03:12:13.000Z</published>
    <updated>2016-08-20T03:59:49.801Z</updated>
    
    <content type="html"><![CDATA[<p>二分的坑点在于解的检验。</p>
<table>
<thead>
<tr>
<th>题号</th>
<th>检验方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>P1 P2</td>
<td>贪心</td>
</tr>
<tr>
<td>P3 P5</td>
<td>DP</td>
</tr>
<tr>
<td>P4</td>
<td>DFS</td>
</tr>
</tbody>
</table>
<h1 id="P1-晒衣服"><a href="#P1-晒衣服" class="headerlink" title="P1 晒衣服"></a>P1 晒衣服</h1><p>洗完衣服后，你要弄干衣服。衣服在自然条件下用1个单位时间可以晒干A点湿度，现在买了1台烘衣机，使用烘衣机可以让你用1个单位的时间使1件衣服除开自然晒干的A点湿度外，还可烘干B点湿度，但在1个单位的时间内只能对1件衣服使用。<br>N件衣服因为种种原因而不一样湿，现在告诉你每件衣服的湿度，要你求出弄干所有衣服的最少时间（湿度为0为干）。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件第一行N，A，B;<br>接下来1^行，每行一个数，表示衣服的湿度$a_i$（<span>$1\leq a_i\leq500000，1\leq N\leq 500000$</span><!-- Has MathJax -->）。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行一个整数，表示最少时间。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 2 1 1 2<br>3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>样例解析：<br>第1个单位时间内，用机器处理第3件衣服，此外，所有衣服自然晒干2。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-二分答案/dry.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>dry.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,a,b,l,r,mid,ans,i:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,cnt:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> x*a&lt;f[i] <span class="keyword">then</span> </div><div class="line">            inc(cnt,ceil((f[i]-x*a)/b));</div><div class="line">    check:=cnt&lt;=x;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'dry.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'dry.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,a,b);</div><div class="line">    l:=<span class="number">0</span>;r:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f[i]);</div><div class="line">        r:=max(f[i],r);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-收入计划"><a href="#P2-收入计划" class="headerlink" title="P2 收入计划"></a>P2 收入计划</h1><p>高考结束后，同学们大都找到了一份临时工作，渴望挣得一些零用钱。从今天起，Matrix67将 连续工作N天(1≤N≤00000)。每一天末他可以领取当天及前面若干天里没有领取的工资，但他总共 只有M(l^M^N)次领取工资的机会。Matrix67已经知道了在接下来的这N天里每一天他可以赚多少钱。为了避免自己滥用零花钱，他希望知道如何安排领取工资的时间才能使得领到工资最多的那一 次工资数额最小。<br>注意:Matrix67必须恰好领工资M次，且需要将所有的工资全部领走（即最后一天末需要领一次 工资）。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件第一行包括2个正整数N和M。<br>以下N行，每行一个不超过10000正整数，依次表示每一天的薪水。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出文件仅一行一个整数，表示领取到的工资的最大值最小是多少。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>75<br>100<br>400<br>300<br>100<br>500<br>101<br>400</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>500</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-二分答案/income.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>income.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,l,r,mid,ans:int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,sum,cnt:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    sum:=<span class="number">0</span>;cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]&gt;x <span class="keyword">then</span> <span class="keyword">exit</span>(false) <span class="comment">//不要忘了这个</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> sum+a[i]&gt;x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt);sum:=a[i]</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span></div><div class="line">            inc(sum,a[i]);</div><div class="line">    check:=(cnt+<span class="number">1</span>)&lt;=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'income.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'income.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    l:=<span class="number">0</span>;r:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i]);</div><div class="line">        inc(r,a[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-软件开发"><a href="#P3-软件开发" class="headerlink" title="P3 软件开发"></a>P3 软件开发</h1><p>一个软件开发公司同时要开发两个软件，并且要同时交付给用户，现在公司为了尽快完成这一 任务，将每个软件划分成m个模块，由公司里的技术人员分工完成，每个技术人员完成同一软件的 不同模块的所用的天数是相同的，并且是已知的，但完成不同软件的一个模块的时间是不同的，每 个技术人员在同一时刻只能做一个模块，一个模块只能由一个人独立完成而不能由多人协同完成。 一个技术人员在整个开发期内完成一个模块以后可以接着做任一软件的任一模块。写一个程序，求 出公司最早能在什么时候交付软件。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入数据共若干行。第一行包含两个由空格隔开的整数n和m，其中1≤n,m≤100。接下 来的n行每行包含两个用空格隔开的整数d1和d2, d1表示该技术人员完成第一个软件中的一个模块所需的天数，d2表示该技术人员完成第二个软件中的一个模块所需的天数，其中1≤d1,d2≤100 输出格式：<br>输出数据仅有一行包含一个整数d，表示公司最早能于d天后交付软件。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出文件仅一行一个整数，表示领取到的工资的最大值最小是多少。<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 20<br>1 1<br>2 4<br>1 6</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>18</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>最快的方案是第一个技术人员完成第二个软件的18个模块，用时18天，第三个技术人员完成 第一个软件的18个模块，用时18天，其余的模块由第二个技术人员完成，用时12天，做完所有模 块需要18天。如果第一个技术人员完成第二个软件的17个模块，第三个技术人员完成第一个软件 的17个模块，其余的模块由第二个技术人员完成，需要用时18天，做完所有模块仍然需要18天， 所以少于18天不可能做完所有模块。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>给定时间x，记f[i,j]为前i个人完成了软件1的j个模块后，能完成软件2的模块的最大数量，然后DP。</p>
<dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-二分答案/software.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>software.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,l,r,mid,ans:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> int;</div><div class="line">    d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j,k,maxs:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,-inf);</div><div class="line">    f[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        maxs:=x <span class="keyword">div</span> d[i,<span class="number">0</span>];</div><div class="line">        <span class="keyword">for</span> j:=m <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> </div><div class="line">            <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> min(maxs,j) <span class="keyword">do</span></div><div class="line">                f[j]:=max(f[j],f[j-k]+(x-k*d[i,<span class="number">0</span>]) <span class="keyword">div</span> d[i,<span class="number">1</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    check:=f[m]&gt;=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'software.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'software.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(d[i,<span class="number">0</span>],d[i,<span class="number">1</span>]);</div><div class="line">    l:=<span class="number">1</span>;r:=inf;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P4-架设电话线"><a href="#P4-架设电话线" class="headerlink" title="P4 架设电话线"></a>P4 架设电话线</h1><p>FJ打算将电话线引到自己的农场，但电信公司并不打算为他提供免费服务。于是，H必须为此 向电信公司支付一定的费用。<br>FJ的农场周围分布着N(1≤N≤1000)根按1..N顺次编号的废弃的电话线杆，任意两根电话线杆间 都没有电话线相连。一共P(1≤P≤1OOOO)对电话线杆间可以拉电话线，其余的那些由于隔得太远而无 法被连接。第i对电话线杆的两个端点分别为Ai、Bi，它们间的距离为Li(1≤Li≤1,000,000)。数据中 保证每对(Ai，Bi)最多只出现1次。编号为1的电话线杆已经接入了全国的电话网络，整个农场的 电话线全都连到了编号为N的电话线杆上。也就是说，FJ的任务仅仅是找一条将1号和N号电话线 杆连起来的路径，其余的电话线杆并不一定要连入电话网络。<br>经过谈判，电信公司最终同意免费为FJ连结K((0≤K\&lt;N)对由H指定的电话线杆。对于此外的那 些电话线，n需要为它们付的费用，等于其中最长的电话线的长度（每根电话线仅连结一对电话线 杆）。如果需要连结的电话线杆不超过K对，那么FJ的总支出为0。<br>请你计算一下，FJ最少需要在电话线上花多少钱。</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件第1行:3个用空格隔开的整数：N, P，以及K。<br>第2..P+1行：第i+1行为3个用空格隔开的整数：Ai，Bi，Li。</p>
<h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出文件一行一个整数，为FJ这项工程上的最小支出。如果任务不可能完成，输出-1。<br><!--more--></p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 7 1<br>1 2 5<br>3 1 4<br>2 4 8<br>3 2 3<br>5 2 9<br>3 4 7<br>4 5 6</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p>一共有5根废弃的电话线杆。电话线杆1不能直接与电话线杆4、5相连。电话线杆5不能直接 与电话线杆1、3相连。其余所有电话线杆间均可拉电话线。电信公司可以免费为FJ连结一对电话 线杆。<br>FJ选择如下的连结方案：1-&gt;3; 3-&gt;2; 2-&gt;5,这3对电话线杆间需要的电话线的长度分别为4、 3、9。FJ让电信公司提供那条长度为9的电话线，于是，他所需要购买的电话线的最大长度为4。</p>
<h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>最小化最大值，二分答案，不能再裸了。<br>给定费用x，从1开始dfs，距离小于x的边直接走过去，大于的话递归统计数量j，当j&gt;k时exit。<br>注意判重数组为used[n,k]而不是used[n]<br>可以用flag记录一下有没有走到n，如果有直接exit就好。</p>
<dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-二分答案/phoneline.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>phoneline.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span></div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next,w:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">20010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,p,k,i,l,r,mid,ans,f0,t0,w0:int;</div><div class="line">    flag:boolean;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,j:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> j&gt;k <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> v=n <span class="keyword">then</span> <span class="keyword">begin</span> flag:=true;<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    used[v,j]:=true;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> (g[i].w&lt;=mid) <span class="keyword">and</span> <span class="keyword">not</span> used[u,j] <span class="keyword">then</span> dfs(u,j);</div><div class="line">        <span class="keyword">if</span> (g[i].w&gt;mid) <span class="keyword">and</span> <span class="keyword">not</span> used[u,j+<span class="number">1</span>] <span class="keyword">then</span> dfs(u,j+<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> flag <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(used,sizeof(used),false);</div><div class="line">    flag:=false;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    check:=flag;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'phoneline.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'phoneline.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,p,k);</div><div class="line">    l:=<span class="number">0</span>;r:=<span class="number">0</span>;</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">        add(f0,t0,w0);add(t0,f0,w0);</div><div class="line">        r:=max(r,w0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=-<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check() <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P5-圣诞节的花环"><a href="#P5-圣诞节的花环" class="headerlink" title="P5 圣诞节的花环"></a>P5 圣诞节的花环</h1><p>圣诞节就要到了。现在有个困难的任务摆在你眼前——装饰房间。你手头上有n朵大小相同的 花，第i朵花的重量为Wi。现在打算用一根绳将这n朵花按顺序穿起来，挂在天花板上。绳子被m 个点固定，也就是绳子的一头被固定在1号点，另外一头固定在m号点，中间部分需要固定在剩余 的点。当然，装饰还有一些规则要注意：<br>1、每一段需要包含非0的偶数个花朵。正因如此，我们可以将每一段划分为两个半段。<br>2、为了减小你的客人撞到花环的可能，花环不能挂的太低：也就是说，每个半段不能超过d朵花。<br>3、最后，你需要让所有半段的重量的最大值最小。<br>下图是一个不错的安排方案，圈中的数字代表花朵的重量。<br><img src="/2016/08/20/JSOI2016-提高2班-二分答案/t.jpg" alt="t.jpg" title=""></p>
<h2 id="格式-4"><a href="#格式-4" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件第一行包含三个正整数n, m和d( 1≤1≤15000,2≤m≤10000,1≤d≤2000,且n*d≤5000000)。<br>接下来一行包含n个正整数w1，w2, …，wn (l≤w≤1OOOO)，代表对应花的重量。</p>
<h2 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行一个整数，代表最小的所有半段重量的最大值。如果没有方案满足条件，那么你只要 输出“BAD”（不包括引号）。</p>
<h2 id="样例-4"><a href="#样例-4" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 3 10 10 10<br>20 20</p>
<p>6 4 10<br>1 1 100 100 1 1</p>
<p>6 3 10<br>1 1 100 100 1 1</p>
<p>1 2 2<br>333</p>
</blockquote>
<h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>20</p>
<p>100</p>
<p>200</p>
<p>BAD</p>
</blockquote>
<h2 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h2><p>又见最小化最大值。<br>首先，n为奇数显然是无解的。因为题中要求固定点<strong>恰好</strong>m个，且环不能为0，那么如果<span>$n&lt;2*(m-1)$</span><!-- Has MathJax -->，也是无解的。<br>然后二分最大重量。<br>可以DP做，f[i]表示前i<strong>对</strong>花最少需要分成几段，于是<span>$f[i]=max\{f[j]+1\}$</span><!-- Has MathJax -->。然后<span>$f[n]&lt;m$</span><!-- Has MathJax -->的话就返回true<br>但这样写样例3是过不了的，因为将整段划分成1个区间符合答案102，但1个区间是不能被截成m-1=2个区间的。<br>实际上，如果k个区间可行，那么k+2个区间是可行的。<br>所以分奇偶讨论，f[n,0..1]，0为偶数段，1为奇数段<br><span>$f[i,0]=max\{f[j,1]+1\}$</span><!-- Has MathJax --><br><span>$f[i,1]=max\{f[j,0]+1\}$</span><!-- Has MathJax --></p>
<dir style="text-align:right"><a href="/2016/08/20/JSOI2016-提高2班-二分答案/flow.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>flow.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,d,i,l,r,mid,ans:int;</div><div class="line">    w,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">15010</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">15010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">div</span> <span class="number">2</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i-<span class="number">1</span> <span class="keyword">downto</span> max(i-d,<span class="number">0</span>) <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> max(s[<span class="number">2</span>*j+i-j]-s[<span class="number">2</span>*j],s[<span class="number">2</span>*i]-s[<span class="number">2</span>*j+i-j])&lt;=x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                f[i,<span class="number">0</span>]:=min(f[i,<span class="number">0</span>],f[j,<span class="number">1</span>]+<span class="number">1</span>);</div><div class="line">                f[i,<span class="number">1</span>]:=min(f[i,<span class="number">1</span>],f[j,<span class="number">0</span>]+<span class="number">1</span>);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    check:=f[n <span class="keyword">div</span> <span class="number">2</span>,(m-<span class="number">1</span>) <span class="keyword">and</span> <span class="number">1</span>]&lt;m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'flow.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'flow.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,d);</div><div class="line">    <span class="keyword">if</span> odd(n) <span class="keyword">or</span> (n&lt;<span class="number">2</span>*m-<span class="number">2</span>) <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="string">'BAD'</span>);halt <span class="keyword">end</span>;</div><div class="line">    l:=<span class="number">0</span>;r:=<span class="number">0</span>;s[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(w[i]);</div><div class="line">        inc(r,w[i]);</div><div class="line">        s[i]:=s[i-<span class="number">1</span>]+w[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    ans:=-<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> ans=-<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">write</span>(<span class="string">'BAD'</span>) <span class="keyword">else</span> <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二分的坑点在于解的检验。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题号&lt;/th&gt;
&lt;th&gt;检验方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P1 P2&lt;/td&gt;
&lt;td&gt;贪心&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P3 P5&lt;/td&gt;
&lt;td&gt;DP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P4&lt;/td&gt;
&lt;td&gt;DFS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-晒衣服&quot;&gt;&lt;a href=&quot;#P1-晒衣服&quot; class=&quot;headerlink&quot; title=&quot;P1 晒衣服&quot;&gt;&lt;/a&gt;P1 晒衣服&lt;/h1&gt;&lt;p&gt;洗完衣服后，你要弄干衣服。衣服在自然条件下用1个单位时间可以晒干A点湿度，现在买了1台烘衣机，使用烘衣机可以让你用1个单位的时间使1件衣服除开自然晒干的A点湿度外，还可烘干B点湿度，但在1个单位的时间内只能对1件衣服使用。&lt;br&gt;N件衣服因为种种原因而不一样湿，现在告诉你每件衣服的湿度，要你求出弄干所有衣服的最少时间（湿度为0为干）。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入文件第一行N，A，B;&lt;br&gt;接下来1^行，每行一个数，表示衣服的湿度$a_i$（&lt;span&gt;$1\leq a_i\leq500000，1\leq N\leq 500000$&lt;/span&gt;&lt;!-- Has MathJax --&gt;）。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出一行一个整数，表示最少时间。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="线性DP" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%80%A7DP/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高2班 树形DP（二）</title>
    <link href="https://cothrax.github.io/2016/08/19/JSOI2016-%E6%8F%90%E9%AB%982%E7%8F%AD-%E6%A0%91%E5%BD%A2DP%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://cothrax.github.io/2016/08/19/JSOI2016-提高2班-树形DP（二）/</id>
    <published>2016-08-19T03:58:32.000Z</published>
    <updated>2016-08-24T05:49:36.108Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P5-The-more-The-better"><a href="#P5-The-more-The-better" class="headerlink" title="P5 The more, The better"></a>P5 The more, The better</h1><p>ACboy很喜欢玩一种战略游戏，在一个地图上，有N座城堡，每座城堡都有一定的宝物，在每次游戏中ACboy允许攻克M个城堡并获得里面的宝物。但由于地理位置原因，有些城堡不能直接攻克，要攻克这些城堡必须先攻克其他某一个特定的城堡。你能帮ACboy算出要获得尽量多的宝物应该攻克哪M个城堡吗？</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>每个测试实例首先包括2个整数，N,M.(1 &lt;= M &lt;= N &lt;= 200);在接下来的N行里，每行包括2个整数，a,b. 在第 i 行，a 代表要攻克第 i 个城堡必须先攻克第 a 个城堡，如果 a = 0 则代表可以直接攻克第 i 个城堡。b 代表第 i 个城堡的宝物数量, b &gt;= 0。当N = 0, M = 0输入结束。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>对于每个测试实例，输出一个整数，代表ACboy攻克M个城堡所获得的最多宝物的数量。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 2<br>0 1<br>0 2<br>0 3<br>7 4<br>2 2<br>0 1<br>0 4<br>2 1<br>7 1<br>7 6<br>2 2<br>0 0</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>5<br>13</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的树形背包，多叉转二叉后做就可以了。<br>杭电OJ不知怎么爆掉了，以下代码没测，仅供参考思路。交上去应该会ce，因为uses math</p>
<dir style="text-align:right"><a href="/2016/08/19/JSOI2016-提高2班-树形DP（二）/test.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>test.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    br,ch,w:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">210</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">210</span>,<span class="number">0</span>..<span class="number">210</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,a:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(p,c:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    br[c]:=ch[p];</div><div class="line">    ch[p]:=c;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dp</span><span class="params">(v,j:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (v=<span class="number">0</span>) <span class="keyword">or</span> (v=<span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> f[v,j]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(f[v,j]);</div><div class="line">    f[v,j]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> j-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">        f[v,j]:=max(f[v,j],dp(ch[v],i)+w[v]+dp(br[v],j-i-<span class="number">1</span>));</div><div class="line">    f[v,j]:=max(f[v,j],dp(br[v],j));</div><div class="line">    dp:=f[v,j];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">while</span> (n&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (m&lt;&gt;<span class="number">0</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        fillchar(br,sizeof(br),<span class="number">0</span>);</div><div class="line">        fillchar(ch,sizeof(ch),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(a,w[i]);</div><div class="line">            add(a,i);        </div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,-<span class="number">1</span>);</div><div class="line">        writeln(dp(ch[<span class="number">0</span>],m));</div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P6-作业大会"><a href="#P6-作业大会" class="headerlink" title="P6 作业大会"></a>P6 作业大会</h1><p>可爱的凯文在高一时就统计了所有人的联系方式，完成了教一的通讯录。每年的寒暑假开作业大会的时候这张通讯录就充分发挥了作用。同志们根据这张通讯录制定了通讯网络，可以抽象成一棵树。<br>每个节点（除叶子节点）首先接受他的所有孩子节点完成的卷子。接着他选择可以完成任意一张未完成的卷子，也可以选择不做。最后所有完成的卷子被汇总到树根节点。<br>很显然做卷子是要消耗时间的，卷子从孩子传到父亲也是要耗时间的。你的任务就是安排一个计划使得消耗最少时间完成所有卷子并汇总到树根。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数n，m。表示人数和卷子总数。<br>接下来n-1行每行三个整数x，y，c。表示x和y连通，在x和y之间传递时间为c。<br>最后n行，每行m个整数。第i行第j列的整数是编号i的节点完成第j张卷子消耗的时间。<br>n&lt;=55，m&lt;=11，保证n&gt;=m。根节点的编号为1。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个整数t。表示消耗的最小总时间。保证答案在longint范围内。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>6 3<br>1 2 1<br>1 3 1<br>2 4 1<br>2 5 1<br>3 6 1<br>3 4 3<br>3 2 5<br>6 1 2<br>1 8 9<br>8 8 1<br>4 7 6</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>7</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p><strong>树形DP+状压</strong>，又是一个下午==<br>我的想法是多叉转二叉后做。<br>f[v,s]表示v的子树，完成状态s的卷子所需的时间，对应的记忆化函数为dp(v,s)<br>a[v,i]指v做卷子i的时间，w[v]指v向父节点传输的时间</p>
<ol>
<li>枚举v做的卷子i，在剩余的卷子$s1=s-1\ shl\ (i-1)$中，枚举子节点做的卷子状态s2，于是答案<span>$=w[v]+a[v,i]+dp(ch[v],s2)+dp(br[v],s1\ xor\ s2)$</span><!-- Has MathJax --></li>
<li>v不做卷子，直接枚举子节点做的卷子状态s1，答案<span>$=w[v]+dp(ch[v],s1)+dp(br[v],s1\ xor\ s)$</span><!-- Has MathJax -->，注意$s1\not=0$</li>
<li>卷子全部给兄弟节点做，答案$=dp(br[v],s)$</li>
</ol>
<p>但转二叉后的问题在于冗余的情况非常的多，然后就TLE了，于是考虑优化：<br>cnt[x]记录x的二进制中1的个数<br>siz[v]以v为根的子树节点个数<br>当cnt[s]&gt;siz[v]时，直接返回inf。这个剪枝是非常厉害的。</p>
<p>标程是直接的多叉上做的，启发式合并什么的然而我并不会。</p>
<dir style="text-align:right"><a href="/2016/08/19/JSOI2016-提高2班-树形DP（二）/network.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>network.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">120</span>] <span class="keyword">of</span> edge; <span class="comment">//存多叉</span></div><div class="line">    head,br,ch,w,siz:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">60</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">60</span>,<span class="number">0</span>..<span class="number">15</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">60</span>,<span class="number">0</span>..<span class="number">1</span> <span class="keyword">shl</span> <span class="number">11</span>-<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span> <span class="keyword">shl</span> <span class="number">11</span>-<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,k,i,j,f0,t0,w0:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">//多叉转二叉</span></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,p,w0:int)</span>;</span><span class="keyword">inline</span>;</div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    br[v]:=ch[p];ch[p]:=v;w[v]:=w0;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> dfs(u,v,g[i].w);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">//计算x的二进制表示中1的个数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    count:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> x&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(count);</div><div class="line">        dec(x,x <span class="keyword">and</span> (-x));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="comment">//计算以v为根的子树的节点数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(v:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> v=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    siz[v]:=cal(ch[v])+cal(br[v])+<span class="number">1</span>;</div><div class="line">    cal:=siz[v];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dp</span><span class="params">(v,s:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> x,i,j,s1,s2,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> cnt[s]&gt;siz[v] <span class="keyword">then</span> <span class="keyword">exit</span>(inf); <span class="comment">//剪枝</span></div><div class="line">    <span class="keyword">if</span> f[v,s]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(f[v,s]);</div><div class="line">    <span class="keyword">if</span> s=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> v=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(inf);</div><div class="line"></div><div class="line">    x:=s;</div><div class="line">    f[v,s]:=inf;</div><div class="line">    <span class="keyword">while</span> x&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span> <span class="comment">//枚举v做的卷子</span></div><div class="line">        i:=x <span class="keyword">and</span> (-x);</div><div class="line">        j:=round(ln(i)/ln(<span class="number">2</span>))+<span class="number">1</span>;</div><div class="line">        s1:=s <span class="keyword">and</span> <span class="keyword">not</span> i;</div><div class="line">        f[v,s]:=min(f[v,s],w[v]+a[v,j]+min(dp(br[v],s1),dp(ch[v],s1)));</div><div class="line">        </div><div class="line">        s2:=s1;</div><div class="line">        <span class="keyword">while</span> s2&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span> <span class="comment">//枚举子节点做的卷子</span></div><div class="line">            tmp:=w[v]+a[v,j]+dp(ch[v],s2)+dp(br[v],s1 xor s2);</div><div class="line">            f[v,s]:=min(f[v,s],tmp);</div><div class="line">            s2:=(s2-<span class="number">1</span>) <span class="keyword">and</span> s1;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        x:=x <span class="keyword">and</span> <span class="keyword">not</span> i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    s1:=s; <span class="comment">//v不做卷子</span></div><div class="line">    <span class="keyword">while</span> s1&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span> <span class="comment">//枚举子节点做的卷子</span></div><div class="line">        f[v,s]:=min(f[v,s],w[v]+dp(ch[v],s1)+dp(br[v],s xor s1));</div><div class="line">        s1:=(s1-<span class="number">1</span>) <span class="keyword">and</span> s;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    f[v,s]:=min(f[v,s],dp(br[v],s)); <span class="comment">//全给兄弟做</span></div><div class="line">    dp:=f[v,s];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'network.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'network.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    k:=<span class="number">1</span> <span class="keyword">shl</span> m-<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> cnt[i]:=count(i);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">        add(f0,t0,w0);add(t0,f0,w0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);cal(<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i,j]);</div><div class="line">    </div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,-<span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>(dp(<span class="number">1</span>,k));</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<p>如果想用多叉，可以欣赏一下标程：<a href="/2016/08/19/JSOI2016-提高2班-树形DP（二）/network2.pas" title="戳这里">戳这里</a></p>
<h1 id="P7-消防站"><a href="#P7-消防站" class="headerlink" title="P7 消防站"></a>P7 消防站</h1><p>Z国有N个城市，编号为1~N。城市之间用高速公路连接，任意两个城市之间有且仅有一条路径。<br>最近，Z国火灾频发，于是政府决定在一些城市建立一些消防站，在城市K建立消防站需要花费W（K），每个城市的W可能不同。如果不在城市K建立消防站，那么需要保证离K最近的消防站与K的距离不超过D（K）。每个城市的D可能不同。<br>为了节省开支，政府希望你计算满足要求的最小花费。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个整数T，表示测试数据组数。<br>接下来一共T部分，每部分格式如下：<br>第一行包含一个整数N(1≤n≤1000)。<br>第二行包含N个整数，第i个整数表示W（i）(0 &lt; W(i) &lt;= 10000)。<br>第三行包含N个整数，第i个整数表示D（i）（0 &lt;= D(i) &lt;= 10000）。<br>接下来n-1行，每行三个数u，v，L(1 &lt;= u, v &lt;= N，0 &lt; L &lt;= 1000)，表示城市u和城市v之间有一条长度为l的高速公路。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>每组测试数据输出一个整数，表示最小费用。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><blockquote>
<p>1<br>5<br>1 1 1 1 1<br>2 1 1 1 2<br>1 2 1<br>2 3 1<br>3 4 1<br>4 5 1</p>
</blockquote>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><blockquote>
<p>1</p>
</blockquote>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>好像很厉害的树形DP，完整分析可以看<a href="/2016/08/19/JSOI2016-提高2班-树形DP（二）/消防站解题报告.doc" title="陈启峰的解题报告">陈启峰的解题报告</a>。<br>这里简单说一下思路：<br>ans[i]记录以i为根的子树全部被覆盖的最优值<br>f[i,j]记录以i为根的子树，在i依赖j的情况下的最优值<br>树形DP的方程都不好表示，直接看代码好了。<br>可以用dfs预处理两点距离，当然也可以倍增做。</p>
<dir style="text-align:right"><a href="/2016/08/19/JSOI2016-提高2班-树形DP（二）/fire.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>fire.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,t,i,f0,t0,w0:int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2010</span>] <span class="keyword">of</span> edge;</div><div class="line">    dist,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    w,lim,ans,head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cal</span><span class="params">(v,p,d:int)</span>;</span></div><div class="line"><span class="keyword">var</span> j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    dist[i,v]:=d;</div><div class="line">    j:=head[v];</div><div class="line">    <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> g[j].t&lt;&gt;p <span class="keyword">then</span> cal(g[j].t,v,d+g[j].w);</div><div class="line">        j:=g[j].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> g[i].t&lt;&gt;p <span class="keyword">then</span> dp(g[i].t,v);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dist[v,i]&lt;=lim[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            f[v,i]:=w[i];</div><div class="line">            j:=head[v];</div><div class="line">            <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                <span class="keyword">if</span> g[j].t&lt;&gt;p <span class="keyword">then</span> </div><div class="line">                    inc(f[v,i],min(ans[g[j].t],f[g[j].t,i]-w[i]));</div><div class="line">                j:=g[j].next;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            ans[v]:=min(ans[v],f[v,i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'fire.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'fire.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">while</span> t&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">        filldword(ans,sizeof(ans) <span class="keyword">shr</span> <span class="number">2</span>,inf);</div><div class="line">        filldword(f,sizeof(f) <span class="keyword">shr</span> <span class="number">2</span>,inf);</div><div class="line">        filldword(dist,sizeof(dist) <span class="keyword">shr</span> <span class="number">2</span>,inf);</div><div class="line">        </div><div class="line">        <span class="keyword">read</span>(n);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(lim[i]);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">            add(f0,t0,w0);add(t0,f0,w0);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> cal(i,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">        </div><div class="line">        dp(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">        writeln(ans[<span class="number">1</span>]);</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P5-The-more-The-better&quot;&gt;&lt;a href=&quot;#P5-The-more-The-better&quot; class=&quot;headerlink&quot; title=&quot;P5 The more, The better&quot;&gt;&lt;/a&gt;P5 The more, The better&lt;/h1&gt;&lt;p&gt;ACboy很喜欢玩一种战略游戏，在一个地图上，有N座城堡，每座城堡都有一定的宝物，在每次游戏中ACboy允许攻克M个城堡并获得里面的宝物。但由于地理位置原因，有些城堡不能直接攻克，要攻克这些城堡必须先攻克其他某一个特定的城堡。你能帮ACboy算出要获得尽量多的宝物应该攻克哪M个城堡吗？&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;每个测试实例首先包括2个整数，N,M.(1 &amp;lt;= M &amp;lt;= N &amp;lt;= 200);在接下来的N行里，每行包括2个整数，a,b. 在第 i 行，a 代表要攻克第 i 个城堡必须先攻克第 a 个城堡，如果 a = 0 则代表可以直接攻克第 i 个城堡。b 代表第 i 个城堡的宝物数量, b &amp;gt;= 0。当N = 0, M = 0输入结束。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;对于每个测试实例，输出一个整数，代表ACboy攻克M个城堡所获得的最多宝物的数量。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="树形DP" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2DP/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="位运算" scheme="https://cothrax.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="状压DP" scheme="https://cothrax.github.io/tags/%E7%8A%B6%E5%8E%8BDP/"/>
    
      <category term="树形背包" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2%E8%83%8C%E5%8C%85/"/>
    
      <category term="树结构" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班 Day4</title>
    <link href="https://cothrax.github.io/2016/08/19/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day4/"/>
    <id>https://cothrax.github.io/2016/08/19/JSOI2016-提高1班-Day4/</id>
    <published>2016-08-19T01:03:58.000Z</published>
    <updated>2016-08-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P1-公约数"><a href="#P1-公约数" class="headerlink" title="P1 公约数"></a>P1 公约数</h1><p>小w 最近仔细研究了公约数，他想到了以下问题：<br>现有n 个正整数，从中选k（2&lt;=k&lt;=n）个，设这k 个数的最大公约数为g，则这k 个数<br>的价值为k*g。求这个价值的最大值。<br>小w 当然知道答案了。现在他想考考你，你能很快回答出来吗？</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行，一个整数n。<br>第二行，n 个正整数。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行一个正整数，表示答案。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>4 6 3 8 9</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>9</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于30%数据，N&lt;=100<br>对于100%数据，N&lt;=200000，输入第二行每个数字不超过2000000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>开始莫名其妙想到了背包，结果是枚举。<br>枚举公约数就好了。</p>
<dir style="text-align:right"><a href="/2016/08/19/JSOI2016-提高1班-Day4/gcd.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>gcd.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,cur:int;ans:int64;</div><div class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'gcd.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'gcd.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n);m:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        inc(cnt[j]);</div><div class="line">        m:=max(m,j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        j:=i;cur:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> j&lt;=m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            inc(cur,cnt[j]);</div><div class="line">            inc(j,i);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> cur&lt;<span class="number">2</span> <span class="keyword">then</span> continue;</div><div class="line">        ans:=max(ans,cur*i);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-友好城市"><a href="#P2-友好城市" class="headerlink" title="P2 友好城市"></a>P2 友好城市</h1><p>小w 生活在美丽的Z 国。Z 国是一个有n 个城市的大国，城市之间有m 条单向公路（连<br>接城市i、j 的公路只能从i 连到j）。城市i、j 是友好城市当且仅当从城市i 能到达城市j 并<br>且从城市j 能到达城市i。如果k 个城市两两互为友好城市，那么我们称这k 个城市是友好<br>城市群，k 为友好城市群的大小。现在小w 想知道友好城市群的大小最大为多少，你能告诉<br>他吗？</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个整数n 和m。<br>接下来m 行，每行两个整数i 和j，表示有从城市i 到城市j 的一条单向公路。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>共一行一个整数表示答案。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>10 12<br>3 7<br>1 2<br>4 5<br>7 10<br>10 8<br>6 8<br>2 1<br>3 8<br>10 3<br>6 8<br>7 3<br>4 1</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>对于30%的数据，n,m&lt;=100<br>对于80%的数据，n&lt;=1000,m&lt;=100000<br>对于100%的数据，n,m&lt;=100000</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>咦这不是裸的强连通分量吗，上tarjan吧。<br>最后一个点好像由于分量大小BT，然后递归栈爆了。。。</p>
<dir style="text-align:right"><a href="/2016/08/19/JSOI2016-提高1班-Day4/friend.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>friend.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,dfn,low,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    ins:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,m,i,j,t,tim,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">tarjan</span><span class="params">(v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u,cnt:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);dfn[v]:=tim;low[v]:=tim;</div><div class="line">    inc(t);s[t]:=v;ins[v]:=true;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> dfn[u]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tarjan(u);</div><div class="line">            low[v]:=min(low[v],low[u]);</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[u] <span class="keyword">then</span></div><div class="line">            low[v]:=min(low[v],dfn[u]);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> low[v]=dfn[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        cnt:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> s[t+<span class="number">1</span>]&lt;&gt;v <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt);</div><div class="line">            ins[s[t]]:=false;</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        ans:=max(ans,cnt);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'friend.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'friend.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,t);add(j,t);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    t:=<span class="number">0</span>;tim:=<span class="number">0</span>;ans:=<span class="number">0</span>;</div><div class="line">    fillchar(dfn,sizeof(dfn),<span class="number">0</span>);</div><div class="line">    fillchar(ins,sizeof(ins),false);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> dfn[i]=<span class="number">0</span> <span class="keyword">then</span> tarjan(i);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-运货"><a href="#P3-运货" class="headerlink" title="P3 运货"></a>P3 运货</h1><p>小w 开了一家快递公司，在n 个城市之间进行货物运输工作，一共雇了m 个快递员。<br>每个快递员性格很奇特，第i 号快递员只愿意将货物从城市si 运送到ti（甚至不愿意将货物从ti 运送到si），并且如果他运送的货物量x&lt;=di，那么他要求获得的报酬为x<em>ai，否则为di</em>ai+(x-di)*bi。<br>现在小w 接到一个大订单，需要将f 单位货物从s 运送到t，请求出小w 的最小开支。<br>你可以假定每个快递员的运货量没有限制。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行五个整数n，m，s，t，f<br>接下来m 行每行五个数si,ti,ai,bi,di，描述一个快递员的信息。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>如有解请输出最小小开支，否则请输出“Impossible”。（不含引号）<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 4 0 3 5<br>0 1 3 0 3<br>1 3 3 0 3<br>0 2 2 1 6<br>2 3 2 1 6</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>18</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p>$n&lt;=100,m&lt;=1000,si,ti,s,t&lt;=n-1,f,di&lt;=200,ai,bi&lt;=1000$<br>保证至多只有一名邮递员<span>$ai&lt;bi$</span><!-- Has MathJax -->,其余均是<span>$ai&gt;bi$</span><!-- Has MathJax --><br>共50 组数据，保证数据有梯度。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>想到网络流，但模型不一样</p>
<ol>
<li>没有流量限制</li>
<li>有两种费用</li>
</ol>
<p>考虑到只有<strong>一名</strong>邮递员<span>$ai&lt;bi$</span><!-- Has MathJax -->，于是可以<strong>贪心</strong>。<br>如果没有这样的邮递员的话，显然对于一个邮递员要运<strong>尽量多的货物</strong>，才能使费用最少，这种情况下，直接用满流f，计算每条边的费用，然后跑floyd即可。<br>这个贪心可以反证，假设有一条路径上有两个邮递员i和j，它们的流都<span>$&lt;f$</span><!-- Has MathJax -->，不妨设<span>$ai&lt;aj$</span><!-- Has MathJax -->，把aj的流加到ai上显然更优。<br>如果有一个<span>$ai&gt;bi$</span><!-- Has MathJax -->的邮递员的话，对于经过这个邮递员x的路径s-&gt;t的最优解存可能存在另一种情况：</p>
<ol>
<li>s-&gt;t上经过x跑一个流为d[x]</li>
<li>s-&gt;t上不经过x跑一个流f-d[x]</li>
</ol>
<p>这样我们可以对这两种情况都跑一次floyd，然后枚举两点i,j根据三次floyd的结果得到最小值。</p>
<p>坑点</p>
<ol>
<li>f-d[x]的流不能经过x</li>
<li>存在大量重边QAQ</li>
<li>极大值inf不能太大，要加四倍可能会爆longint</li>
</ol>
<dir style="text-align:right"><a href="/2016/08/19/JSOI2016-提高1班-Day4/transport.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>transport.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>,<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    ds0,ds1,ds2:arr;</div><div class="line">    a,b,d,s,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,s0,t0,f,i,j,x,ans:int;</div><div class="line"></div><div class="line"><span class="comment">//flag标记能否经过邮递员x</span></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">floyd</span><span class="params">(<span class="keyword">var</span> ds:arr;f:int;flag:boolean)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,k:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    filldword(ds,sizeof(ds) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> flag <span class="keyword">and</span> (i=x) <span class="keyword">then</span> continue;</div><div class="line">        k:=a[i]*min(f,d[i])+b[i]*max(<span class="number">0</span>,f-d[i]);</div><div class="line">        ds[s[i],t[i]]:=min(k,ds[s[i],t[i]]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> ds[i,i]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">                ds[i,j]:=min(ds[i,k]+ds[k,j],ds[i,j]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'transport.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'transport.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,s0,t0,f);</div><div class="line">    inc(s0);inc(t0);</div><div class="line">    x:=-<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(s[i],t[i],a[i],b[i],d[i]);</div><div class="line">        inc(s[i]);inc(t[i]);</div><div class="line">        <span class="keyword">if</span> a[i]&lt;b[i] <span class="keyword">then</span> x:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    floyd(ds0,f,false);</div><div class="line">    <span class="keyword">if</span> (x=-<span class="number">1</span>) <span class="keyword">or</span> (f&lt;=d[x]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> ds0[s0,t0]=inf <span class="keyword">then</span> <span class="keyword">write</span>(<span class="string">'Impossible'</span>) </div><div class="line">        <span class="keyword">else</span> <span class="keyword">write</span>(ds0[s0,t0]);</div><div class="line">        close(input);close(output);halt;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    floyd(ds1,d[x],false);</div><div class="line">    floyd(ds2,f-d[x],true);</div><div class="line">    ans:=inf;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            ans:=min(ans,ds0[s0,i]+ds1[i,j]+ds2[i,j]+ds0[j,t0]);</div><div class="line">    <span class="keyword">if</span> ans=inf <span class="keyword">then</span> <span class="keyword">write</span>(<span class="string">'Impossible'</span>) <span class="keyword">else</span> <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P1-公约数&quot;&gt;&lt;a href=&quot;#P1-公约数&quot; class=&quot;headerlink&quot; title=&quot;P1 公约数&quot;&gt;&lt;/a&gt;P1 公约数&lt;/h1&gt;&lt;p&gt;小w 最近仔细研究了公约数，他想到了以下问题：&lt;br&gt;现有n 个正整数，从中选k（2&amp;lt;=k&amp;lt;=n）个，设这k 个数的最大公约数为g，则这k 个数&lt;br&gt;的价值为k*g。求这个价值的最大值。&lt;br&gt;小w 当然知道答案了。现在他想考考你，你能很快回答出来吗？&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行，一个整数n。&lt;br&gt;第二行，n 个正整数。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;一行一个正整数，表示答案。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="数论" scheme="https://cothrax.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="强连通分量" scheme="https://cothrax.github.io/tags/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高2班 树形DP（一）</title>
    <link href="https://cothrax.github.io/2016/08/18/JSOI2016-%E6%8F%90%E9%AB%982%E7%8F%AD-%E6%A0%91%E5%BD%A2DP/"/>
    <id>https://cothrax.github.io/2016/08/18/JSOI2016-提高2班-树形DP/</id>
    <published>2016-08-18T14:30:18.000Z</published>
    <updated>2016-08-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P1-学校网络"><a href="#P1-学校网络" class="headerlink" title="P1 学校网络"></a>P1 学校网络</h1><p>一所学校在几年前购进了第一台电脑（这台电脑的编号为1）。最近几年，学校又购买了N-1台电脑，每台新电脑和之前的某一台电脑连接。学校的管理员想知道对于每一台电脑i，到与它距离最远的电脑的距离Si。你需要提供这个信息。<br><img src="/2016/08/18/JSOI2016-提高2班-树形DP/T.jpg" alt="T.jpg" title=""><br>Hint: 样例输入如上图所示，从图中你可以知道，4号电脑到1号电脑的距离最远，所以S1=3。4号电脑和5号电脑到2号电脑的距离最远，所以S2=2。5号电脑到3号电脑距离最远，所以S3=3。由此类推S4=4，S5=4。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件包含多组测试数据，对于每组测试数据：<br>第一行包含一个整数N (N&lt;=10000) ；<br>接下来N-1行描述每一台电脑。第i行包含两个用空格隔开的整数y、l，表示i号电脑与之前的y号电脑连接，距离为l。<br>所有l之和不超过10^9。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>对于每组测试数据输出N行，第i行表示离i号电脑的最远距离Si。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>1 1<br>2 1<br>3 1<br>1 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3 2 3 4 4</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><dir style="text-align:right"><a href="/2016/08/18/JSOI2016-提高2班-树形DP/computer.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>computer.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">type</span></div><div class="line">    int=longint; </div><div class="line">    edge=<span class="keyword">record</span> f,t,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    f,p:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>,<span class="number">0</span>..<span class="number">2</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,j,k:int;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f;g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(f[v],sizeof(f[v]),<span class="number">0</span>);</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;dp(u);</div><div class="line">        tmp:=f[u,<span class="number">0</span>]+g[i].w;</div><div class="line">        <span class="keyword">if</span> tmp&gt;f[v,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            f[v,<span class="number">1</span>]:=f[v,<span class="number">0</span>];</div><div class="line">            f[v,<span class="number">0</span>]:=tmp;</div><div class="line">            f[v,<span class="number">2</span>]:=u;</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> tmp&gt;f[v,<span class="number">1</span>] <span class="keyword">then</span></div><div class="line">            f[v,<span class="number">1</span>]:=tmp;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    p[v]:=f[v];</div><div class="line">    <span class="keyword">if</span> p[par[v],<span class="number">2</span>]&lt;&gt;v <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        tmp:=p[par[v],<span class="number">0</span>]+w;</div><div class="line">        <span class="keyword">if</span> tmp&gt;p[v,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            p[v,<span class="number">1</span>]:=p[v,<span class="number">0</span>];</div><div class="line">            p[v,<span class="number">0</span>]:=tmp;</div><div class="line">            p[v,<span class="number">2</span>]:=par[v];</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> tmp&gt;p[v,<span class="number">1</span>] <span class="keyword">then</span></div><div class="line">            p[v,<span class="number">1</span>]:=tmp;</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        tmp:=p[par[v],<span class="number">1</span>]+w;</div><div class="line">        <span class="keyword">if</span> tmp&gt;p[v,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            p[v,<span class="number">1</span>]:=p[v,<span class="number">0</span>];</div><div class="line">            p[v,<span class="number">0</span>]:=tmp;</div><div class="line">            p[v,<span class="number">2</span>]:=par[v];</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> tmp&gt;p[v,<span class="number">1</span>] <span class="keyword">then</span></div><div class="line">            p[v,<span class="number">1</span>]:=tmp;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        dfs(g[i].t,g[i].w);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'computer.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'computer.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,k);</div><div class="line">        add(j,i,k);par[i]:=j;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dp(<span class="number">1</span>);</div><div class="line">    dfs(<span class="number">1</span>,-inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(p[i,<span class="number">0</span>]);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-黑手党"><a href="#P2-黑手党" class="headerlink" title="P2 黑手党"></a>P2 黑手党</h1><p>去年的芝加哥充满了黑帮争斗和奇怪的谋杀。警察局长真的厌倦了所有这些罪行，决定逮捕黑手党领袖。<br>不幸的是，芝加哥黑手党相当复杂的结构。没有人知道黑手党的信息。警方已经追踪他们一段时间的活动，并且知道他们中的一些人互相通信。根据收集到的资料，警察局长表明黑手党的层次结构可以表示为一棵树。黑手党首脑是树的根，每个节点表示一个人，一个节点的孩子即为这个节点表示的人的直接下属。<br>更不幸的是，虽然警方知道了匪徒的通讯，他们不知道谁是黑手党首脑。因此他们只有通信关系的无向树。<br>基于这样的思想，警察局长猜测可能表示黑手党首脑的节点必须满足：在删除它后，包含最多节点的剩余连通块的节点数最小。帮助警察找到所有可能成为黑手党首脑的节点。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含一个整数n(2≤n≤50000)，表示有n个人，编号为1~n。<br>接下来n-1行，每行两个数x，y，表示编号为x的人和编号为y的人之间有通信。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出所有可能成为黑手党首脑的人的编号，按升序排列，两个编号之间用空格隔开。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>6<br>1 2<br>2 3<br>2 5<br>3 4<br>3 6</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2 3</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><dir style="text-align:right"><a href="/2016/08/18/JSOI2016-提高2班-树形DP/godfather.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>godfather.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,i,j,k,mins:int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,siz,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[v];</div><div class="line">    siz[v]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            dp(u,v);</div><div class="line">            inc(siz[v],siz[u]);</div><div class="line">            f[v]:=max(f[v],siz[u]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;    </div><div class="line">    f[v]:=max(f[v],n-siz[v]);</div><div class="line">    mins:=min(mins,f[v]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'godfather.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'godfather.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,k);</div><div class="line">        add(j,k);add(k,j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    mins:=maxlongint;</div><div class="line">    dp(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> f[i]=mins <span class="keyword">then</span> <span class="keyword">write</span>(i,<span class="string">' '</span>);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-树的合并"><a href="#P3-树的合并" class="headerlink" title="P3 树的合并"></a>P3 树的合并</h1><p>话说moreD经过不懈努力，终于背完了循环整数，也终于完成了他的蛋糕大餐。 但是不幸的是， moreD得到了诅咒，受到诅咒的原因至今无人知晓。<br>moreD在发觉自己得到诅咒之后，决定去寻找闻名遐迩的术士CD帮忙。 话说CD最近在搞OI，遇到了一道有趣的题目： 给定两棵树， 则总共有N*M种方案把这两棵树通过加一条边连成一棵树， 那这N*M棵 树的直径之和是多少呢？<br>CD为了考验moreD是否值得自己费心力为他除去诅咒，于是要他编程回答这个问题， 但是这moreD早就被诅咒搞晕了头脑，就只好请你帮助他了。 </p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个正整数N,M，分别表示两棵树的大小。 接下来N-1行，每行两个正整数ai,bi,表示第一棵树上的边。 接下来M-1行，每行两个正整数ci,di,表示第二棵树上的边。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个整数，答案<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 3<br>1 2<br>2 3<br>2 4<br>1 3<br>2 3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>53</p>
</blockquote>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>首先，类似于P1，求两棵树上，每一个点的最长路g[i]。$O(N+M)$<br>然后，如果枚举的话$O(NM)$肯定会TLE的，于是<strong>乱搞</strong>：<br>cnt[l]统计g[i]小于l的节点个数，做前缀和即可，$O(N+M)$<br>顺便可以算出两棵树原来的直径d[0]和d[1]，我们记dl=max(d[0],d[1])</p>
<p>先想第一棵树：从节点i连一条边到另一棵树的节点x上，当$g[i]+g[x]+1&gt;=dl$时，g[i]会被统计进答案，将式子变形一下$g[x]&gt;=dl-g[i]-1$，也就是说g[i]被统计进答案的次数=另一棵树上最长路$&gt;=dl-g[i]-1$的节点个数，这个值我们用cnt算过了。<br>同理考虑第二棵树就可以了。</p>
<p>为了防止 新连的边1 和 不能形成新的直径（新直径小于dl）的树 被重复计算，我们统计n*m棵树中，能连成新直径的树的个数是$k$，答案加上$k+(n*m-k)*dl$就可以了。</p>
<p>这样总的复杂度是$O(N+M)$<br>但是有三个点数据量太大导致递归过深，然后202了。。。这不怪我，因为我试了一下标程也202了233。</p>
<dir style="text-align:right"><a href="/2016/08/18/JSOI2016-提高2班-树形DP/connect.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>connect.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line">    tree=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> tree;</div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> arr;</div><div class="line">    f,g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">2</span>] <span class="keyword">of</span> int;</div><div class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    d,n:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    i,j,f0,t0,dl,k,tmp:int;ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> g:tree;<span class="keyword">var</span> head:arr;f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(x,v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(f[x,v],sizeof(f[x,v]),<span class="number">0</span>);</div><div class="line">    i:=h[x][v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=t[x][i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            dp(x,u,v);</div><div class="line">            tmp:=f[x,u,<span class="number">0</span>]+<span class="number">1</span>;</div><div class="line">            <span class="keyword">if</span> tmp&gt;f[x,v,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                f[x,v,<span class="number">1</span>]:=f[x,v,<span class="number">0</span>];</div><div class="line">                f[x,v,<span class="number">0</span>]:=tmp;</div><div class="line">                f[x,v,<span class="number">2</span>]:=u;</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> tmp&gt;f[x,v,<span class="number">1</span>] <span class="keyword">then</span> </div><div class="line">                f[x,v,<span class="number">1</span>]:=tmp;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=t[x][i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(x,v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    g[x,v]:=f[x,v];</div><div class="line">    <span class="keyword">if</span> p&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> </div><div class="line">        <span class="keyword">if</span> g[x,p,<span class="number">2</span>]&lt;&gt;v <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=g[x,p,<span class="number">0</span>]+<span class="number">1</span>;</div><div class="line">            <span class="keyword">if</span> tmp&gt;g[x,v,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                g[x,v,<span class="number">1</span>]:=g[x,v,<span class="number">0</span>];</div><div class="line">                g[x,v,<span class="number">0</span>]:=tmp;</div><div class="line">                g[x,v,<span class="number">2</span>]:=p;</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> tmp&gt;g[x,v,<span class="number">1</span>] <span class="keyword">then</span></div><div class="line">                g[x,v,<span class="number">1</span>]:=tmp;</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">            tmp:=g[x,p,<span class="number">1</span>]+<span class="number">1</span>;</div><div class="line">            <span class="keyword">if</span> tmp&gt;g[x,v,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                g[x,v,<span class="number">1</span>]:=g[x,v,<span class="number">0</span>];</div><div class="line">                g[x,v,<span class="number">0</span>]:=tmp;</div><div class="line">                g[x,v,<span class="number">2</span>]:=p;</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> tmp&gt;g[x,v,<span class="number">1</span>] <span class="keyword">then</span></div><div class="line">                g[x,v,<span class="number">1</span>]:=tmp;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    i:=h[x][v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> t[x][i].t&lt;&gt;p <span class="keyword">then</span> dfs(x,t[x][i].t,v);</div><div class="line">        i:=t[x][i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'connect.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'connect.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n[<span class="number">0</span>],n[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n[i]-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(f0,t0);</div><div class="line">            add(t[i],h[i],f0,t0);add(t[i],h[i],t0,f0);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span> </div><div class="line">        dp(i,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">        dfs(i,<span class="number">1</span>,<span class="number">0</span>) </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        d[i]:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n[i] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt[i,g[i,j,<span class="number">0</span>]]);</div><div class="line">            d[i]:=max(d[i],g[i,j,<span class="number">0</span>]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> d[i] <span class="keyword">do</span></div><div class="line">            inc(cnt[i,j],cnt[i,j-<span class="number">1</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dl:=max(d[<span class="number">0</span>],d[<span class="number">1</span>]);</div><div class="line">    ans:=<span class="number">0</span>;k:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n[i] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            tmp:=n[<span class="number">1</span>-i]-cnt[<span class="number">1</span>-i,dl-g[i,j,<span class="number">0</span>]-<span class="number">1</span>];</div><div class="line">            inc(ans,tmp*g[i,j,<span class="number">0</span>]);</div><div class="line">            <span class="keyword">if</span> i=<span class="number">0</span> <span class="keyword">then</span> inc(k,tmp);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    inc(ans,k+(n[<span class="number">0</span>]*n[<span class="number">1</span>]-k)*dl);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P4-Contestants-Division"><a href="#P4-Contestants-Division" class="headerlink" title="P4 Contestants Division"></a>P4 Contestants Division</h1><p>有一棵N个点N-1条边的树，每个点有一个权值。需要删去一条边使这棵树分成的两部分权值差最小，求出最小的权值。</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>含有多组测试数据，最后以0 0 结尾。<br>第一行：N和M，表示点数和边数（M=N-1）。<br>第二行：N个整数，表示N个点的权值。<br>接下来M行：每行两个数a，b，表示a和b有连边。</p>
<h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>最小的权值差。格式见样例<br><!--more--></p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>7 6<br>1 1 1 1 1 1 1<br>1 2<br>2 7<br>3 7<br>4 6<br>6 2<br>5 7<br>0 0</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>Case 1: 1</p>
</blockquote>
<h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>这是<a href="http://poj.org/problem?id=3140" target="_blank" rel="external">POJ 3140</a>，题目被老师简化了于是直接做就好了，数据范围到POJ看吧。<br>ACM OJ对pascal总是异常的不友好，math库不能用，abs(int64)都没有重载。<br>关于这一题，统计子树权值和就可以了。</p>
<p><dir style="text-align:right"><a href="/2016/08/18/JSOI2016-提高2班-树形DP/3140.pas" title="复制代码">复制代码</a></dir><br><figure class="highlight delphi"><figcaption><span>3140.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,f0,t0,cnt:int;sum,ans:int64;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    w,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:int64)</span>:</span>int64;</div><div class="line"><span class="keyword">begin</span> <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> min:=b <span class="keyword">else</span> min:=a <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">qabs</span><span class="params">(a:int64)</span>:</span>int64;</div><div class="line"><span class="keyword">begin</span> <span class="keyword">if</span> a&lt;<span class="number">0</span> <span class="keyword">then</span> qabs:=-a <span class="keyword">else</span> qabs:=a <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    f[v]:=w[v];</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> p&lt;&gt;u <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            dp(u,v);</div><div class="line">            inc(f[v],f[u]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=min(ans,qabs(sum-f[v]*<span class="number">2</span>));</div><div class="line"><span class="keyword">end</span>;</div><div class="line">    </div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,m);cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (n&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (m&lt;&gt;<span class="number">0</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">        sum:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(w[i]);</div><div class="line">            inc(sum,w[i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(f0,t0);</div><div class="line">            add(f0,t0);add(t0,f0);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        ans:=sum;</div><div class="line">        dp(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">        inc(cnt);</div><div class="line">        writeln(<span class="string">'Case '</span>,cnt,<span class="string">': '</span>,ans);</div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P1-学校网络&quot;&gt;&lt;a href=&quot;#P1-学校网络&quot; class=&quot;headerlink&quot; title=&quot;P1 学校网络&quot;&gt;&lt;/a&gt;P1 学校网络&lt;/h1&gt;&lt;p&gt;一所学校在几年前购进了第一台电脑（这台电脑的编号为1）。最近几年，学校又购买了N-1台电脑，每台新电脑和之前的某一台电脑连接。学校的管理员想知道对于每一台电脑i，到与它距离最远的电脑的距离Si。你需要提供这个信息。&lt;br&gt;&lt;img src=&quot;/2016/08/18/JSOI2016-提高2班-树形DP/T.jpg&quot; alt=&quot;T.jpg&quot; title=&quot;&quot;&gt;&lt;br&gt;Hint: 样例输入如上图所示，从图中你可以知道，4号电脑到1号电脑的距离最远，所以S1=3。4号电脑和5号电脑到2号电脑的距离最远，所以S2=2。5号电脑到3号电脑距离最远，所以S3=3。由此类推S4=4，S5=4。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入文件包含多组测试数据，对于每组测试数据：&lt;br&gt;第一行包含一个整数N (N&amp;lt;=10000) ；&lt;br&gt;接下来N-1行描述每一台电脑。第i行包含两个用空格隔开的整数y、l，表示i号电脑与之前的y号电脑连接，距离为l。&lt;br&gt;所有l之和不超过10^9。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;对于每组测试数据输出N行，第i行表示离i号电脑的最远距离Si。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="树形DP" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2DP/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="树形背包" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2%E8%83%8C%E5%8C%85/"/>
    
      <category term="树结构" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班 Day2</title>
    <link href="https://cothrax.github.io/2016/08/17/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day2/"/>
    <id>https://cothrax.github.io/2016/08/17/JSOI2016-提高1班-Day2/</id>
    <published>2016-08-17T14:33:59.000Z</published>
    <updated>2016-08-18T03:39:33.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P1-超市"><a href="#P1-超市" class="headerlink" title="P1 超市"></a>P1 超市</h1><p>超市正在举行一个活动，该活动的规则如下：<br>想要参与的顾客会将他购物的账单放入纸箱中，账单上写有顾客的联系方式和购物的金额。每天超市关门前纸箱中金额最大、最小的两张帐单被取出，付款金额最大的顾客将获得一笔奖金，价值为取出的两张帐单的金额之差；为了不重复计算，取出的两张帐单不再放回箱子，而剩下的帐单仍保留在箱中，进行第二天的活动。<br>顾客很多，因此可假定：每天活动结束时，箱中至少有两张帐单以供取出。<br>小h也参加了这次活动，他想知道整个活动期间超市付出的奖金总额是多少？</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行是一个整数n，表示活动历时的天数。<br>以下的n行，每行包含若干由空格分隔的非负整数。第i+1行的数表示在第i天投入箱子的账单金额。每行的第一个数是一个整数k，表示当日账单的数目。后面的k个正整数代表这k笔账单的金额。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一个数，表示活动期间超市付出的奖金总额。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>3 1 2 3<br>2 1 1<br>4 10 5 5 1<br>0<br>1 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>19</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>设s为整个活动中涉及到的账单笔数。<br>30%的数据满足n≤100,s≤10000。<br>70%的数据满足s≤10^5。<br>100%的数据满足1≤n≤5000,0≤k≤10^5,s≤10^6,每笔账单的金额不超过10^6。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>用一个大根堆和一个小根堆，维护值对{金额,编号}，用del[i]记录编号i的账单是否已经被取出，然后模拟即可。</p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高1班-Day2/market.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>market.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> big=<span class="number">1</span>;small=-<span class="number">1</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    heap=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    tmp:=a;a:=b;b:=tmp;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(p,c,s:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> s=big <span class="keyword">then</span> com:=p&gt;c <span class="keyword">else</span> com:=p&lt;c;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">heapify</span><span class="params">(<span class="keyword">var</span> h:heap;x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> l,r,s:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=<span class="number">2</span>*x;r:=<span class="number">2</span>*x+<span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=h[<span class="number">0</span>,<span class="number">0</span>]) <span class="keyword">and</span> com(h[l,<span class="number">0</span>],h[x,<span class="number">0</span>],h[<span class="number">0</span>,<span class="number">1</span>]) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=x;</div><div class="line">    <span class="keyword">if</span> (r&lt;=h[<span class="number">0</span>,<span class="number">0</span>]) <span class="keyword">and</span> com(h[r,<span class="number">0</span>],h[s,<span class="number">0</span>],h[<span class="number">0</span>,<span class="number">1</span>]) <span class="keyword">then</span> s:=r;</div><div class="line">    <span class="keyword">if</span> s&lt;&gt;x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        swap(h[s,<span class="number">0</span>],h[x,<span class="number">0</span>]);</div><div class="line">        swap(h[s,<span class="number">1</span>],h[x,<span class="number">1</span>]);</div><div class="line">        heapify(h,s);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extract</span><span class="params">(<span class="keyword">var</span> h:heap)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    h[<span class="number">1</span>]:=h[h[<span class="number">0</span>,<span class="number">0</span>]];</div><div class="line">    dec(h[<span class="number">0</span>,<span class="number">0</span>]);</div><div class="line">    heapify(h,<span class="number">1</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(<span class="keyword">var</span> h:heap;k,v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(h[<span class="number">0</span>,<span class="number">0</span>]);i:=h[<span class="number">0</span>,<span class="number">0</span>];</div><div class="line">    h[i,<span class="number">0</span>]:=v;h[i,<span class="number">1</span>]:=k;</div><div class="line">    <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> com(h[i,<span class="number">0</span>],h[i <span class="keyword">div</span> <span class="number">2</span>,<span class="number">0</span>],h[<span class="number">0</span>,<span class="number">1</span>]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        swap(h[i,<span class="number">0</span>],h[i <span class="keyword">div</span> <span class="number">2</span>,<span class="number">0</span>]);</div><div class="line">        swap(h[i,<span class="number">1</span>],h[i <span class="keyword">div</span> <span class="number">2</span>,<span class="number">1</span>]);</div><div class="line">        i:=i <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> </div><div class="line">    hb,hs:heap;</div><div class="line">    i,j,n,m,cnt,each,b,s:int;</div><div class="line">    ans:int64;</div><div class="line">    del:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>] <span class="keyword">of</span> boolean;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'market.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'market.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    fillchar(del,sizeof(del),false);</div><div class="line">    hb[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;hb[<span class="number">0</span>,<span class="number">1</span>]:=big;</div><div class="line">    hs[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;hs[<span class="number">0</span>,<span class="number">1</span>]:=small;</div><div class="line">    cnt:=<span class="number">0</span>;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(m);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt);</div><div class="line">            <span class="keyword">read</span>(each);</div><div class="line">            insert(hs,cnt,each);</div><div class="line">            insert(hb,cnt,each);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="comment">//writeln(hb[0,0],' ',hs[0,0],' ',ans);</span></div><div class="line">        <span class="keyword">while</span> del[hb[<span class="number">1</span>,<span class="number">1</span>]] <span class="keyword">do</span> extract(hb);</div><div class="line">        b:=hb[<span class="number">1</span>,<span class="number">0</span>];del[hb[<span class="number">1</span>,<span class="number">1</span>]]:=true;extract(hb);</div><div class="line">        <span class="keyword">while</span> del[hs[<span class="number">1</span>,<span class="number">1</span>]] <span class="keyword">do</span> extract(hs);</div><div class="line">        s:=hs[<span class="number">1</span>,<span class="number">0</span>];del[hs[<span class="number">1</span>,<span class="number">1</span>]]:=true;extract(hs);</div><div class="line">        inc(ans,b-s);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-醉酒"><a href="#P2-醉酒" class="headerlink" title="P2 醉酒"></a>P2 醉酒</h1><p>小X 家住在一条东西向的大街上。在他们家的东面，自东向西依次分布着n 幢相似的房<br>屋，编号为1 到n,可以用一个长度为n 的字符串表示这n 幢房屋的颜色。<br>小X 的父亲经常喝醉酒，每次醉酒后他都会稀里糊涂地走到第Ai 幢房屋前，然后坚信<br>他现在第Bi 幢房屋前。虽然他喝醉了，但是他依然能分清每幢房屋的颜色，并且掏出地图<br>进行比较，只有房屋颜色和地图上一致时，他才会继续向西走。当他发现自己的错误或者不<br>能前进时，就会停下来。现在，小X 记录下了每次的数据Ai 和Bi，他希望知道父亲最多走<br>过多少幢相同颜色的房屋。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个数n 和m，表示n 幢房屋和m 次询问。<br>第二行一个长度为n 的字符串，仅包含大写字母。<br>接下来m 行，每行两个数Ai 和Bi。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>m 行，每个一个数，表示小X 的父亲父亲最多走过多少幢相同颜色的房屋。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><blockquote>
<p>10 6<br>AABBCCAABB<br>1 7<br>7 1<br>3 4<br>4 9<br>2 5<br>5 5</p>
</blockquote>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><blockquote>
<p>4<br>4<br>1<br>1<br>0<br>6</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于60%的数据，n,m≤100。<br>对于80%的数据，n≤1000。<br>对于100%的数据，n,m≤100000,Ai,Bi≤n。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>双字符串Hash+二分答案<br>预处理前缀Hash：$O(N)$<br>对于每个查询二分：$O(MlogN)$<br>hash函数要写好，注意端点。</p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高1班-Day2/drunk.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>drunk.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"></div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=(<span class="number">1000019</span>,<span class="number">100000007</span>);</div><div class="line">    p:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=(<span class="number">1009</span>,<span class="number">133</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span></div><div class="line">    n,m,i,j,k:int;</div><div class="line">    s:ansistring;</div><div class="line">    pn,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hash</span><span class="params">(l,r,j:int)</span>:</span>int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    hash:=(f[j,r]-f[j,l-<span class="number">1</span>]*pn[j,r-l+<span class="number">1</span>] <span class="keyword">mod</span> q[j]+q[j]) <span class="keyword">mod</span> q[j];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(i,j:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> l,r,mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> i&gt;j <span class="keyword">then</span> <span class="keyword">begin</span> l:=i;i:=j;j:=l <span class="keyword">end</span>;</div><div class="line">    l:=<span class="number">1</span>;r:=n-j+<span class="number">1</span>;query:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (hash(i,i+mid-<span class="number">1</span>,<span class="number">0</span>)=hash(j,j+mid-<span class="number">1</span>,<span class="number">0</span>)) <span class="keyword">and</span></div><div class="line">           (hash(i,i+mid-<span class="number">1</span>,<span class="number">1</span>)=hash(j,j+mid-<span class="number">1</span>,<span class="number">1</span>)) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            query:=mid;l:=mid+<span class="number">1</span>;</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'drunk.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'drunk.out'</span>);rewrite(output);</div><div class="line">    </div><div class="line">    readln(n,m);readln(s);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span> f[i,<span class="number">0</span>]:=<span class="number">0</span>;pn[i,<span class="number">0</span>]:=<span class="number">1</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            pn[j,i]:=pn[j,i-<span class="number">1</span>]*p[j] <span class="keyword">mod</span> q[j];</div><div class="line">            f[j,i]:=(f[j,i-<span class="number">1</span>]*p[j]+ord(s[i])) <span class="keyword">mod</span> q[j];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,k);</div><div class="line">        writeln(query(j,k));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-方块游戏"><a href="#P3-方块游戏" class="headerlink" title="P3 方块游戏"></a>P3 方块游戏</h1><p>小A 和小B 在玩一个方块游戏。编号为1 到n(1&lt;=n&lt;=30000)的n 个方块正放在地上。<br>每个构成一个立方柱。<br>游戏开始后，小A 会给小B 发出p(1&lt;=p&lt;=100000)个指令。</p>
<ol>
<li>移动(M)：将包含X 的立方柱移动到包含Y 的立方柱上。</li>
<li>统计(C)：统计含X 的立方柱中，在X 下方的方块数目。</li>
</ol>
<p>写个程序帮小B 完成游戏。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1 行输入P，之后P 行每行输入一条指令。形式为“M X Y”或者“C X”。<br>输入保证不会有将立方柱放在自己头上的指令。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>每一行，对于每个统计指令，输出其结果。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例"></a>输入样例</h3><blockquote>
<p>6<br>M 1 6<br>C 1<br>M 2 4<br>M 2 6<br>C 3<br>C 4</p>
</blockquote>
<h3 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例"></a>输出样例</h3><blockquote>
<p>1<br>0<br>2</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>对于40%的数据，n,P≤200。<br>对于60%的数据，n,P≤2000。<br>对于100%的数据，n,P≤100000。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>并查集。</p>
<ol>
<li>记dist[i]是i到par[i]的距离，即i与par[i]之间 包含par[i] 不包含i 的方块格数</li>
<li>记len[i]是根i所在立方体的方块个数，当i不是根时=0</li>
</ol>
<p>然后在查询和合并时维护即可。</p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高1班-Day2/cubes.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>drunk.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> n=<span class="number">100000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    par,dist,len:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    p,i,x,y:int;c:char;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        find:=find(par[x]);</div><div class="line">        inc(dist[x],dist[par[x]]);</div><div class="line">        par[x]:=find;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    x:=find(x);y:=find(y);</div><div class="line">    par[x]:=y;</div><div class="line">    dist[x]:=len[y];</div><div class="line">    inc(len[y],len[x]);</div><div class="line">    len[x]:=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> query:=<span class="number">1</span></div><div class="line">    <span class="keyword">else</span> query:=dist[x]+query(par[x]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'cubes.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'cubes.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        par[i]:=i;</div><div class="line">        dist[i]:=<span class="number">0</span>;</div><div class="line">        len[i]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    readln(p);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c);</div><div class="line">        <span class="keyword">if</span> c=<span class="string">'M'</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            readln(x,y);</div><div class="line">            union(x,y);</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">            readln(x);</div><div class="line">            writeln(query(x)-<span class="number">1</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P4-道路网"><a href="#P4-道路网" class="headerlink" title="P4 道路网"></a>P4 道路网</h1><p>C国的道路网络由若干条双向线路组成。每条线路途经一些城市(可能会经过多次同一<br>城市)，位于线路上的两个城市a，b通过i号线路互相抵达的费用为 w[i][a] + w[i][b]。现在有若干个询问，询问两城市互相到达的最小费用。</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为城市数n与线路数m。<br>以下m行每行描述一条线路：<br>第一个正整数l[i]为i号线路途经的城市数，接下来2*l[i]个正整数，每两个数描述一个城市，依次表示途经的城市j，费用w[i][j]；接下来若干行每行两个正整数a，b表示询问a，b之间的最小费用，最后以0 0结束。</p>
<h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h3><p>每一行，对于每个统计指令，输出其结果。</p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例"></a>输入样例</h3><blockquote>
<p>4 2<br>3 1 1 2 1 3 3<br>3 1 2 2 1 4 2<br>1 2<br>3 4<br>2 4<br>0 0</p>
</blockquote>
<h3 id="输出样例-2"><a href="#输出样例-2" class="headerlink" title="输出样例"></a>输出样例</h3><blockquote>
<p>2<br>7<br>3</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p>令T为询问数<br>10%的数据满足n≤10,m≤3,T≤3。<br>30%的数据满足n,T≤100,m,l[i]≤15。<br>50%的数据满足n≤1000,T≤100,m,l[i]≤50。<br>100%的数据满足n≤100000,m≤300,T,l[i],w[i][j]≤2000。</p>
<h2 id="水解"><a href="#水解" class="headerlink" title="水解"></a>水解</h2><p>$w[i][a] + w[i][b]$，把线路当成点，然后n+m个点跑Floyd，<br>30分到手。</p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高1班-Day2/map.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>map.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1110</span>,<span class="number">0</span>..<span class="number">1110</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,l,k,i,j,tmp:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'map.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'map.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(l);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> l <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(k);<span class="keyword">read</span>(tmp);</div><div class="line">            f[k,i+n]:=min(f[k,i+n],tmp);</div><div class="line">            f[i+n,k]:=f[k,i+n];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m+n <span class="keyword">do</span> f[i,i]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> m+n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m+n <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m+n <span class="keyword">do</span></div><div class="line">                f[i,j]:=min(f[i,j],f[i,k]+f[k,j]);</div><div class="line">    <span class="keyword">read</span>(i,j);</div><div class="line">    <span class="keyword">while</span> (i&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (j&lt;&gt;<span class="number">0</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> f[i,j]=inf <span class="keyword">then</span> writeln(-<span class="number">1</span>) <span class="keyword">else</span> writeln(f[i,j]);</div><div class="line">        <span class="keyword">read</span>(i,j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>线路数非常小，我们从线路入手，依然把线路看成点，每两个城市的路径必然要经过代表线路的点，先考虑线路间的切换。<br>贪心地考虑两条线路i和j：记它们的公用城市为a，i和j的连边为<span>$min\{w[i,a]+w[j,a]\}$</span><!-- Has MathJax -->，<br>然后在线路设点组成的图上跑Floyd。<br>对于每个查询，枚举经过两点的线路算最小值就可以了。</p>
<p>处理线路间的连边可以用类似 前向星计数排序 的思想，在$O(l[i]*m)$的时间内将w[i,j]压缩进一个数组，也可以用规模为n的指针数组实现。<br>手残敲错了一次floyd。</p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高1班-Day2/0map.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>0map.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,k,i,j,t1,t2,ans,last:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int; <span class="comment">//floyd</span></div><div class="line">    e:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">2010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int; <span class="comment">//原始数据</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">600010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int; <span class="comment">//压缩后数据</span></div><div class="line">    cnt,l,r,p:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int; <span class="comment">//计数,左端点,右端点,当前指针</span></div><div class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int; <span class="comment">//题中的l</span></div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'map.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'map.out'</span>);rewrite(output);</div><div class="line">    <span class="comment">//input</span></div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(s[i]);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> s[i] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(e[i,j,<span class="number">0</span>],e[i,j,<span class="number">1</span>]);</div><div class="line">            inc(cnt[e[i,j,<span class="number">0</span>]]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//指针</span></div><div class="line">    last:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        l[i]:=last+<span class="number">1</span>;</div><div class="line">        r[i]:=last+cnt[i];</div><div class="line">        p[i]:=l[i];</div><div class="line">        last:=r[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//e压进g（类似计数排序）</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span>    </div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> s[i] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            g[p[e[i,j,<span class="number">0</span>]],<span class="number">0</span>]:=i;</div><div class="line">            g[p[e[i,j,<span class="number">0</span>]],<span class="number">1</span>]:=e[i,j,<span class="number">1</span>];</div><div class="line">            inc(p[e[i,j,<span class="number">0</span>]]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//init f</span></div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=l[i] <span class="keyword">to</span> r[i] <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=l[i] <span class="keyword">to</span> r[i] <span class="keyword">do</span></div><div class="line">                f[g[j,<span class="number">0</span>],g[k,<span class="number">0</span>]]:=min(f[g[j,<span class="number">0</span>],g[k,<span class="number">0</span>]],g[j,<span class="number">1</span>]+g[k,<span class="number">1</span>]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> f[i,i]:=<span class="number">0</span>;</div><div class="line">    <span class="comment">//floyd</span></div><div class="line">    <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span>    </div><div class="line">            <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">                f[i,j]:=min(f[i,j],f[i,k]+f[k,j]);</div><div class="line">    <span class="comment">//query</span></div><div class="line">    <span class="keyword">read</span>(t1,t2);</div><div class="line">    <span class="keyword">while</span> (t1&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (t2&lt;&gt;<span class="number">0</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        ans:=inf;</div><div class="line">        <span class="keyword">for</span> i:=l[t1] <span class="keyword">to</span> r[t1] <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> j:=l[t2] <span class="keyword">to</span> r[t2] <span class="keyword">do</span></div><div class="line">                ans:=min(ans,g[i,<span class="number">1</span>]+f[g[i,<span class="number">0</span>],g[j,<span class="number">0</span>]]+g[j,<span class="number">1</span>]);</div><div class="line">        <span class="keyword">if</span> ans=inf <span class="keyword">then</span> writeln(-<span class="number">1</span>) <span class="keyword">else</span> writeln(ans);</div><div class="line">        <span class="keyword">read</span>(t1,t2);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P1-超市&quot;&gt;&lt;a href=&quot;#P1-超市&quot; class=&quot;headerlink&quot; title=&quot;P1 超市&quot;&gt;&lt;/a&gt;P1 超市&lt;/h1&gt;&lt;p&gt;超市正在举行一个活动，该活动的规则如下：&lt;br&gt;想要参与的顾客会将他购物的账单放入纸箱中，账单上写有顾客的联系方式和购物的金额。每天超市关门前纸箱中金额最大、最小的两张帐单被取出，付款金额最大的顾客将获得一笔奖金，价值为取出的两张帐单的金额之差；为了不重复计算，取出的两张帐单不再放回箱子，而剩下的帐单仍保留在箱中，进行第二天的活动。&lt;br&gt;顾客很多，因此可假定：每天活动结束时，箱中至少有两张帐单以供取出。&lt;br&gt;小h也参加了这次活动，他想知道整个活动期间超市付出的奖金总额是多少？&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行是一个整数n，表示活动历时的天数。&lt;br&gt;以下的n行，每行包含若干由空格分隔的非负整数。第i+1行的数表示在第i天投入箱子的账单金额。每行的第一个数是一个整数k，表示当日账单的数目。后面的k个正整数代表这k笔账单的金额。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出一个数，表示活动期间超市付出的奖金总额。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="堆" scheme="https://cothrax.github.io/tags/%E5%A0%86/"/>
    
      <category term="并查集" scheme="https://cothrax.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="最短路" scheme="https://cothrax.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高2班 位运算</title>
    <link href="https://cothrax.github.io/2016/08/17/JSOI2016-%E6%8F%90%E9%AB%982%E7%8F%AD-%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>https://cothrax.github.io/2016/08/17/JSOI2016-提高2班-位运算/</id>
    <published>2016-08-17T10:18:57.000Z</published>
    <updated>2016-08-18T03:34:11.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P1-拔河比赛"><a href="#P1-拔河比赛" class="headerlink" title="P1 拔河比赛"></a>P1 拔河比赛</h1><p>一个学校举行拔河比赛，所有的人被分成了两组，每个人必须（且只能够）在其中的一组，且两个组内的所有人体重加起来尽可能地接近。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>数据的第1行是一个n，表示参加拔河比赛的总人数，接下来的n行表示第1到第n个人的体重，每个人的体重weight都是整数。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>包含两个整数：分别是两个组的所有人的体重和，用一个空格隔开。注意如果这两个数不相等，则请把小的放在前面输出。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3<br>100<br>90<br>200</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>190 200</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>60%的数据保证 n&lt;=100，1&lt;=weight&lt;=500。<br>100%的数据保证 n&lt;=500，1&lt;=weight&lt;=1000。</p>
<h2 id="水解"><a href="#水解" class="headerlink" title="水解"></a>水解</h2><p>变形背包，很显然。<br>记f[i,j]前i个人差值为j的情况是否可能，a[i]放到第一组认为是-a[i]，放到第二组认为是+a[i]，那么：$f[i,j]=f[i,j-a[i]]\ or\ f[i,j+a[i]]$<br>但复杂度是$O(N^2W)$，60分。</p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高2班-位运算/competition.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>competition.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,i0,i1:int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">501</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,-<span class="number">501000</span>..<span class="number">501000</span>] <span class="keyword">of</span> boolean;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'competition.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'competition.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    m:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i]);</div><div class="line">        inc(m,a[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(f,sizeof(f),false);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=true;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        i0:=i <span class="keyword">mod</span> <span class="number">2</span>;i1:=<span class="number">1</span>-i0;</div><div class="line">        <span class="keyword">for</span> j:=-m <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            f[i0,j]:=f[i1,j-a[i]] <span class="keyword">or</span> f[i1,j+a[i]];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    i0:=n <span class="keyword">mod</span> <span class="number">2</span>;</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> f[i0,j] <span class="keyword">or</span> f[i0,-j] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">write</span>((m-j) <span class="keyword">div</span> <span class="number">2</span>,<span class="string">' '</span>,(m+j) <span class="keyword">div</span> <span class="number">2</span>);</div><div class="line">            halt</div><div class="line">        <span class="keyword">end</span>;</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>C++有一个stl叫bitset，然而p没有。<br>思路是H[w]表示组合出体重w是否可行，那么每次读入x，w=可行解+x 都是可行的，于是<code>H|=H&lt;&lt;x</code><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">bitset</span>&lt;501000&gt; H;</div><div class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">cin</span>&gt;&gt;n;</div><div class="line">    H[<span class="number">0</span>]=<span class="literal">true</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</div><div class="line">	     <span class="built_in">cin</span>&gt;&gt;x;s+=x;H=H|(H&lt;&lt;x);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=s;i++)<span class="keyword">if</span>(H[i]&amp;&amp;i&lt;=s-i)x=i;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">" "</span>&lt;&lt;s-x&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="P2-起床困难综合症"><a href="#P2-起床困难综合症" class="headerlink" title="P2 起床困难综合症"></a>P2 起床困难综合症</h1><p>21世纪，许多人得了一种奇怪的病：起床困难综合症，其临床表现为：起床难，起床后精神不佳。作为一名青春阳光好少年，atm一直坚持与起床困难综合症作斗争。通过研究相关文献，他找到了该病的发病原因：在深邃的太平洋海底中，出现了一条名为drd的巨龙，它掌握着睡眠之精髓，能随意延长大家的睡眠时间。正是由于drd的活动，起床困难综合症愈演愈烈，以惊人的速度在世界上传播。为了彻底消灭这种病，atm决定前往海底，消灭这条恶龙。<br>历经千辛万苦，atm终于来到了drd所在的地方，准备与其展开艰苦卓绝的战斗。drd有着十分特殊的技能，他的防御战线能够使用一定的运算来改变他受到的伤害。具体说来，drd的防御战线由n扇防御门组成。每扇防御门包括一个运算op和一个参数t，其中运算一定是OR,XOR,AND中的一种，参数则一定为非负整数。如果还未通过防御门时攻击力为x，则其通过这扇防御门后攻击力将变为xopt。最终drd受到的伤害为对方初始攻击力x依次经过所有n扇防御门后转变得到的攻击力。<br>由于atm水平有限，他的初始攻击力只能为0到m之间的一个整数（即他的初始攻击力只能在0,1,…,m中任选，但在通过防御门之后的攻击力不受m的限制）。为了节省体力，他希望通过选择合适的初始攻击力使得他的攻击能让drd受到最大的伤害，请你帮他计算一下，他的一次攻击最多能使drd受到多少伤害。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行包含2个整数，依次为n,m，表示drd有n扇防御门，atm的初始攻击力为0到m之间的整数。接下来n行，依次表示每一扇防御门。每行包括一个字符串op和一个非负整数t，两者由一个空格隔开，且op在前，t在后，op表示该防御门所对应的操作， t表示对应的参数。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行一个整数，表示atm的一次攻击最多使 drd 受到多少伤害。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 10<br>AND 5<br>OR 6<br>XOR 7</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p><strong>补充说明</strong><br>atm可以选择的初始攻击力为0,1,…,10。<br>假设初始攻击力为4，最终攻击力经过了如下计算<br>4 AND 5 = 4<br>4 OR  6 = 6<br>6 XOR 7 = 1<br>类似的，我们可以计算出初始攻击力为1,3,5,7,9时最终攻击力为0，初始攻击力为0,2,4,6,8,10时最终攻击力为1，因此atm的一次攻击最多使 drd 受到的伤害值为1。<br><strong>数据范围</strong><br>0&lt;=m&lt;=10^9<br>0&lt;=t&lt;=10^9<br>运算一定为OR,XOR,AND 中的一种</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>位运算每一位都是独立的，于是从高到低枚举选择数字的每一位，分几种情况讨论：</p>
<ol>
<li>该位取0时经过n次操作结果取1，该位选择0一定最优。</li>
<li>若情况1不满足，该位取1时经过n次操作结果取1 且取1后值不超过m 这样我们也选择1。</li>
<li>上两种情况不满足，则该位取0一定比取1小且更不容易超过m。<br>可以直接用<span>$(0...0)_2$</span><!-- Has MathJax -->和<span>$(1...1)_2$</span><!-- Has MathJax -->，这样优化为$O(N)$。<br>代码丑的可以。</li>
</ol>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高2班-位运算/sleep.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>sleep.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    a1,a0,ans,orig,p,t,c,i,n,m:int; </div><div class="line">    s,op:<span class="keyword">string</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'sleep.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'sleep.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    readln(n,m);</div><div class="line">    a0:=<span class="number">0</span>;a1:=<span class="keyword">not</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        readln(s);</div><div class="line">        p:=pos(<span class="string">' '</span>,s);</div><div class="line">        op:=copy(s,<span class="number">1</span>,p-<span class="number">1</span>);</div><div class="line">        val(copy(s,p+<span class="number">1</span>,length(s)-p),t,c);</div><div class="line">        </div><div class="line">        <span class="keyword">if</span> op=<span class="string">'XOR'</span> <span class="keyword">then</span> <span class="keyword">begin</span> a0:=a0 xor t;a1:=a1 xor t <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> op=<span class="string">'OR'</span> <span class="keyword">then</span> <span class="keyword">begin</span> a0:=a0 <span class="keyword">or</span> t;a1:=a1 <span class="keyword">or</span> t <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">begin</span> a0:=a0 <span class="keyword">and</span> t;a1:=a1 <span class="keyword">and</span> t <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"></div><div class="line">    ans:=<span class="number">0</span>; <span class="comment">//最终伤害</span></div><div class="line">    orig:=<span class="number">0</span>; <span class="comment">//原始伤害</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">30</span> <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> </div><div class="line">        <span class="keyword">if</span> ((a0 <span class="keyword">shr</span> i) <span class="keyword">and</span> <span class="number">1</span>)=<span class="number">1</span> <span class="keyword">then</span></div><div class="line">            ans:=ans <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> i)</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (((a1 <span class="keyword">shr</span> i) <span class="keyword">and</span> <span class="number">1</span>)=<span class="number">1</span>) <span class="keyword">and</span> </div><div class="line">                ((orig <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> i))&lt;=m) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            ans:=ans <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> i);</div><div class="line">            orig:=orig <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> i);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-乒乓游戏"><a href="#P3-乒乓游戏" class="headerlink" title="P3 乒乓游戏"></a>P3 乒乓游戏</h1><p>一条大街上住着n个乒乓球爱好者，经常组织比赛切磋技术。每个人都有一个不同的技能值ai。每场比赛需要3个人：两名选手，一名裁判。他们有一个奇怪的规定，即裁判必须住在两名选手的中间，并且技能值也在两名选手之间。问一共能组织多少种比赛。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行是整数n，然后是n个不同的整数，即a1,a2,…,an，按照住处从左到右的顺序给每个乒乓球爱好者的技能值。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出比赛总数的值。<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>6 1 8 10 1</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p>30%的数据 n&lt;=3000。<br>100%的数据 n&lt;=100000,ai&lt;=100000。 </p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>对于裁判i，记1..i-1中技能值小于a[i]的人数为ls，i+1..n中小于a[i]的人数rs，那么这个裁判能组织的比赛数$=sl*(n-i-sr)+(i-1-sl)*sr$<br>扫一遍i，可以用两个树状数组维护。</p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高2班-位运算/pingpong.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>pingpong.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> maxn=<span class="number">100000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    l,r,a:arr;</div><div class="line">    n,i,sl,sr:int;ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lowbit</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span> lowbit:=x <span class="keyword">and</span> (-x) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> a:arr;x,k:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> x=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">while</span> x&lt;=maxn <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(a[x],k);</div><div class="line">        inc(x,lowbit(x));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(<span class="keyword">var</span> a:arr;x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    sum:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(sum,a[x]);</div><div class="line">        dec(x,lowbit(x));</div><div class="line">    <span class="keyword">end</span>;    </div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'pingpong.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'pingpong.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i]);</div><div class="line">        <span class="keyword">if</span> i&lt;&gt;<span class="number">1</span> <span class="keyword">then</span> add(r,a[i],<span class="number">1</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        sl:=sum(l,a[i]);sr:=sum(r,a[i]);</div><div class="line">        inc(ans,sl*(n-i-sr)+(i-<span class="number">1</span>-sl)*sr);</div><div class="line">        add(r,a[i+<span class="number">1</span>],-<span class="number">1</span>);add(l,a[i],<span class="number">1</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P4-黑客的攻击"><a href="#P4-黑客的攻击" class="headerlink" title="P4 黑客的攻击"></a>P4 黑客的攻击</h1><p>假设你是一个黑客，入侵了一个有着n台计算机(编号为0,1,…,n-1)的网络。一共有n种服务，每台计算机都运行着所有的服务。对于每台计算机，你都可以选择一项服务，终止这台计算机和所有和它相邻计算机的该项服务（如果其中的一些服务已经停止，则这些服务继续处于停止状态）。你的目标是让尽量多的服务完全瘫痪（即：没有任何计算机运行该项服务)</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为整数n；以下n行每行描述一台计算机的相邻计算机，其中第一个数m为相邻的计算机个数，接下来m个数为这些计算机的编号。</p>
<h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出完全瘫痪的服务器的最大数量<br><!--more--></p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4<br>1 1<br>1 0<br>1 3<br>1 2</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h2><p>n≤16。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>看数据范围，状压DP，用二进制表示集合<br>a[i]预处理出点i相邻的节点，二进制表示<br>p[S]预处理出集合S所能够覆盖的点的集合<br>然后dp，<span>$f[S]=max\{f[S\ xor\ j]+1\ |\ j\in S\ and\ p[j]=(1\ shl\ n)-1\}$</span><!-- Has MathJax --></p>
<dir style="text-align:right"><a href="/2016/08/17/JSOI2016-提高2班-位运算/hacker.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>hacker.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,k,i,j,t,lowbit:int;</div><div class="line">    f,p:<span class="keyword">array</span>[<span class="number">0</span>..(<span class="number">1</span> <span class="keyword">shl</span> <span class="number">16</span>)-<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">17</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'hacker.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'hacker.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    k:=(<span class="number">1</span> <span class="keyword">shl</span> n)-<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(m);</div><div class="line">        a[i]:=<span class="number">1</span> <span class="keyword">shl</span> i;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(t);</div><div class="line">            a[i]:=a[i] <span class="keyword">or</span> (<span class="number">1</span> <span class="keyword">shl</span> t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        t:=i;</div><div class="line">        p[i]:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> t&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            lowbit:=t <span class="keyword">and</span> (-t);</div><div class="line">            p[i]:=p[i] <span class="keyword">or</span> a[round(ln(lowbit)/ln(<span class="number">2</span>))];</div><div class="line">            t:=t-lowbit;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        f[i]:=<span class="number">0</span>;j:=i;</div><div class="line">        <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> p[j]=k <span class="keyword">then</span> f[i]:=max(f[i xor j]+<span class="number">1</span>,f[i]);</div><div class="line">            j:=(j-<span class="number">1</span>) <span class="keyword">and</span> i;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(f[k]);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P1-拔河比赛&quot;&gt;&lt;a href=&quot;#P1-拔河比赛&quot; class=&quot;headerlink&quot; title=&quot;P1 拔河比赛&quot;&gt;&lt;/a&gt;P1 拔河比赛&lt;/h1&gt;&lt;p&gt;一个学校举行拔河比赛，所有的人被分成了两组，每个人必须（且只能够）在其中的一组，且两个组内的所有人体重加起来尽可能地接近。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;数据的第1行是一个n，表示参加拔河比赛的总人数，接下来的n行表示第1到第n个人的体重，每个人的体重weight都是整数。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;包含两个整数：分别是两个组的所有人的体重和，用一个空格隔开。注意如果这两个数不相等，则请把小的放在前面输出。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="位运算" scheme="https://cothrax.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="树状数组" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="状压DP" scheme="https://cothrax.github.io/tags/%E7%8A%B6%E5%8E%8BDP/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班-Day1</title>
    <link href="https://cothrax.github.io/2016/08/16/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day1/"/>
    <id>https://cothrax.github.io/2016/08/16/JSOI2016-提高1班-Day1/</id>
    <published>2016-08-16T14:10:35.000Z</published>
    <updated>2016-08-18T03:34:21.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="P1-选数"><a href="#P1-选数" class="headerlink" title="P1 选数"></a>P1 选数</h1><p>现在有一排共N个数，你需要从中选出恰好K个。选出K个数后，计算它们两两差值的绝对值的最小值S。你需要确定选出哪K个，才能最大化这个S。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入第一行两个正整数N、K，含义如上。<br>输入第二行N个正整数，依次表示这N个数A1~An。0＜Ai≤10^9。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行一个正整数，S的最大值。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>11 5<br>19 585 29 1111 5868 3331 272 4441 2251 868 581</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1092</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，N≤18。<br>对于60%的数据，N≤20。<br>对于80%的数据，N≤100。<br>对于100%的数据，N≤100000，K&lt;=N</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>最大化最小值，典型的二分答案。<br>然而不知道怎么在O(N)内判定一个解的正确性。。。<br>我们贪心的想：<br>先qsort升序<br>最小的数一定要选，可以反正：如果选了次小的数没有选最小，那么把次小换成最小的答案一定更优。<br>于是先选a[last=1]，O(N)扫一遍，如果a[i]-a[last]&gt;=mid那么就选i，更新last，统计个数。</p>
<dir style="text-align:right"><a href="/2016/08/16/JSOI2016-提高1班-Day1/choose.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>choose.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,k,i,l,r,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=a[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,last,cnt:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    cnt:=<span class="number">1</span>;last:=a[<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]-last&gt;=x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            last:=a[i];</div><div class="line">            inc(cnt);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    check:=cnt&gt;=k;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'choose.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'choose.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    l:=<span class="number">0</span>;r:=a[n]-a[<span class="number">1</span>];</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-划区灌溉"><a href="#P2-划区灌溉" class="headerlink" title="P2 划区灌溉"></a>P2 划区灌溉</h1><p>约翰的奶牛们发现山脊上的草特别美味。为了维持草的生长，约翰打算安装若干喷灌器。<br>为简化问题，山脊可以看成一维的数轴，长为L(1≤L≤1,000,000)，而且L一定是一个偶数。每个喷灌器可以双向喷灌，并有确定的射程，该射程是一个整数，且不短于A，不长于B。A,B(1≤A≤B≤1000)都是给出的正整数。它所在位置的两边射程内，都属它的灌溉区域。现要求山脊的每一个区域都被灌溉到，而且喷灌器的灌溉区域不允许重叠。<br>约翰有N(1≤N≤1000)只奶牛，每一只都有特别喜爱的草区，第i只奶牛的草区是[Si，Ei]，不同奶牛的草区可以重叠。现要求，每只奶牛的草区仅被一个喷灌器灌溉。<br>寻找最少需要的喷灌器数目。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行：N,L.<br>第2行：A,B.<br>第3到N十2行：每行2个整数Si，Ei,(0≤S\&lt;E≤L).</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>最小的喷灌器数目。如果无法设计出满足条件的喷灌器数目，请输出-1.</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 8<br>1 2<br>6 7<br>3 6 </p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>【样例说明】<br>如下图，只需安装三个喷灌器。c1,c2为奶牛们的草区。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">            |-----c2----|-c1|       </div><div class="line">|---1---|-------2-------|---3---|   </div><div class="line">+---+---+---+---+---+---+---+---+</div><div class="line">0   1   2   3   4   5   6   7   8</div></pre></td></tr></table></figure></p>
<p>【数据范围】<br>对于30%的数据，L≤100。<br>对于60%的数据，L≤10000。<br>对于100%的数据，1≤L≤1,000,000，1≤A≤B≤1000，1≤N≤1000。</p>
<h2 id="水解"><a href="#水解" class="headerlink" title="水解"></a>水解</h2><p>首先，看起来像线段覆盖DP，于是又$O(L^2)$的算法<br>左右都覆盖比较麻烦，可以看成只向左覆盖，范围[2*a,2*b]<br>80分，一个点TLE，还有一个不知道为什么WA。。。</p>
<dir style="text-align:right"><a href="/2016/08/16/JSOI2016-提高1班-Day1/divide.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>divide.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,l,a,b,i,j,k:int;</div><div class="line">    seg:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[-<span class="number">1010</span>..<span class="number">1000010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (seg[x,<span class="number">0</span>]&lt;seg[y,<span class="number">0</span>]) <span class="keyword">or</span> </div><div class="line">       ((seg[x,<span class="number">0</span>]=seg[y,<span class="number">0</span>]) <span class="keyword">and</span> (seg[x,<span class="number">1</span>]&lt;seg[y,<span class="number">1</span>])) <span class="keyword">then</span> com:=true</div><div class="line">    <span class="keyword">else</span> com:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;seg[<span class="number">0</span>]:=seg[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> com(i,<span class="number">0</span>) <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> com(<span class="number">0</span>,j) <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(seg[i,<span class="number">0</span>],seg[j,<span class="number">0</span>]);swap(seg[i,<span class="number">1</span>],seg[j,<span class="number">1</span>]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'divide.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'divide.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    <span class="keyword">read</span>(n,l,a,b);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(seg[i,<span class="number">0</span>],seg[i,<span class="number">1</span>]);</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    seg[<span class="number">0</span>,<span class="number">1</span>]:=<span class="number">0</span>;seg[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;seg[n+<span class="number">1</span>,<span class="number">0</span>]:=l;</div><div class="line"></div><div class="line">    f[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n+<span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=seg[i-<span class="number">1</span>,<span class="number">1</span>] <span class="keyword">to</span> seg[i,<span class="number">0</span>] <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=a <span class="keyword">to</span> b <span class="keyword">do</span></div><div class="line">                f[j]:=min(f[j],f[j-k*<span class="number">2</span>]+<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> f[l]=inf <span class="keyword">then</span> <span class="keyword">write</span>(-<span class="number">1</span>) <span class="keyword">else</span> <span class="keyword">write</span>(f[l]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>然后发现对于第i个位置，决策在[i-2<em>b,i-2</em>a]，于是想到了 定窗长最大值 的模型，而且决策单调，于是用单调队列优化成O(N)。<br>注意：</p>
<ol>
<li>同理看成向左覆盖，只能在偶数点处理</li>
<li>注意端点和队列指针的细节</li>
<li>被奶牛的草区覆盖的点不做处理，这可以用差分序列c预处理O(N)</li>
</ol>
<dir style="text-align:right"><a href="/2016/08/16/JSOI2016-提高1班-Day1/0divide.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>0divide.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,l,a,b,h,t,i,x:int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    c,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'divide.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'divide.out'</span>);rewrite(output);</div><div class="line">    </div><div class="line">    <span class="keyword">read</span>(n,l,a,b);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(h,t);</div><div class="line">        inc(c[h+<span class="number">1</span>]);dec(c[t]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l <span class="keyword">do</span> inc(c[i],c[i-<span class="number">1</span>]);</div><div class="line"></div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">0</span>;i:=<span class="number">2</span>;</div><div class="line">    <span class="keyword">while</span> i&lt;=l <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        x:=i-<span class="number">2</span>*a;</div><div class="line">        <span class="keyword">if</span> x&gt;=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">while</span> (h&lt;&gt;t) <span class="keyword">and</span> (q[t-<span class="number">1</span>,<span class="number">0</span>]&gt;=f[x]) <span class="keyword">do</span> dec(t);</div><div class="line">            q[t,<span class="number">0</span>]:=f[x];q[t,<span class="number">1</span>]:=x;</div><div class="line">            inc(t);<span class="keyword">if</span> t&gt;<span class="number">10010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> c[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            x:=i-<span class="number">2</span>*b;</div><div class="line">            <span class="keyword">while</span> (h&lt;&gt;t) <span class="keyword">and</span> (q[h,<span class="number">1</span>]&lt;x) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                inc(h);<span class="keyword">if</span> h&gt;<span class="number">10010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">if</span> (h=t) <span class="keyword">or</span> (q[h,<span class="number">0</span>]=inf) <span class="keyword">then</span> f[i]:=inf <span class="keyword">else</span> f[i]:=q[h,<span class="number">0</span>]+<span class="number">1</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(i,<span class="number">2</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> f[l]=inf <span class="keyword">then</span> <span class="keyword">write</span>(-<span class="number">1</span>) <span class="keyword">else</span> <span class="keyword">write</span>(f[l]);</div><div class="line"></div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-树林"><a href="#P3-树林" class="headerlink" title="P3 树林"></a>P3 树林</h1><p>现在有一片树林，小B很想知道，最少需要多少步能围绕树林走一圈，最后回到起点．他能上下左右走，也能走对角线格子。<br>土地被分成R行C列（1≤R≤50,1≤C≤50)，下面是一张样例的地图，其中“.”表示小B可以走的空地，”X”表示树林，”*”表示起点。而小B走的最近的路己经特别地用“+”表示出来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">. . . + . . .</div><div class="line">. . + X + . .</div><div class="line">. + X X X + .</div><div class="line">. . + X X X +</div><div class="line">. . + X . . +</div><div class="line">. . . + + + *</div></pre></td></tr></table></figure></p>
<p>题目保证，一定有合法解并且有且只有一片树林，树林一定是上下左右联通的。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p> 第1行输入R和C，接下来R行C列表示一张地图。地图中的符号如题干所述。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出最少的步数。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>6 7<br>…….<br>…X…<br>..XXX..<br>…XXX.<br>…X…<br>……*</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>13</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>对于40%的数据，R,C≤12<br>对于60%的数据，R,C≤30<br>对于100%的数据，R,C≤50</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>神奇的题目，我们取一棵树（如取横坐标最小的），水平向左引一条射线（图中“-”）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">. . . + . . .</div><div class="line">. . a X + . .</div><div class="line">- - X X X + .</div><div class="line">. . b X X X +</div><div class="line">. . + X . . +</div><div class="line">. . . + + + *</div></pre></td></tr></table></figure></p>
<p>然后在<strong>不穿过这条线</strong>的情况下从起点BFS，那么一条合法路径必然是：</p>
<ol>
<li>从起点，不穿过线到达射线下一点b</li>
<li>从b穿过线到达射线上一点a</li>
<li>从a不穿过射线回到起点</li>
</ol>
<p>1和3的最短路在bfs里算过了；2的话，记b(i-1,j) a(i+1,k)，那么路径2的值就是$max(|k-j|,2)$<br>两个循环枚举a,b就好了。</p>
<dir style="text-align:right"><a href="/2016/08/16/JSOI2016-提高1班-Day1/grove.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>grove.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=integer;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    dir:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">7</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=</div><div class="line">    ((<span class="number">0</span>,<span class="number">1</span>),(<span class="number">0</span>,-<span class="number">1</span>),(<span class="number">1</span>,<span class="number">0</span>),(-<span class="number">1</span>,<span class="number">0</span>),(<span class="number">1</span>,<span class="number">1</span>),(-<span class="number">1</span>,-<span class="number">1</span>),(-<span class="number">1</span>,<span class="number">1</span>),(<span class="number">1</span>,-<span class="number">1</span>));</div><div class="line">    inf=<span class="number">5000</span>;    </div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,sx,sy,x,y,nx,ny,h,t,ans:int;</div><div class="line">    map:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">51</span>,<span class="number">0</span>..<span class="number">51</span>] <span class="keyword">of</span> char;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">51</span>,<span class="number">0</span>..<span class="number">51</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2510</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    </div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'grove.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'grove.out'</span>);rewrite(output);</div><div class="line"></div><div class="line">    readln(n,m);</div><div class="line">    y:=<span class="number">51</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(map[i,j]);</div><div class="line">            <span class="keyword">if</span> (map[i,j]=<span class="string">'X'</span>) <span class="keyword">and</span> (j&lt;y) <span class="keyword">then</span> <span class="keyword">begin</span> x:=i;y:=j <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">if</span> map[i,j]=<span class="string">'*'</span> <span class="keyword">then</span> <span class="keyword">begin</span> sx:=i;sy:=j <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        readln;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> y-<span class="number">1</span> <span class="keyword">do</span> map[x,j]:=<span class="string">'-'</span>; <span class="comment">//画一条水平线</span></div><div class="line">    <span class="comment">//bfs</span></div><div class="line">    fillword(f,sizeof(f) <span class="keyword">div</span> <span class="number">2</span>,inf);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;</div><div class="line">    q[h,<span class="number">0</span>]:=sx;q[h,<span class="number">1</span>]:=sy;</div><div class="line">    f[sx,sy]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">7</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            nx:=q[h,<span class="number">0</span>]+dir[i,<span class="number">0</span>];ny:=q[h,<span class="number">1</span>]+dir[i,<span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span> (nx&lt;<span class="number">1</span>) <span class="keyword">or</span> (ny&lt;<span class="number">1</span>) <span class="keyword">or</span> (nx&gt;n) <span class="keyword">or</span> (ny&gt;m) <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> f[nx,ny]&lt;&gt;inf <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> (map[nx,ny]=<span class="string">'X'</span>) <span class="keyword">or</span> (map[nx,ny]=<span class="string">'-'</span>) <span class="keyword">then</span> continue;</div><div class="line"></div><div class="line">            q[t,<span class="number">0</span>]:=nx;q[t,<span class="number">1</span>]:=ny;f[nx,ny]:=f[q[h,<span class="number">0</span>],q[h,<span class="number">1</span>]]+<span class="number">1</span>;</div><div class="line">            inc(t);<span class="keyword">if</span> t&gt;<span class="number">2510</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">2510</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    ans:=maxint;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> y <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> y <span class="keyword">do</span></div><div class="line">            ans:=min(ans,f[x-<span class="number">1</span>,i]+f[x+<span class="number">1</span>,j]+max(abs(j-i),<span class="number">2</span>));</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    </div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P4-迷宫花坛"><a href="#P4-迷宫花坛" class="headerlink" title="P4 迷宫花坛"></a>P4 迷宫花坛</h1><p>圣玛格丽特学园的一角有一个巨大、如迷宫般的花坛。大约有一个人这么高的大型花坛，做成迷宫的形状，深受中世纪贵族的喜爱。维多利加的小屋就坐落在这迷宫花坛的深处。某一天早晨，久城同学要穿过这巨大的迷宫花坛，去探望感冒的维多利加。<br>整个迷宫可以用N个路口与M条连接两个不同路口的无向通道来描述。路口被标号为1到N，每条通道有各自的长度。整个迷宫一定是连通的，迷宫中可能存在若干个环路，但是，出于美观考虑，每个路口最多只会属于一个简单环路。例如，图1所示的迷宫是非常美观的，但图2则不符合我们的描述，因为3号路口同属于两个简单环。<br><img src="/2016/08/16/JSOI2016-提高1班-Day1/1.png" alt="1.png" title=""><img src="/2016/08/16/JSOI2016-提高1班-Day1/2.png" alt="2.png" title=""><br>你需要回答多个这样的询问：假如久城处在路口x，维多利加的小屋处在路口y，久城最短需要走多少距离才能到达小屋？</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行2个整数N,M，表示迷宫花坛的路口数和通道数；<br>接下来M行，每行3个整数x,y,z，描述一条连接路口x与路口y，长度为z的通道；<br>再接下来1行包含一个整数Q，表示询问数量；<br>之后Q行，每行2个整数x,y，描述一个询问。</p>
<h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>对于每个询问输出一行一个整数，表示最短距离。</p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 4<br>1 2 1<br>2 3 2<br>1 3 2<br>3 4 1<br>2<br>2 4<br>1 3</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>2</p>
</blockquote>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p>对于30%的数据，N≤100；<br>另有30%的数据，保证N=M；<br>对于100%的数据，1≤N≤100,000，Q≤200,000，1≤x,y≤N，1≤z≤1000。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>仙人掌上的倍增LCA。。。<br>我还是觉得暴力Floyd骗30分比较适合我。<br>那么来欣赏一下标程吧</p>
<dir style="text-align:right"></dir>

<figure class="highlight cpp"><figcaption><span>garden.cpp</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF  0x3f3f3f3f</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span>  n,m,K;</div><div class="line"><span class="keyword">int</span>  F[maxn][<span class="number">20</span>];</div><div class="line"><span class="keyword">int</span>  H[maxn];       <span class="comment">//深度 </span></div><div class="line"><span class="keyword">int</span>  D[maxn];       <span class="comment">//距离 </span></div><div class="line"></div><div class="line"><span class="keyword">int</span>  List[maxn*<span class="number">3</span>];  <span class="comment">//SCC距离 </span></div><div class="line"><span class="keyword">int</span>  Front[maxn];   <span class="comment">//SCC第一距离 </span></div><div class="line"><span class="keyword">int</span>  Back[maxn];    <span class="comment">//SCC第二距离</span></div><div class="line"><span class="keyword">int</span>  SCC[maxn];     <span class="comment">//联通分量 </span></div><div class="line"><span class="keyword">int</span>  Ls=<span class="number">0</span>,SCCs=<span class="number">0</span>;</div><div class="line"><span class="keyword">struct</span> Edge&#123;<span class="keyword">int</span> v,w;Edge *next;&#125;;</div><div class="line">Edge *E[maxn],Er[maxn*<span class="number">3</span>];<span class="keyword">int</span> Es=<span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> Data1&#123;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">		Edge *P=&amp;Er[++Es];P-&gt;v=v;P-&gt;w=w;P-&gt;next=E[u];E[u]=P;</div><div class="line">		      P=&amp;Er[++Es];P-&gt;v=u;P-&gt;w=w;P-&gt;next=E[v];E[v]=P;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="built_in">memset</span>(E,<span class="number">0</span>,<span class="keyword">sizeof</span>(E));</div><div class="line">		<span class="keyword">int</span> u,v,w;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w),addEdge(u,v,w);</div><div class="line">	&#125;</div><div class="line">&#125;data1;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span>  <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x1=Front[u],x2=Back[u],y1=Front[v],y2=Back[v],dis=INF;</div><div class="line">	dis=min(dis,<span class="built_in">abs</span>(List[x1]-List[y1]));</div><div class="line">	dis=min(dis,<span class="built_in">abs</span>(List[x1]-List[y2]));</div><div class="line">	dis=min(dis,<span class="built_in">abs</span>(List[x2]-List[y1]));</div><div class="line">	dis=min(dis,<span class="built_in">abs</span>(List[x2]-List[y2]));</div><div class="line">	<span class="keyword">return</span> dis;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span>  <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> fu=u,fv=v;</div><div class="line">	<span class="keyword">if</span>(D[fu]&gt;D[fv])swap(fu,fv);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">19</span>;j&gt;=<span class="number">0</span>;j--)</div><div class="line">	    <span class="keyword">if</span>(F[fv][j]&amp;&amp;D[F[fv][j]]&gt;=D[fu])fv=F[fv][j];</div><div class="line">	<span class="keyword">if</span>(fv==fu)<span class="keyword">return</span> H[u]+H[v]-H[fu]-H[fu];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">19</span>;j&gt;=<span class="number">0</span>;j--)</div><div class="line">	    <span class="keyword">if</span>(F[fv][j]&amp;&amp;F[fu][j]&amp;&amp;F[fu][j]!=F[fv][j])fu=F[fu][j],fv=F[fv][j];</div><div class="line">	<span class="keyword">if</span>(SCC[fu]!=SCC[fv]||SCC[fu]==<span class="number">0</span>||SCC[fv]==<span class="number">0</span>)<span class="keyword">return</span> H[u]+H[v]-H[F[fu][<span class="number">0</span>]]-H[F[fu][<span class="number">0</span>]];</div><div class="line">	<span class="keyword">return</span> H[u]+H[v]-H[fu]-H[fv]+calc(fu,fv);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span>  Q[maxn],bot;</div><div class="line"><span class="keyword">struct</span> Data2&#123;</div><div class="line">	<span class="keyword">int</span>  Path[maxn],Length[maxn],u;</div><div class="line">	<span class="keyword">bool</span> V[maxn];</div><div class="line">	<span class="keyword">int</span>  P1[maxn*<span class="number">2</span>][<span class="number">2</span>],P2[maxn][<span class="number">2</span>],bot1,bot2;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">getPath</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> f,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">		bot1=bot2=<span class="number">0</span>;</div><div class="line">		<span class="comment">//cout&lt;&lt;"getPath "&lt;&lt;u&lt;&lt;" "&lt;&lt;v&lt;&lt;" "&lt;&lt;f&lt;&lt;" "&lt;&lt;w&lt;&lt;endl;</span></div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> P=u;H[P]&gt;=H[f];P=Path[P])&#123;bot1++;P1[bot1][<span class="number">0</span>]=P;P1[bot1+<span class="number">1</span>][<span class="number">1</span>]=Length[P];&#125;</div><div class="line">		<span class="comment">//cout&lt;&lt;"P1"&lt;&lt;endl;</span></div><div class="line">		<span class="comment">//for(int i=1;i&lt;=bot1;i++)cout&lt;&lt;i&lt;&lt;" "&lt;&lt;P1[i][0]&lt;&lt;" "&lt;&lt;P1[i][1]&lt;&lt;endl;</span></div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> P=v;H[P]&gt;H[f];P=Path[P])&#123;bot2++;P2[bot2][<span class="number">0</span>]=P;P2[bot2][<span class="number">1</span>]=Length[P];&#125;</div><div class="line">		<span class="comment">//cout&lt;&lt;"P2"&lt;&lt;endl;</span></div><div class="line">		<span class="comment">//for(int i=1;i&lt;=bot2;i++)cout&lt;&lt;i&lt;&lt;" "&lt;&lt;P2[i][0]&lt;&lt;" "&lt;&lt;P2[i][1]&lt;&lt;endl;</span></div><div class="line">		<span class="keyword">while</span>(bot2)&#123;</div><div class="line">			bot1++;P1[bot1][<span class="number">0</span>]=P2[bot2][<span class="number">0</span>];P1[bot1][<span class="number">1</span>]=P2[bot2][<span class="number">1</span>];bot2--;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=bot1+<span class="number">1</span>;i&lt;=bot1*<span class="number">2</span>;i++)P1[i][<span class="number">0</span>]=P1[i-bot1][<span class="number">0</span>],P1[i][<span class="number">1</span>]=P1[i-bot1][<span class="number">1</span>];</div><div class="line">		P1[bot1+<span class="number">1</span>][<span class="number">1</span>]+=w;</div><div class="line">		</div><div class="line">		Ls++;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bot1*<span class="number">2</span>;i++)List[Ls+i]=List[Ls+i<span class="number">-1</span>]+P1[i][<span class="number">1</span>];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bot1;i++)Front[P1[i][<span class="number">0</span>]]=Ls+i,Back[P1[i][<span class="number">0</span>]]=Ls+i+bot1;</div><div class="line">		Ls+=bot1*<span class="number">2</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">findSCC</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> fu=u,fv=v;</div><div class="line">		<span class="keyword">while</span>(fu!=fv)<span class="keyword">if</span>(H[fu]&gt;H[fv])fu=Path[fu];<span class="keyword">else</span> fv=Path[fv];</div><div class="line">		getPath(u,v,fu,w);</div><div class="line">		</div><div class="line">		SCCs++;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bot1;i++)SCC[P1[i][<span class="number">0</span>]]=SCCs;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bot1;i++)<span class="keyword">if</span>(P1[i][<span class="number">0</span>]!=fu)F[P1[i][<span class="number">0</span>]][<span class="number">0</span>]=fu;</div><div class="line">		<span class="comment">//cout&lt;&lt;"SCC "&lt;&lt;SCCs&lt;&lt;endl;</span></div><div class="line">		<span class="comment">//for(int i=1;i&lt;=2*bot1;i++)cout&lt;&lt;i&lt;&lt;" "&lt;&lt;P1[i][0]&lt;&lt;" "&lt;&lt;P1[i][1]&lt;&lt;endl;</span></div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="built_in">memset</span>(H,<span class="number">0</span>,<span class="keyword">sizeof</span>(H));</div><div class="line">		<span class="built_in">memset</span>(V,<span class="literal">true</span>,<span class="keyword">sizeof</span>(V));</div><div class="line">		<span class="built_in">memset</span>(List,<span class="number">0</span>,<span class="keyword">sizeof</span>(List));</div><div class="line">		<span class="built_in">memset</span>(SCC,<span class="number">0</span>,<span class="keyword">sizeof</span>(SCC));</div><div class="line">		<span class="built_in">memset</span>(F,<span class="number">0</span>,<span class="keyword">sizeof</span>(F));</div><div class="line">		Q[bot=<span class="number">1</span>]=<span class="number">1</span>;V[<span class="number">1</span>]=<span class="literal">false</span>;Path[<span class="number">1</span>]=Length[<span class="number">1</span>]=<span class="number">0</span>;H[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> top=<span class="number">1</span>;top&lt;=bot;top++)&#123;</div><div class="line">			u=Q[top];</div><div class="line">			<span class="comment">//cout&lt;&lt;"BFS "&lt;&lt;u&lt;&lt;endl;</span></div><div class="line">			<span class="keyword">for</span>(Edge *P=E[u];P;P=P-&gt;next)&#123;</div><div class="line">			    <span class="keyword">if</span>(P-&gt;v==Path[u])<span class="keyword">continue</span>;</div><div class="line">			    <span class="keyword">if</span>(V[P-&gt;v])&#123;</div><div class="line">					Q[++bot]=P-&gt;v;</div><div class="line">					H[P-&gt;v]=H[u]+<span class="number">1</span>;V[P-&gt;v]=<span class="literal">false</span>;</div><div class="line">					F[P-&gt;v][<span class="number">0</span>]=Path[P-&gt;v]=u;</div><div class="line">					Length[P-&gt;v]=P-&gt;w;</div><div class="line">			    &#125;</div><div class="line">			    <span class="keyword">else</span> <span class="keyword">if</span>(SCC[u]==<span class="number">0</span>)findSCC(P-&gt;v,u,P-&gt;w);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//for(int i=1;i&lt;=bot;i++)cout&lt;&lt;Q[i]&lt;&lt;" "&lt;&lt;F[Q[i]][0]&lt;&lt;" "&lt;&lt;SCC[Q[i]]&lt;&lt;" "&lt;&lt;Length[Q[i]]&lt;&lt;endl;</span></div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="built_in">memset</span>(H,<span class="number">0</span>,<span class="keyword">sizeof</span>(H));</div><div class="line">		<span class="built_in">memset</span>(D,<span class="number">0</span>,<span class="keyword">sizeof</span>(D));</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> top=<span class="number">1</span>;top&lt;=bot;top++)&#123;</div><div class="line">			u=Q[top];</div><div class="line">			D[u]=D[F[u][<span class="number">0</span>]]+<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(SCC[F[u][<span class="number">0</span>]]!=SCC[u]||SCC[u]==<span class="number">0</span>)H[u]=H[F[u][<span class="number">0</span>]]+Length[u];</div><div class="line">			                              <span class="keyword">else</span> H[u]=H[F[u][<span class="number">0</span>]]+calc(F[u][<span class="number">0</span>],u);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;<span class="number">20</span>&amp;&amp;F[u][j<span class="number">-1</span>];j++)F[u][j]=F[F[u][j<span class="number">-1</span>]][j<span class="number">-1</span>];</div><div class="line">		&#125;</div><div class="line">		<span class="comment">/*</span></div><div class="line">		for(int i=1;i&lt;=bot;i++)&#123;</div><div class="line">			u=Q[i];</div><div class="line">			printf("Qi=%d SCC=%d H=%d D=%d\n",u,SCC[u],H[u],D[u]);</div><div class="line">			for(int j=0;j&lt;20;j++)printf("%5d",F[u][j]);cout&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		*/</div><div class="line">	&#125;</div><div class="line">&#125;data2;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> Data3&#123;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span>  u,v;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;K);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)&#123;</div><div class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,LCA(u,v));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;data3;</div><div class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(<span class="string">"garden.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(<span class="string">"garden.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	data1.init();</div><div class="line">	data2.BFS();</div><div class="line">	data2.work();</div><div class="line">	data3.query();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;P1-选数&quot;&gt;&lt;a href=&quot;#P1-选数&quot; class=&quot;headerlink&quot; title=&quot;P1 选数&quot;&gt;&lt;/a&gt;P1 选数&lt;/h1&gt;&lt;p&gt;现在有一排共N个数，你需要从中选出恰好K个。选出K个数后，计算它们两两差值的绝对值的最小值S。你需要确定选出哪K个，才能最大化这个S。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入第一行两个正整数N、K，含义如上。&lt;br&gt;输入第二行N个正整数，依次表示这N个数A1~An。0＜Ai≤10^9。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;一行一个正整数，S的最大值。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="单调队列" scheme="https://cothrax.github.io/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="仙人掌图" scheme="https://cothrax.github.io/tags/%E4%BB%99%E4%BA%BA%E6%8E%8C%E5%9B%BE/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>[POJ] P2942 Knights of the Round Table</title>
    <link href="https://cothrax.github.io/2016/08/16/POJ-P2942/"/>
    <id>https://cothrax.github.io/2016/08/16/POJ-P2942/</id>
    <published>2016-08-16T05:42:38.000Z</published>
    <updated>2016-08-16T06:04:53.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>Being a knight is a very attractive career: searching for the Holy Grail, saving damsels in distress, and drinking with the other knights are fun things to do. Therefore, it is not very surprising that in recent years the kingdom of King Arthur has experienced an unprecedented increase in the number of knights. There are so many knights now, that it is very rare that every Knight of the Round Table can come at the same time to Camelot and sit around the round table; usually only a small group of the knights isthere, while the rest are busy doing heroic deeds around the country.</p>
<p>Knights can easily get over-excited during discussions-especially after a couple of drinks. After some unfortunate accidents, King Arthur asked the famous wizard Merlin to make sure that in the future no fights break out between the knights. After studying the problem carefully, Merlin realized that the fights can only be prevented if the knights are seated according to the following two rules:</p>
<ol>
<li>The knights should be seated such that two knights who hate each other should not be neighbors at the table. (Merlin has a list that says who hates whom.) The knights are sitting around a roundtable, thus every knight has exactly two neighbors.</li>
<li>An odd number of knights should sit around the table. This ensures that if the knights cannot agree on something, then they can settle the issue by voting. (If the number of knights is even, then itcan happen that “yes” and “no” have the same number of votes, and the argument goes on.)<a id="more"></a>
</li>
</ol>
<p>Merlin will let the knights sit down only if these two rules are satisfied, otherwise he cancels the meeting. (If only one knight shows up, then the meeting is canceled as well, as one person cannot sit around a table.) Merlin realized that this means that there can be knights who cannot be part of any seating arrangements that respect these rules, and these knights will never be able to sit at the Round Table (one such case is if a knight hates every other knight, but there are many other possible reasons). If a knight cannot sit at the Round Table, then he cannot be a member of the Knights of the Round Table and must be expelled from the order. These knights have to be transferred to a less-prestigious order, such as the Knights of the Square Table, the Knights of the Octagonal Table, or the Knights of the Banana-Shaped Table. To help Merlin, you have to write a program that will determine the number of knights that must be expelled. </p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>The input contains several blocks of test cases. Each case begins with a line containing two integers 1 ≤ n ≤ 1000 and 1 ≤ m ≤ 1000000 . The number n is the number of knights. The next m lines describe which knight hates which knight. Each of these m lines contains two integers k1 and k2 , which means that knight number k1 and knight number k2 hate each other (the numbers k1 and k2 are between 1 and n ). </p>
<p>The input is terminated by a block with n = m = 0 . </p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>For each test case you have to output a single integer on a separate line: the number of knights that have to be expelled. </p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 5<br>1 4<br>1 5<br>2 5<br>3 4<br>4 5<br>0 0</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>Huge input file, ‘scanf’ recommended to avoid TLE. </p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>WA了N次后发现原来一个输入里有多组数据，又WA了N次后发现忘记初始化连通分量的数组了。果然外语不好不能刷POJ的题。<br>题意是：</p>
<blockquote>
<p>有N个骑士围坐在一个圆桌旁开会，给出某些骑士之间的仇恨关系。一次会议能够顺利举行，要满足两个条件：<br>1：任意相互憎恨的两个骑士不能相邻<br>2：开会人数为大于2的奇数<br>若某个骑士<strong>任何会议</strong>都不能参加，那么就必须将他踢出，问最少需要踢出多少个骑士？</p>
</blockquote>
<p>先求仇恨关系的补图，补图中边的含义就是两个骑士能相邻，<br>那么要开圆桌会就是找图中的n&gt;=3的奇圈，<br>奇圈一定形成了双连通分量，于是tarjan找出所有分量，<br>对于每一个分量，如果n&gt;=3且不能二分染色，就标记这个分量内的所有点。<br>最后统计没有被标记的点数。</p>
<p>注意：</p>
<ol>
<li>一个点可能处在多个分量中，找到立即处理。</li>
<li>割点处理后不要退栈。</li>
<li>初始化！</li>
</ol>
<dir style="text-align:right"><a href="/2016/08/16/POJ-P2942/test.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>test.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//uses math;</span></div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,cc,i,f,t,tim,ans:int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    ins,kick:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    dfn,low,scc,s,col:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span> <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> min:=a <span class="keyword">else</span> min:=b <span class="keyword">end</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">paint</span><span class="params">(v,c:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    col[v]:=c;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> g[v,i] <span class="keyword">and</span> (scc[i]=cc) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> (col[i]=c) <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">            <span class="keyword">if</span> (col[i]=<span class="number">0</span>) <span class="keyword">and</span> <span class="keyword">not</span> paint(i,-c) <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    paint:=true;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(v,i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    tmp:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    cnt,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(cc);cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> s[t+<span class="number">1</span>]&lt;&gt;i <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        ins[s[t]]:=false;</div><div class="line">        inc(cnt);tmp[cnt]:=s[t];</div><div class="line">        scc[s[t]]:=cc;</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    inc(cnt);tmp[cnt]:=v;</div><div class="line">    fillchar(col,sizeof(col),<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> (cnt&gt;=<span class="number">3</span>) <span class="keyword">and</span> <span class="keyword">not</span> paint(v,<span class="number">1</span>) <span class="keyword">then</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span> kick[tmp[j]]:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">tarjan</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);dfn[v]:=tim;low[v]:=tim;</div><div class="line">    ins[v]:=true;inc(t);s[t]:=v;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> g[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> i=p <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> dfn[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                tarjan(i,v);</div><div class="line">                low[v]:=min(low[v],low[i]);</div><div class="line">                <span class="keyword">if</span> low[i]&gt;=dfn[v] <span class="keyword">then</span> solve(v,i);</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[i] <span class="keyword">then</span></div><div class="line">                low[v]:=min(low[v],dfn[i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">        <span class="keyword">if</span> (n=<span class="number">0</span>) <span class="keyword">and</span> (m=<span class="number">0</span>) <span class="keyword">then</span> break;</div><div class="line">        </div><div class="line">        fillchar(g,sizeof(g),true);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(f,t);</div><div class="line">            g[f,t]:=false;g[t,f]:=false;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> g[i,i]:=false;</div><div class="line"></div><div class="line">        fillchar(kick,sizeof(kick),true);</div><div class="line">        fillchar(dfn,sizeof(dfn),<span class="number">0</span>);</div><div class="line">        fillchar(scc,sizeof(scc),<span class="number">0</span>);</div><div class="line">        fillchar(ins,sizeof(ins),false);</div><div class="line">        cc:=<span class="number">0</span>;tim:=<span class="number">0</span>;t:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> dfn[i]=<span class="number">0</span> <span class="keyword">then</span> tarjan(i,<span class="number">0</span>);</div><div class="line"></div><div class="line">        ans:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> kick[i] <span class="keyword">then</span> inc(ans);</div><div class="line">        writeln(ans);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;Being a knight is a very attractive career: searching for the Holy Grail, saving damsels in distress, and drinking with the other knights are fun things to do. Therefore, it is not very surprising that in recent years the kingdom of King Arthur has experienced an unprecedented increase in the number of knights. There are so many knights now, that it is very rare that every Knight of the Round Table can come at the same time to Camelot and sit around the round table; usually only a small group of the knights isthere, while the rest are busy doing heroic deeds around the country.&lt;/p&gt;
&lt;p&gt;Knights can easily get over-excited during discussions-especially after a couple of drinks. After some unfortunate accidents, King Arthur asked the famous wizard Merlin to make sure that in the future no fights break out between the knights. After studying the problem carefully, Merlin realized that the fights can only be prevented if the knights are seated according to the following two rules:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The knights should be seated such that two knights who hate each other should not be neighbors at the table. (Merlin has a list that says who hates whom.) The knights are sitting around a roundtable, thus every knight has exactly two neighbors.&lt;/li&gt;
&lt;li&gt;An odd number of knights should sit around the table. This ensures that if the knights cannot agree on something, then they can settle the issue by voting. (If the number of knights is even, then itcan happen that “yes” and “no” have the same number of votes, and the argument goes on.)
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="双连通分量" scheme="https://cothrax.github.io/tags/%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="割点" scheme="https://cothrax.github.io/tags/%E5%89%B2%E7%82%B9/"/>
    
      <category term="二分图" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
      <category term="补图" scheme="https://cothrax.github.io/tags/%E8%A1%A5%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>2048源码自定义</title>
    <link href="https://cothrax.github.io/2016/08/16/2048%E6%BA%90%E7%A0%81%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    <id>https://cothrax.github.io/2016/08/16/2048源码自定义/</id>
    <published>2016-08-16T00:35:51.000Z</published>
    <updated>2016-08-16T03:00:23.803Z</updated>
    
    <content type="html"><![CDATA[<p>看到好多神犇的Blog里都有2048，于是自己找源码玩一玩。<br>2048 js版的源码被托管在GitHub上：<a href="https://github.com/gabrielecirulli/2048" target="_blank" rel="external">gabrielecirulli/2048</a>。<br>说来话长，JavaScript是我的初恋，四年前在Codeacademy接触了前端编程，自此走上了一条不归路。然而打开源码包，看到一坨JS还是一脸懵。。。早忘干净啦。</p>
<h2 id="大概看一下"><a href="#大概看一下" class="headerlink" title="大概看一下"></a>大概看一下</h2><ol>
<li>keyboard_input_manager.js：input事件</li>
<li>html_actuator.js：处理交互界面，用dom更新html</li>
<li>grid.js：格子</li>
<li>tile.js：滑块对象</li>
<li>local_storage_manager.js：本地缓存</li>
<li>game_manager.js：主程序</li>
<li>application.js：不知道是什么</li>
<li>*_polyfill.js：各种polyfill<a id="more"></a>
</li>
</ol>
<h2 id="自定义图片"><a href="#自定义图片" class="headerlink" title="自定义图片"></a>自定义图片</h2><h3 id="改CSS"><a href="#改CSS" class="headerlink" title="改CSS"></a>改CSS</h3><p>style里的css使用scss生成的，但我没学过，于是直接改main.css<br>找到.tile类<br>直接给对应的class加background<br>如.tile-2是方块2的style，加上：（<code>img/</code>在<code>style/</code>下，在里面放图片）<br><figure class="highlight"><figcaption><span>main.css</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">background-image: url(./img/2.png);</div><div class="line">background-size:contain;</div></pre></td></tr></table></figure></p>
<p>同理加.tile-4, .tile-8等<br>但这样会出现问题</p>
<ol>
<li>一个个改好烦</li>
<li>大于2048时只有一个.tile-super类，没法改</li>
</ol>
<h3 id="改JS"><a href="#改JS" class="headerlink" title="改JS"></a>改JS</h3><p>在html_actuator.js下，可以找到<code>HTMLActuator.prototype.addTile</code>方法，可以看到其中是通过dom来创建div元素的，找到：<br><figure class="highlight js"><figcaption><span>html_actuator.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">inner.textContent = tile.value;</div></pre></td></tr></table></figure></p>
<p>滑块上的文字被设置为tile.value，就是滑块的数值。<br>把它注掉，然后给inner该css<br><figure class="highlight js"><figcaption><span>html_actuator.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//inner.textContent = tile.value;</span></div><div class="line">inner.style.backgroundSize = <span class="string">"contain"</span>;</div><div class="line">inner.style.backgroundImage = <span class="string">"url(./style/img/"</span>+tile.value+<span class="string">".jpg)"</span>;</div></pre></td></tr></table></figure></p>
<p>这样value对应的图片就会被设置成滑块的背景，然后在img/下放好$2^k$.jpg，我借用一下黄学长的图包，就变成了这样：<br><img src="/2016/08/16/2048源码自定义/Screenshot.jpg" alt="Screenshot.jpg" title=""></p>
<p>会发现图片平铺覆盖了一个格子，这是因为图片不是正方形的，ps剪一下就可以了。<br>另外注意图片是jpg还是png。</p>
<h2 id="在Hexo中部署2048"><a href="#在Hexo中部署2048" class="headerlink" title="在Hexo中部署2048"></a>在Hexo中部署2048</h2><p>新建页面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page <span class="string">"2048"</span></div></pre></td></tr></table></figure></p>
<p>把源码拷到2048/下，在2048/index.md中插入iframe（我把原来的index.html重命名为frame.html避免冲突）<br><figure class="highlight html"><figcaption><span>index.md</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"./frame.html"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"1300"</span> <span class="attr">seamless</span>=<span class="string">"seamless"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>tag插件也提供了iframe支持<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% iframe ./frame.html %&#125;</div></pre></td></tr></table></figure></p>
<p>我的two048：<a href="https://cothrax.github.io/2048">https://cothrax.github.io/2048</a></p>
<h2 id="修改game-manager-js"><a href="#修改game-manager-js" class="headerlink" title="修改game_manager.js"></a>修改game_manager.js</h2><blockquote>
<p>留个坑</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看到好多神犇的Blog里都有2048，于是自己找源码玩一玩。&lt;br&gt;2048 js版的源码被托管在GitHub上：&lt;a href=&quot;https://github.com/gabrielecirulli/2048&quot;&gt;gabrielecirulli/2048&lt;/a&gt;。&lt;br&gt;说来话长，JavaScript是我的初恋，四年前在Codeacademy接触了前端编程，自此走上了一条不归路。然而打开源码包，看到一坨JS还是一脸懵。。。早忘干净啦。&lt;/p&gt;
&lt;h2 id=&quot;大概看一下&quot;&gt;&lt;a href=&quot;#大概看一下&quot; class=&quot;headerlink&quot; title=&quot;大概看一下&quot;&gt;&lt;/a&gt;大概看一下&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;keyboard_input_manager.js：input事件&lt;/li&gt;
&lt;li&gt;html_actuator.js：处理交互界面，用dom更新html&lt;/li&gt;
&lt;li&gt;grid.js：格子&lt;/li&gt;
&lt;li&gt;tile.js：滑块对象&lt;/li&gt;
&lt;li&gt;local_storage_manager.js：本地缓存&lt;/li&gt;
&lt;li&gt;game_manager.js：主程序&lt;/li&gt;
&lt;li&gt;application.js：不知道是什么&lt;/li&gt;
&lt;li&gt;*_polyfill.js：各种polyfill
    
    </summary>
    
      <category term="Tinkering Note" scheme="https://cothrax.github.io/categories/Tinkering-Note/"/>
    
    
      <category term="JavaScript" scheme="https://cothrax.github.io/tags/JavaScript/"/>
    
      <category term="CSS" scheme="https://cothrax.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] P1124 字串变换</title>
    <link href="https://cothrax.github.io/2016/08/15/Vijos-P1124/"/>
    <id>https://cothrax.github.io/2016/08/15/Vijos-P1124/</id>
    <published>2016-08-15T10:17:53.000Z</published>
    <updated>2016-08-15T10:32:59.015Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>已知有两个字串 A\$, B\$ 及一组字串变换的规则（至多6个规则）:<br>A1\$ -&gt; B1\$<br>A2\$ -&gt; B2\$<br>规则的含义为：在 A＄中的子串 A1\$ 可以变换为 B1\$、A2\$ 可以变换为 B2\$ …。<br>例如：A\$＝’abcd’　B\$＝’xyz’<br>变换规则为：<br>‘abc’-&gt;‘xu’　‘ud’-&gt;‘y’　‘y’-&gt;‘yz’<br>则此时，A\$ 可以经过一系列的变换变为 B\$，其变换的过程为：<br>‘abcd’-&gt;‘xud’-&gt;‘xy’-&gt;‘xyz’<br>共进行了三次变换，使得 A\$ 变换为B\$。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为两个字符串，第二行至文件尾为变换规则<br>A\$ B\$<br>A1\$ B1\$ \<br>A2\$ B2\$ |-&gt; 变换规则<br>… … /<br>所有字符串长度的上限为 20。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>若在 10 步（包含 10步）以内能将 A\$ 变换为 B\$ ，则输出最少的变换步数；否则输出”NO ANSWER!”<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>abcd xyz<br>abc xu<br>ud y<br>y yz</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>每个测试点1s<br>noip2002提高组第二题</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>暴力BFS+Hash<br>注意：一个字串中可能存在对一个变化的多个匹配，如”aaa”和规则”a-&gt;p”就有三种情况<br>还有hash表比较大，fill耗时，于是省掉就好。</p>
<h3 id="方法一：单向BFS-Hash"><a href="#方法一：单向BFS-Hash" class="headerlink" title="方法一：单向BFS+Hash"></a>方法一：单向BFS+Hash</h3><dir style="text-align:right"><a href="/2016/08/15/Vijos-P1124/pp1124.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>pp1124.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> seed=<span class="number">131</span>;p=<span class="number">100000007</span>;</div><div class="line"><span class="keyword">type</span> state=<span class="keyword">record</span> s:<span class="keyword">string</span>;i:integer <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    ht:<span class="keyword">array</span>[<span class="number">0</span>..p] <span class="keyword">of</span> boolean;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> state;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">7</span>] <span class="keyword">of</span> <span class="keyword">string</span>;</div><div class="line">    n,p0,h,t:integer;s:<span class="keyword">string</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hash</span><span class="params">(s:<span class="keyword">string</span>)</span>:</span>dword;</div><div class="line"><span class="keyword">var</span> i:integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    hash:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> length(s) <span class="keyword">do</span></div><div class="line">        hash:=(hash*seed+ord(s[i])) <span class="keyword">and</span> $FFFFFFF;</div><div class="line">    hash:=hash <span class="keyword">mod</span> p;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="comment">//start开始，t在p中第一次出现的位置</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpos</span><span class="params">(t,p:<span class="keyword">string</span>;start:integer)</span>:</span>integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    getpos:=pos(t,copy(p,start,length(p)-start+<span class="number">1</span>));</div><div class="line">    <span class="keyword">if</span> getpos&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> inc(getpos,start-<span class="number">1</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> i,p0:integer;cstr,nstr:<span class="keyword">string</span>;ha:dword;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> a[<span class="number">0</span>,<span class="number">0</span>]=a[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="number">0</span>);halt <span class="keyword">end</span>;</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;</div><div class="line">    q[h].s:=a[<span class="number">0</span>,<span class="number">0</span>];q[h].i:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        cstr:=q[h].s;</div><div class="line">        <span class="keyword">if</span> q[h].i=<span class="number">10</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            p0:=getpos(a[<span class="number">0</span>,i],cstr,<span class="number">1</span>);</div><div class="line">            <span class="keyword">while</span> p0&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                nstr:=cstr;</div><div class="line">                delete(nstr,p0,length(a[<span class="number">0</span>,i]));</div><div class="line">                insert(a[<span class="number">1</span>,i],nstr,p0);</div><div class="line">                </div><div class="line">                ha:=hash(nstr);</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> ht[ha] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    ht[ha]:=true;</div><div class="line">                    <span class="keyword">if</span> nstr=a[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                        <span class="keyword">write</span>(q[h].i+<span class="number">1</span>);</div><div class="line">                        halt;</div><div class="line">                    <span class="keyword">end</span>;</div><div class="line">                    q[t].s:=nstr;q[t].i:=q[h].i+<span class="number">1</span>;</div><div class="line">                    inc(t);<span class="keyword">if</span> t&gt;<span class="number">10010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">                p0:=getpos(a[<span class="number">0</span>,i],cstr,p0+<span class="number">1</span>);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">10010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span> <span class="comment">&#123;Main&#125;</span></div><div class="line">    n:=-<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> <span class="keyword">not</span> eof <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(n);</div><div class="line">        readln(s);</div><div class="line">        p0:=pos(<span class="string">' '</span>,s);</div><div class="line">        a[<span class="number">0</span>,n]:=copy(s,<span class="number">1</span>,p0-<span class="number">1</span>);</div><div class="line">        a[<span class="number">1</span>,n]:=copy(s,p0+<span class="number">1</span>,length(s)-p0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"></div><div class="line">    <span class="comment">//fillchar(ht,sizeof(ht),false);</span></div><div class="line">    bfs();</div><div class="line">    <span class="keyword">write</span>(<span class="string">'NO ANSWER!'</span>);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h3 id="方法二：双向BFS-Hash"><a href="#方法二：双向BFS-Hash" class="headerlink" title="方法二：双向BFS+Hash"></a>方法二：双向BFS+Hash</h3><p>直接用hash表存得到该字串的最小步骤，然后发现匹配可以直接输出</p>
<dir style="text-align:right"><a href="/2016/08/15/Vijos-P1124/p1124.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1124.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> seed=<span class="number">131</span>;p=<span class="number">10000019</span>;</div><div class="line"><span class="keyword">type</span> state=<span class="keyword">record</span> s:ansistring;i:integer <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    <span class="comment">//0：正向；1：逆向</span></div><div class="line">    ht:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..p] <span class="keyword">of</span> integer;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> state;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">7</span>] <span class="keyword">of</span> ansistring;</div><div class="line">    n,p0:integer;s:ansistring;</div><div class="line">    h,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> integer;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hash</span><span class="params">(s:ansistring)</span>:</span>dword;</div><div class="line"><span class="keyword">var</span> i:integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    hash:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> length(s) <span class="keyword">do</span></div><div class="line">        hash:=(hash*seed+ord(s[i])) <span class="keyword">and</span> $FFFFFFF;</div><div class="line">    hash:=hash <span class="keyword">mod</span> p;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpos</span><span class="params">(t,p:<span class="keyword">string</span>;start:integer)</span>:</span>integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    getpos:=pos(t,copy(p,start,length(p)-start+<span class="number">1</span>));</div><div class="line">    <span class="keyword">if</span> getpos&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> inc(getpos,start-<span class="number">1</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">expand</span><span class="params">(x:integer)</span>;</span></div><div class="line"><span class="keyword">var</span> i,p0:integer;cstr,nstr:ansistring;ha:dword;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    cstr:=q[x,h[x]].s;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        p0:=getpos(a[x,i],cstr,<span class="number">1</span>);</div><div class="line">        <span class="keyword">while</span> p0&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            nstr:=cstr;</div><div class="line">            delete(nstr,p0,length(a[x,i]));</div><div class="line">            insert(a[<span class="number">1</span>-x,i],nstr,p0);</div><div class="line"></div><div class="line">            ha:=hash(nstr);</div><div class="line">            <span class="keyword">if</span> ht[<span class="number">1</span>-x,ha]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                <span class="keyword">write</span>(ht[<span class="number">1</span>-x,ha]+q[x,h[x]].i+<span class="number">1</span>);</div><div class="line">                halt;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">if</span> ht[x,ha]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                q[x,t[x]].s:=nstr;q[x,t[x]].i:=q[x,h[x]].i+<span class="number">1</span>;</div><div class="line">                ht[x,ha]:=q[x,t[x]].i;</div><div class="line">                inc(t[x]);<span class="keyword">if</span> t[x]&gt;<span class="number">10010</span> <span class="keyword">then</span> t[x]:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            p0:=getpos(a[x,i],cstr,p0+<span class="number">1</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    inc(h[x]);<span class="keyword">if</span> h[x]&gt;<span class="number">10010</span> <span class="keyword">then</span> h[x]:=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> i:integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        h[i]:=<span class="number">1</span>;t[i]:=<span class="number">2</span>;</div><div class="line">        q[i,<span class="number">1</span>].s:=a[i,<span class="number">0</span>];q[i,<span class="number">1</span>].i:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> (h[i]&lt;&gt;t[i]) <span class="keyword">and</span> (q[i,t[i]].i&lt;=<span class="number">10</span>) <span class="keyword">then</span> expand(i);</div><div class="line">    <span class="keyword">until</span> ((h[<span class="number">0</span>]=t[<span class="number">0</span>]) <span class="keyword">and</span> (h[<span class="number">1</span>]=t[<span class="number">1</span>])) <span class="keyword">or</span> </div><div class="line">          (q[<span class="number">0</span>,h[<span class="number">0</span>]].i+q[<span class="number">1</span>,h[<span class="number">1</span>]].i&gt;<span class="number">10</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span> <span class="comment">&#123;Main&#125;</span></div><div class="line">    n:=-<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> <span class="keyword">not</span> eof <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(n);</div><div class="line">        readln(s);</div><div class="line">        p0:=pos(<span class="string">' '</span>,s);</div><div class="line">        a[<span class="number">0</span>,n]:=copy(s,<span class="number">1</span>,p0-<span class="number">1</span>);</div><div class="line">        a[<span class="number">1</span>,n]:=copy(s,p0+<span class="number">1</span>,length(s)-p0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//fillchar(ht,sizeof(ht),0);</span></div><div class="line">    bfs();</div><div class="line">    <span class="keyword">write</span>(<span class="string">'NO ANSWER!'</span>);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;已知有两个字串 A\$, B\$ 及一组字串变换的规则（至多6个规则）:&lt;br&gt;A1\$ -&amp;gt; B1\$&lt;br&gt;A2\$ -&amp;gt; B2\$&lt;br&gt;规则的含义为：在 A＄中的子串 A1\$ 可以变换为 B1\$、A2\$ 可以变换为 B2\$ …。&lt;br&gt;例如：A\$＝’abcd’　B\$＝’xyz’&lt;br&gt;变换规则为：&lt;br&gt;‘abc’-&amp;gt;‘xu’　‘ud’-&amp;gt;‘y’　‘y’-&amp;gt;‘yz’&lt;br&gt;则此时，A\$ 可以经过一系列的变换变为 B\$，其变换的过程为：&lt;br&gt;‘abcd’-&amp;gt;‘xud’-&amp;gt;‘xy’-&amp;gt;‘xyz’&lt;br&gt;共进行了三次变换，使得 A\$ 变换为B\$。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行为两个字符串，第二行至文件尾为变换规则&lt;br&gt;A\$ B\$&lt;br&gt;A1\$ B1\$ \&lt;br&gt;A2\$ B2\$ |-&amp;gt; 变换规则&lt;br&gt;… … /&lt;br&gt;所有字符串长度的上限为 20。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;若在 10 步（包含 10步）以内能将 A\$ 变换为 B\$ ，则输出最少的变换步数；否则输出”NO ANSWER!”&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="Hash" scheme="https://cothrax.github.io/tags/Hash/"/>
    
      <category term="字符串" scheme="https://cothrax.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NOIP" scheme="https://cothrax.github.io/tags/NOIP/"/>
    
      <category term="双向BFS" scheme="https://cothrax.github.io/tags/%E5%8F%8C%E5%90%91BFS/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] p1023 Victoria的舞会3</title>
    <link href="https://cothrax.github.io/2016/08/15/Vijos-p1023/"/>
    <id>https://cothrax.github.io/2016/08/15/Vijos-p1023/</id>
    <published>2016-08-15T01:32:52.000Z</published>
    <updated>2016-08-15T03:43:49.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>Victoria是一位颇有成就的艺术家，他因油画作品《我爱北京天安门》闻名于世界。现在，他为了报答帮助他的同行们，准备开一个舞会。<br>Victoria准备邀请n个已经确定的人，可是问题来了：<br>这n个人每一个人都有一个小花名册，名册里面写着他能够通知到的人的名字。比如说在A的人名单里写了B，那么表示A能够通知到B；但是B的名单里不见的有A，也就是说B不见得通知到A。<br>Victoria觉得需要确定自己需要通知多少个人m，能够实际将所有人n都通知到。并求出一种方案以确定m的最小值是多少。<br>注意：自己的名单里面不会有自己的名字。Victoria可以自身通知到所有n个人。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数n。接下来n行，每i+1行表示编号为i的人的小花名册名单，名单以0结束。\<br>1&lt;=n&lt;=200。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个数，m。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>18<br>0<br>11 0<br>0<br>0<br>0<br>16 0<br>14 0<br>0<br>0<br>0<br>2 13 0<br>0<br>11 0<br>7 0<br>0<br>6 0<br>0<br>0</p>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>14</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>各个测试点1s</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>又见强连通分量，tarjan缩点，答案是入度为0的分量数</p>
<dir style="text-align:right"><a href="/2016/08/15/Vijos-p1023/p1023.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1023.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">201</span>,<span class="number">0</span>..<span class="number">201</span>] <span class="keyword">of</span> boolean;</div><div class="line">    dfn,low,scc,ind,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">201</span>] <span class="keyword">of</span> integer;</div><div class="line">    ins,used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">201</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,i,j,t,cc,tim,ans:integer;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">tarjan</span><span class="params">(v:integer)</span>;</span></div><div class="line"><span class="keyword">var</span> i:integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);dfn[v]:=tim;low[v]:=tim;</div><div class="line">    used[v]:=true;ins[v]:=true;</div><div class="line">    inc(t);s[t]:=v;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> g[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                tarjan(i);</div><div class="line">                low[v]:=min(low[v],low[i]);</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[i] <span class="keyword">then</span></div><div class="line">                low[v]:=min(low[v],dfn[i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> dfn[v]=low[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(cc);</div><div class="line">        <span class="keyword">while</span> s[t+<span class="number">1</span>]&lt;&gt;v <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            scc[s[t]]:=cc;</div><div class="line">            ins[s[t]]:=false;</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    fillchar(g,sizeof(g),false);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            g[i,j]:=true;</div><div class="line">            <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(ins,sizeof(ins),false);</div><div class="line">    fillchar(used,sizeof(used),false);</div><div class="line">    fillchar(ind,sizeof(ind),<span class="number">0</span>);</div><div class="line">    tim:=<span class="number">0</span>;cc:=<span class="number">0</span>;t:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> tarjan(i);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> g[i,j] <span class="keyword">and</span> (scc[i]&lt;&gt;scc[j]) <span class="keyword">then</span> </div><div class="line">                inc(ind[scc[j]]);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cc <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> ind[i]=<span class="number">0</span> <span class="keyword">then</span> inc(ans);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;Victoria是一位颇有成就的艺术家，他因油画作品《我爱北京天安门》闻名于世界。现在，他为了报答帮助他的同行们，准备开一个舞会。&lt;br&gt;Victoria准备邀请n个已经确定的人，可是问题来了：&lt;br&gt;这n个人每一个人都有一个小花名册，名册里面写着他能够通知到的人的名字。比如说在A的人名单里写了B，那么表示A能够通知到B；但是B的名单里不见的有A，也就是说B不见得通知到A。&lt;br&gt;Victoria觉得需要确定自己需要通知多少个人m，能够实际将所有人n都通知到。并求出一种方案以确定m的最小值是多少。&lt;br&gt;注意：自己的名单里面不会有自己的名字。Victoria可以自身通知到所有n个人。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行一个数n。接下来n行，每i+1行表示编号为i的人的小花名册名单，名单以0结束。\&lt;br&gt;1&amp;lt;=n&amp;lt;=200。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;一个数，m。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="强连通分量" scheme="https://cothrax.github.io/tags/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos] p1595 学校网络</title>
    <link href="https://cothrax.github.io/2016/08/15/Vijos-p1595/"/>
    <id>https://cothrax.github.io/2016/08/15/Vijos-p1595/</id>
    <published>2016-08-15T01:27:03.000Z</published>
    <updated>2016-08-15T03:44:02.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>一些学校的校园网连接在一个计算机网络上。学校之间存在软件支援协议。每个学校都有它应支援的学校名单（学校a支援学校b，并不表示学校b一定支援学校a）。当某校获得一个新软件时，无论是直接得到的还是从网络得到的，该校都应立即将这个软件通过网络传送给它应支援的学校。因此，若需要让所有连接在网络上的学校都能使用一个新软件，只需要将其提供给其中一些学校即可。<br>子任务a：根据学校间软件支援协议（各个学校的支援名单），计算最少需要将一个软件直接提供给多少个学校，才能使该软件通过网络传送到所有学校。<br>子任务b：如果允许在原有支援协议上添加新的支援关系，则总可以形成一个新的协议，使得此时只需要将一个新软件提供给任何一个学校，其他所有学校就都可以通过网络获得该软件。请计算出最少需要添加几条新的支援关系。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行是一个整数 n(2≤n≤100)，表示与网络连接的学校总数。接下来 n行描述了每个学校要支援的学校。第i+1行表示第i 号学校要支援的所有学校的编号，编号之间用空格隔开，每行以数字0 结束。如果某个学校不支援任何学校，则相应的行会有一个0。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>包含两行，第一行是一个正整数，表示子任务a的解。第二行也是一个正整数，表示子任务b的解。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>2 4 3 0<br>4 5 0<br>0<br>0<br>1 0</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>图结构</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的强连通分量。<br>tarjan缩点<br>统计每个强连通分量的入度和出度<br>第一问答案是入度为0的分量数<br>第二问的答案是max(入度为0的分量数，出度为0的分量数)<br>可以通过从入度0的点向出度为0的点连有向边来构造<br><strong>注意只有一个分量时，答案为1 0，不特判的话输出的是1 1</strong></p>
<dir style="text-align:right"><a href="/2016/08/15/Vijos-p1595/p1595.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p1595.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>,<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> boolean; </div><div class="line">    dfn,low,scc,s,ind,outd:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> integer;</div><div class="line">    used,ins:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,i,j,t,cc,tim:integer;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">tarjan</span><span class="params">(v:integer)</span>;</span></div><div class="line"><span class="keyword">var</span> i:integer;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);dfn[v]:=tim;low[v]:=tim;</div><div class="line">    ins[v]:=true;used[v]:=true;</div><div class="line">    inc(t);s[t]:=v;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">        <span class="keyword">if</span> g[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                tarjan(i);</div><div class="line">                low[v]:=min(low[v],low[i]);</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[i] <span class="keyword">then</span> </div><div class="line">                low[v]:=min(low[v],dfn[i]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> low[v]=dfn[v] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(cc);</div><div class="line">        <span class="keyword">while</span> s[t+<span class="number">1</span>]&lt;&gt;v <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            ins[s[t]]:=false;</div><div class="line">            scc[s[t]]:=cc;</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    fillchar(g,sizeof(g),false);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            g[i,j]:=true;</div><div class="line">            <span class="keyword">read</span>(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"></div><div class="line">    fillchar(used,sizeof(used),false);</div><div class="line">    fillchar(ins,sizeof(ins),false);</div><div class="line">    cc:=<span class="number">0</span>;tim:=<span class="number">0</span>;t:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> <span class="keyword">not</span> used[i] <span class="keyword">then</span> tarjan(i);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> cc=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> writeln(<span class="number">1</span>);<span class="keyword">write</span>(<span class="number">0</span>);halt <span class="keyword">end</span>;</div><div class="line">    fillchar(ind,sizeof(ind),<span class="number">0</span>);</div><div class="line">    fillchar(outd,sizeof(outd),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> (g[i,j]) <span class="keyword">and</span> (scc[i]&lt;&gt;scc[j]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                inc(outd[scc[i]]);</div><div class="line">                inc(ind[scc[j]]);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cc <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> ind[i]=<span class="number">0</span> <span class="keyword">then</span> inc(ind[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">if</span> outd[i]=<span class="number">0</span> <span class="keyword">then</span> inc(outd[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(ind[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">write</span>(max(ind[<span class="number">0</span>],outd[<span class="number">0</span>]));</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;一些学校的校园网连接在一个计算机网络上。学校之间存在软件支援协议。每个学校都有它应支援的学校名单（学校a支援学校b，并不表示学校b一定支援学校a）。当某校获得一个新软件时，无论是直接得到的还是从网络得到的，该校都应立即将这个软件通过网络传送给它应支援的学校。因此，若需要让所有连接在网络上的学校都能使用一个新软件，只需要将其提供给其中一些学校即可。&lt;br&gt;子任务a：根据学校间软件支援协议（各个学校的支援名单），计算最少需要将一个软件直接提供给多少个学校，才能使该软件通过网络传送到所有学校。&lt;br&gt;子任务b：如果允许在原有支援协议上添加新的支援关系，则总可以形成一个新的协议，使得此时只需要将一个新软件提供给任何一个学校，其他所有学校就都可以通过网络获得该软件。请计算出最少需要添加几条新的支援关系。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行是一个整数 n(2≤n≤100)，表示与网络连接的学校总数。接下来 n行描述了每个学校要支援的学校。第i+1行表示第i 号学校要支援的所有学校的编号，编号之间用空格隔开，每行以数字0 结束。如果某个学校不支援任何学校，则相应的行会有一个0。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;包含两行，第一行是一个正整数，表示子任务a的解。第二行也是一个正整数，表示子任务b的解。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="强连通分量" scheme="https://cothrax.github.io/tags/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="IOI" scheme="https://cothrax.github.io/tags/IOI/"/>
    
  </entry>
  
</feed>
