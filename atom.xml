<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cothrax</title>
  <subtitle>I don&#39;t need a subtitle.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cothrax.github.io/"/>
  <updated>2016-09-10T15:36:03.902Z</updated>
  <id>https://cothrax.github.io/</id>
  
  <author>
    <name>Cothrax</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NOIP模拟赛 黑魔法师之门</title>
    <link href="https://cothrax.github.io/2016/09/10/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%BB%91%E9%AD%94%E6%B3%95%E5%B8%88%E4%B9%8B%E9%97%A8/"/>
    <id>https://cothrax.github.io/2016/09/10/NOIP模拟赛-黑魔法师之门/</id>
    <published>2016-09-10T15:22:00.000Z</published>
    <updated>2016-09-10T15:36:03.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>经过了 16 个工作日的紧张忙碌,未来的人类终于收集到了足够的能源。然而在与 Violet星球的战争中,由于 Z 副官的愚蠢,地球的领袖 applepi 被邪恶的黑魔法师 Vani 囚禁在了Violet 星球。为了重启 Nescafé这一宏伟的科技工程,人类派出了一支由 XLk、Poet_shy 和lydrainbowcat 三人组成的精英队伍,穿越时空隧道,去往 Violet 星球拯救领袖 applepi。<br>applepi 被囚禁的地点只有一扇门,当地人称它为“黑魔法师之门”。这扇门上画着一张无向无权图,而打开这扇门的密码就是<strong>图中每个点的度数大于零且都是偶数的子图的个数对 1000000009 取模的值</strong>。此处子图 (V, E) 定义为:点集 V 和边集 E 都是原图的任意子集,其中 E 中的边的端点都在 V 中。<br>但是 Vani 认为这样的密码过于简单,因此门上的图是动态的。起初图中只有 N 个顶点而没有边。Vani 建造的门控系统共操作 M 次,每次往图中添加一条边。你必须在每次操作后都填写正确的密码,才能够打开黑魔法师的牢狱,去拯救伟大的领袖 applepi。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个整数 N 和 M。<br>接下来 M 行,每行两个整数 A 和 B,代表门控系统添加了一条无向边 (A, B)。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一共 M 行,表示每次操作后的密码。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 8<br>3 1<br>3 2<br>2 1<br>2 1<br>1 3<br>1 4<br>2 4<br>2 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>0<br>0<br>13<br>7<br>7<br>15<br>31</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><h3 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h3><p>第三次添加之后,存在一个满足条件的子图 {1, 2, 3}(其中 1, 2, 3 是数据中边的标号)。<br>第四次添加之后,存在三个子图 {1, 2, 3},{1, 2, 4},{3, 4}。<br>„„</p>
<h3 id="数据范围与约定"><a href="#数据范围与约定" class="headerlink" title="数据范围与约定"></a>数据范围与约定</h3><p>对于 30% 的数据,N, M≤10。<br>对于 100% 的数据,N≤200000,M≤300000。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>构造（找规律）后并查集，容易发现一个满足题意的子图是有环的，且都可以看做是多个简单环拼接起来，实际上答案=2^(简单环的个数)-1<br>有以下几种思路：</p>
<ol>
<li>考虑边e(x,y)，如果x和y已经连通，那么将e加进去会形成一个简单环，将这个环加入已有的子图中会构造出新的答案，于是ans=ans*2+1</li>
<li>或者说，由于答案的子图都是由简单环组合出来的，二项式定理可得答案是$\sum_{i=1}^{n}C(n,i)=2^n-1$，同样可以算出来</li>
<li>题解提供了一种奇怪的构造思路：<blockquote>
<p>因为一个环里每个点的度数都是大于零的偶数,我们可以这样来构造答案:每个环有选和不选两种选择,如果选择了该环,那么环上所有边的“选择次数” +1。最后取所有“选择次数”为奇数的边构成一个边集,就是一个答案。可以证明这样构造出来的解不重复且涵盖了所有情况。因此答案就是 2^(图中”元”环的个数)。实现方法非常简单,只需要一个并查集即可。</p>
</blockquote>
</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-黑魔法师之门/magician.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>magician.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> z=<span class="number">1000000009</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,ans,x,y:int;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span> par[x]:=find(par[x]);find:=par[x] <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span> x:=find(x);y:=find(y);par[x]:=y <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(x)=find(y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'magician.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'magician.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> par[i]:=i;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(x,y);</div><div class="line">        <span class="keyword">if</span> same(x,y) <span class="keyword">then</span> ans:=(ans*<span class="number">2</span>+<span class="number">1</span>) <span class="keyword">mod</span> z <span class="keyword">else</span> union(x,y);</div><div class="line">        writeln(ans); </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;经过了 16 个工作日的紧张忙碌,未来的人类终于收集到了足够的能源。然而在与 Violet星球的战争中,由于 Z 副官的愚蠢,地球的领袖 applepi 被邪恶的黑魔法师 Vani 囚禁在了Violet 星球。为了重启 Nescafé这一宏伟的科技工程,人类派出了一支由 XLk、Poet_shy 和lydrainbowcat 三人组成的精英队伍,穿越时空隧道,去往 Violet 星球拯救领袖 applepi。&lt;br&gt;applepi 被囚禁的地点只有一扇门,当地人称它为“黑魔法师之门”。这扇门上画着一张无向无权图,而打开这扇门的密码就是&lt;strong&gt;图中每个点的度数大于零且都是偶数的子图的个数对 1000000009 取模的值&lt;/strong&gt;。此处子图 (V, E) 定义为:点集 V 和边集 E 都是原图的任意子集,其中 E 中的边的端点都在 V 中。&lt;br&gt;但是 Vani 认为这样的密码过于简单,因此门上的图是动态的。起初图中只有 N 个顶点而没有边。Vani 建造的门控系统共操作 M 次,每次往图中添加一条边。你必须在每次操作后都填写正确的密码,才能够打开黑魔法师的牢狱,去拯救伟大的领袖 applepi。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行包含两个整数 N 和 M。&lt;br&gt;接下来 M 行,每行两个整数 A 和 B,代表门控系统添加了一条无向边 (A, B)。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;输出一共 M 行,表示每次操作后的密码。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="并查集" scheme="https://cothrax.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-06-28</title>
    <link href="https://cothrax.github.io/2016/09/10/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-2014-06-28/"/>
    <id>https://cothrax.github.io/2016/09/10/NOIP模拟赛-2014-06-28/</id>
    <published>2016-09-10T07:05:25.000Z</published>
    <updated>2016-09-10T14:31:25.940Z</updated>
    
    <content type="html"><![CDATA[<p>title: NOIP模拟赛 2014-06-28<br>tags:</p>
<ul>
<li>OI</li>
<li>图论</li>
<li>最短路</li>
<li>生成树</li>
<li>网络流</li>
<li>最大流</li>
<li>二分图<br>categories: Problem Set<br>date: 2016-09-10 15:05:25</li>
</ul>
<hr>
<p>三道图论题。</p>
<table>
<thead>
<tr>
<th>题目</th>
<th>思路</th>
</tr>
</thead>
<tbody>
<tr>
<td>魔术球问题弱化版</td>
<td>二分+最大流(匈牙利算法)</td>
</tr>
<tr>
<td>征兵</td>
<td>最大生成树</td>
</tr>
<tr>
<td>坑爹的GPS</td>
<td>三次最短路</td>
</tr>
</tbody>
</table>
<h1 id="P1-魔术球问题弱化版"><a href="#P1-魔术球问题弱化版" class="headerlink" title="P1 魔术球问题弱化版"></a>P1 魔术球问题弱化版</h1><p>假设有 n 根柱子,现要按下述规则在这 n 根柱子中依次放入编号为 1,2,3,…的球。</p>
<ol>
<li>每次只能在某根柱子的最上面放球。</li>
<li>在同一根柱子中,任何 2 个相邻球的编号之和为完全平方数。</li>
</ol>
<p>试设计一个算法,计算出在 n 根柱子上最多能放多少个球。例如,在 4 根柱子上最多可放 11 个球。<br>对于给定的 n,计算在 n 根柱子上最多能放多少个球。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第 1 行有 1 个正整数 n,表示柱子数。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行表示可以放的最大球数</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>11</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>题目限制(为什么说弱化版就在这里)<br>N&lt;=60,时限为 3s;比起原题还有弱化在不用打出方案,方案太坑了</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>先二分答案，对于给定球数建图：如果i+j(i&lt;j)为完全平方数，从i向j连边。<br>然后求图上的<strong>最小路径覆盖数x</strong>，判断$x\leq n$<br>求DAG上的路径覆盖可以规约为求对应二分图的最大匹配，详见此处：<a href="http://www.cnblogs.com/justPassBy/p/5369930.html" target="_blank" rel="external">http://www.cnblogs.com/justPassBy/p/5369930.html</a><br>上述方法只适用于DAG</p>
<ol>
<li>二分图只能表示简单路径，环会被看成两条简单路径</li>
<li>连通无向图除非是树，必然有环。</li>
</ol>
<p>最好写的匈牙利算法，极限数据1.5s</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/ball.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>ball.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> eps=<span class="number">0.00000000001</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,match:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4010</span>] <span class="keyword">of</span> int;</div><div class="line">    used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,l,r,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f;g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(v:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> used[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            used[u]:=true;</div><div class="line">            <span class="keyword">if</span> (match[u]=<span class="number">0</span>) <span class="keyword">or</span> dfs(match[u]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                match[u]:=v;match[v]:=u;</div><div class="line">                <span class="keyword">exit</span>(true);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">exit</span>(false);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j,cnt:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> abs(sqrt(i+j)-round(sqrt(i+j)))&lt;eps <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                add(i,j+x);add(j+x,i);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    fillchar(match,[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            fillchar(used,sizeof(used),false);</div><div class="line">            <span class="keyword">if</span> dfs(i) <span class="keyword">then</span> inc(cnt);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> x-cnt&lt;=n <span class="keyword">then</span> check:=true <span class="keyword">else</span> check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'ball.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'ball.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">2000</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<p>最大流比匈牙利快5倍。。。（可能是我写丑了）</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/ball00.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>ball00.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    eps=<span class="number">0.00000000001</span>;</div><div class="line">    inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,c,rev,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,d,iter,q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4020</span>] <span class="keyword">of</span> int;</div><div class="line">    n,l,r,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">adde</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="keyword">var</span> m:int;</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        m:=head[<span class="number">0</span>];</div><div class="line">        g[m].t:=t;g[m].c:=c;</div><div class="line">        g[m].next:=head[f];head[f]:=m;</div><div class="line">        inc(head[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">begin</span> adde(f,t,c);adde(t,f,<span class="number">0</span>) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bfs</span><span class="params">(s,t0:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    h,t,i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(d,sizeof(d),<span class="number">255</span>);</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">1</span>;q[h]:=s;d[s]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> (g[i].c&gt;<span class="number">0</span>) <span class="keyword">and</span> (d[u]=-<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+<span class="number">1</span>;</div><div class="line">                q[t]:=u;</div><div class="line">                inc(t);<span class="keyword">if</span> t&gt;<span class="number">4020</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;    </div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">4020</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    bfs:=d[t0]&lt;&gt;-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(v,t,f:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> u,i,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> v=t <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">    dfs:=<span class="number">0</span>;i:=iter[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> (g[i].c&gt;<span class="number">0</span>) <span class="keyword">and</span> (d[u]=d[v]+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=dfs(u,t,min(g[i].c,f-dfs));</div><div class="line">            dec(g[i].c,tmp);</div><div class="line">            <span class="keyword">if</span> g[i].c&gt;<span class="number">0</span> <span class="keyword">then</span> iter[v]:=i;</div><div class="line">            inc(g[i xor <span class="number">1</span>].c,tmp);</div><div class="line">            inc(dfs,tmp);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> dfs=<span class="number">0</span> <span class="keyword">then</span> d[i]:=-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxflow</span><span class="params">(s,t:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    maxflow:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> bfs(s,t) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span> iter[i]:=head[i];</div><div class="line">        inc(maxflow,dfs(s,t,inf));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> abs(sqrt(i+j)-round(sqrt(i+j)))&lt;eps <span class="keyword">then</span></div><div class="line">                add(i,j+x,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(<span class="number">2</span>*x+<span class="number">1</span>,i,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(i+x,<span class="number">2</span>*x+<span class="number">2</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> x-maxflow(<span class="number">2</span>*x+<span class="number">1</span>,<span class="number">2</span>*x+<span class="number">2</span>)&lt;=n <span class="keyword">then</span> check:=true </div><div class="line">    <span class="keyword">else</span> check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'ball.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'ball.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">2000</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<p>其实二分图完全没有用dinic的必要，直接上ford-fulkerson就好了。</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/ball0.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>ball0.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    eps=<span class="number">0.00000000001</span>;</div><div class="line">    inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,c,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,flag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4020</span>] <span class="keyword">of</span> int;</div><div class="line">    n,l,r,cur,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">adde</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="keyword">var</span> m:int;</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        m:=head[<span class="number">0</span>];</div><div class="line">        g[m].f:=f;g[m].t:=t;g[m].c:=c;</div><div class="line">        g[m].next:=head[f];head[f]:=m;</div><div class="line">        inc(head[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    adde(f,t,c);adde(t,f,<span class="number">0</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(s,t,f:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> u,i,d:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> s=t <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">    dfs:=<span class="number">0</span>;</div><div class="line">    flag[s]:=cur;</div><div class="line">    i:=head[s];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> (flag[u]&lt;cur) <span class="keyword">and</span> (g[i].c&gt;<span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            d:=dfs(u,t,min(f-dfs,g[i].c));</div><div class="line">            <span class="keyword">if</span> d&gt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                dec(g[i].c,d);</div><div class="line">                inc(g[i xor <span class="number">1</span>].c,d);</div><div class="line">                inc(dfs,d);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxflow</span><span class="params">(s,t:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> f:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    maxflow:=<span class="number">0</span>;</div><div class="line">    fillchar(flag,sizeof(flag),<span class="number">0</span>);cur:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(cur);</div><div class="line">        f:=dfs(s,t,inf);</div><div class="line">        <span class="keyword">if</span> f=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(maxflow);</div><div class="line">        inc(maxflow,f);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> abs(sqrt(i+j)-round(sqrt(i+j)))&lt;eps <span class="keyword">then</span></div><div class="line">                add(i,j+x,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(<span class="number">2</span>*x+<span class="number">1</span>,i,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(i+x,<span class="number">2</span>*x+<span class="number">2</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> x-maxflow(<span class="number">2</span>*x+<span class="number">1</span>,<span class="number">2</span>*x+<span class="number">2</span>)&lt;=n <span class="keyword">then</span> check:=true </div><div class="line">    <span class="keyword">else</span> check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'ball.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'ball.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">2000</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-征兵"><a href="#P2-征兵" class="headerlink" title="P2 征兵"></a>P2 征兵</h1><p>一个国王,他拥有一个国家。最近他因为国库里钱太多了,闲着蛋疼要征集一只部队要保卫<br>国家。他选定了 N 个女兵和 M 个男兵,但事实上每征集一个兵他就要花 10000RMB,即使国库<br>里钱再多也伤不起啊。他发现,某男兵和某女兵之间有某种关系(往正常方面想,一共 R 种<br>关系),这种关系可以使 KING 少花一些钱就可以征集到兵,不过国王也知道,在征兵的时候,<br>每一个兵只能使用一种关系来少花钱。这时国王向你求助,问他最少要花多少的钱。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行:T,一共 T 组数据。<br>接下来 T 组数据,<br>第一行包括 N,M,R<br>接下来的 R 行 包括 Xi,Yi,Vi 表示如果招了第 Xi 个女兵,再招第 Yi 个男兵能省 Vi 元(同样表示如果招了第 Yi 个男兵,再招第 Xi 个女兵能也省 Vi 元)</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>共 T 行,表示每组数据的最终花费是多少(因为国库里的钱只有 2^31-1,所以保证最终花费在 maxlongint 范围内)</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>5 5 8<br>4 3 6831<br>1 3 4583<br>0 0 6592<br>0 1 3063<br>3 3 4975<br>1 3 2049<br>4 2 2104<br>2 2 781<br>5 5 10<br>2 4 9820<br>3 2 6236<br>3 1 8864<br>2 4 8326<br>2 0 5156<br>2 0 1463<br>4 1 2439<br>0 4 4373<br>3 4 8889<br>2 4 3133</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>71071<br>54223</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>数据范围<br>数据保证 T&lt;=5 ,m,n&lt;=10000,r&lt;=50000,Xi&lt;=m,Yi&lt;=n,Vi&lt;=10000,结果&lt;=2^31-1</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>最大生成树</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/conscription.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>conscription.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,w:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> edge;</div><div class="line">    par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">20010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,r,i,t:int;ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;tmp:edge;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=g[random(r-l)+l].w;</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> g[i].w&gt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> g[j].w&lt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=g[i];g[i]:=g[j];g[j]:=tmp;</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[x]:=find(par[x]);</div><div class="line">        find:=par[x];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span> x:=find(x);y:=find(y);par[x]:=y <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(x)=find(y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        </div><div class="line">        <span class="keyword">read</span>(n,m,r);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(g[i].f,g[i].t,g[i].w);</div><div class="line">            inc(g[i].t,n);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n+m-<span class="number">1</span> <span class="keyword">do</span> par[i]:=i;</div><div class="line">        qsort(<span class="number">1</span>,r);ans:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> same(g[i].f,g[i].t) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                union(g[i].f,g[i].t);</div><div class="line">                inc(ans,g[i].w);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        writeln((n+m)*<span class="number">10000</span>-ans);</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">until</span> t=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-坑爹的-GPS"><a href="#P3-坑爹的-GPS" class="headerlink" title="P3 坑爹的 GPS"></a>P3 坑爹的 GPS</h1><p>有一天,FJ 买了一辆车,但是,他一手下载了两个 GPS 系统。好了现在麻烦的事情来了,GPS有一个功能大概大家也知道,如果 FJ 没有按照 GPS 内置地图的最短路走,GPS 就会报错来骚扰你。现在 FJ 准备从他的农舍(在 1 这个点)开车到他的谷屋(n 这个点)。FJ 给了你两个<br>GPS 系统内置地图的信息,他想知道,他最少会听到多少次报错(如果 FJ 走的路同时不满足两个 GPS,报错次数+2)</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行:n,k;n 表示有 FJ 的谷屋在哪,同时保证 GPS 内置地图里的点没有超过 n 的点。K 表示 GPS 内置地图里的路有多少条,如果两个点没有连接则表明这不是一条通路。接下来 k 行,每行 4 个数 X,Y,A,B 分别表示从 X 到 Y 在第一个 GPS 地图里的距离是 A,在第二个 GPS 地图里的是 B。注意由于地形的其他因素 GPS 给出的边是有向边。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出:一个值,表示 FJ 最少听到的报错次数。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 7<br>3 4 7 1<br>1 3 2 20<br>1 4 17 18<br>4 5 25 3<br>1 2 10 13 5 4 14<br>2 4 6 5</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>FJ 选择的路线是 1 2 4 5,但是 GPS 1 认为的最短路是 1 到 3,所以报错一次,对于剩下的2 4 5,两个 GPS 都不会报错。<br>数据范围<br>N&lt;=10000,至于路有多少条自己算吧。数据保证所有的距离都在 2^31-1 以内。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>三次最短路：</p>
<ol>
<li>第一个gps从终点反向spfa</li>
<li>第二个gps同理</li>
<li>扫一边所有边构图，边权为该边的报错次数（0..2)，从起点spfa</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/gpsduel.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>gpsduel.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,w,next:int <span class="keyword">end</span>;</div><div class="line">    graph=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> edge;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    ga,gb,g:graph;</div><div class="line">    ha,hb,head,da,db,q:arr;</div><div class="line">    inq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,m,i,cnt,f0,t0,a0,b0:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> g:graph;<span class="keyword">var</span> head:arr;f0,t0,w0:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f0;g[m].t:=t0;g[m].w:=w0;</div><div class="line">    g[m].next:=head[f0];head[f0]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">spfa</span><span class="params">(g:graph;head:arr;x:int;<span class="keyword">var</span> d:arr)</span>;</span></div><div class="line"><span class="keyword">var</span> h,t,i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(inq,sizeof(inq),false);</div><div class="line">    filldword(d,sizeof(d) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=x;d[x]:=<span class="number">0</span>;inq[x]:=true;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]&gt;d[v]+g[i].w <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+g[i].w;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> inq[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    inq[u]:=true;q[t]:=u;</div><div class="line">                    inc(t);<span class="keyword">if</span> t&gt;<span class="number">10010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inq[v]:=false;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">10010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'gpsduel.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'gpsduel.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,a0,b0);</div><div class="line">        add(ga,ha,t0,f0,a0);</div><div class="line">        add(gb,hb,t0,f0,b0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    spfa(ga,ha,n,da);spfa(gb,hb,n,db);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        cnt:=<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span> da[ga[i].t]=da[ga[i].f]+ga[i].w <span class="keyword">then</span> dec(cnt);</div><div class="line">        <span class="keyword">if</span> db[gb[i].t]=db[gb[i].f]+gb[i].w <span class="keyword">then</span> dec(cnt);</div><div class="line">        add(g,head,ga[i].t,gb[i].f,cnt);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    spfa(g,head,<span class="number">1</span>,da);</div><div class="line">    <span class="keyword">write</span>(da[n]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;title: NOIP模拟赛 2014-06-28&lt;br&gt;tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OI&lt;/li&gt;
&lt;li&gt;图论&lt;/li&gt;
&lt;li&gt;最短路&lt;/li&gt;
&lt;li&gt;生成树&lt;/li&gt;
&lt;li&gt;网络流&lt;/li&gt;
&lt;li&gt;最大流&lt;/li&gt;
&lt;li&gt;二分图&lt;br&gt;categories: Problem Set&lt;br&gt;date: 2016-09-10 15:05:25&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;三道图论题。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题目&lt;/th&gt;
&lt;th&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;魔术球问题弱化版&lt;/td&gt;
&lt;td&gt;二分+最大流(匈牙利算法)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;征兵&lt;/td&gt;
&lt;td&gt;最大生成树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;坑爹的GPS&lt;/td&gt;
&lt;td&gt;三次最短路&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-魔术球问题弱化版&quot;&gt;&lt;a href=&quot;#P1-魔术球问题弱化版&quot; class=&quot;headerlink&quot; title=&quot;P1 魔术球问题弱化版&quot;&gt;&lt;/a&gt;P1 魔术球问题弱化版&lt;/h1&gt;&lt;p&gt;假设有 n 根柱子,现要按下述规则在这 n 根柱子中依次放入编号为 1,2,3,…的球。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每次只能在某根柱子的最上面放球。&lt;/li&gt;
&lt;li&gt;在同一根柱子中,任何 2 个相邻球的编号之和为完全平方数。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;试设计一个算法,计算出在 n 根柱子上最多能放多少个球。例如,在 4 根柱子上最多可放 11 个球。&lt;br&gt;对于给定的 n,计算在 n 根柱子上最多能放多少个球。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-7-18</title>
    <link href="https://cothrax.github.io/2016/09/08/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-2014-7-18/"/>
    <id>https://cothrax.github.io/2016/09/08/NOIP模拟赛-2014-7-18/</id>
    <published>2016-09-08T07:37:45.000Z</published>
    <updated>2016-09-10T14:14:32.444Z</updated>
    
    <content type="html"><![CDATA[<p>一共五道题，有一道裸的二分和一个树形背包没有写。</p>
<table>
<thead>
<tr>
<th>题目</th>
<th>思路</th>
</tr>
</thead>
<tbody>
<tr>
<td>czy的后宫3</td>
<td>无修改莫队/各种数据结构</td>
</tr>
<tr>
<td>czy的后宫4</td>
<td>坑爹dp</td>
</tr>
<tr>
<td>蒟蒻czy又被D飞了</td>
<td>变形背包</td>
</tr>
</tbody>
</table>
<h1 id="P1-czy的后宫4"><a href="#P1-czy的后宫4" class="headerlink" title="P1 czy的后宫4"></a>P1 czy的后宫4</h1><p>上次czy在机房妥善安排了他的后宫之后，他发现可以将他的妹子分为c种，他经常会考虑这样一个问题：在[l,r]的妹子中间，能挑选出多少不同类型的妹子呢？<br>注意：由于czy非常丧尸，所以他要求在所挑选的妹子类型在[l,r]中出现次数为正偶数，你懂得。<br>问题简述:n个数，m次询问，每次问[l,r]区间有多少个数恰好出现正偶数次<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行3个整数，表示n,c,m<br>第二行n个数，每个数Ai在[1,c]之间，表示一个Ai类型的妹子<br>接下来m行，每行两个整数l,r，表示询问[l,r]这个区间的答案</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>有m行，表示第i次询问的答案</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 5 3<br>1 1 2 2 3<br>1 5<br>3 4<br>2 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2<br>1<br>0</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>共有10组测试数据<br>1-4组n,m=500，2000，5000，10000，c=1000<br>5-7组n,m=20000，30000，40000，c=10000<br>8-10组n,m=50000，80000，100000，c=100000<br>数据保证随机生成</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>离线做，裸的无修改莫队</p>
<dir style="text-align:right"><a href="/2016/09/08/NOIP模拟赛-2014-7-18/harem.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>harem.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,k,b,i,j,l,r,tot:int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">3</span>] <span class="keyword">of</span> int;</div><div class="line">    a,ans,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(i,j:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    com:=(q[i,<span class="number">3</span>]&lt;q[j,<span class="number">3</span>]) <span class="keyword">or</span> ((q[i,<span class="number">3</span>]=q[j,<span class="number">3</span>]) <span class="keyword">and</span> (q[i,<span class="number">2</span>]&lt;q[j,<span class="number">2</span>]));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    tmp:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3</span>] <span class="keyword">of</span> int;</div><div class="line">    i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;q[<span class="number">0</span>]:=q[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> com(i,<span class="number">0</span>) <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> com(<span class="number">0</span>,j) <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=q[i];q[i]:=q[j];q[j]:=tmp;</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(i,x:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> odd(cnt[i]) <span class="keyword">and</span> (cnt[i]&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span> dec(tot);</div><div class="line">    inc(cnt[i],x);</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> odd(cnt[i]) <span class="keyword">and</span> (cnt[i]&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span> inc(tot);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'harem.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'harem.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k,m);b:=floor(sqrt(n));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(q[i,<span class="number">1</span>],q[i,<span class="number">2</span>]);</div><div class="line">        q[i,<span class="number">0</span>]:=i;</div><div class="line">        q[i,<span class="number">3</span>]:=(q[i,<span class="number">1</span>]-<span class="number">1</span>) <span class="keyword">div</span> b+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    qsort(<span class="number">1</span>,m);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">0</span>;tot:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=r+<span class="number">1</span> <span class="keyword">to</span> q[i,<span class="number">2</span>] <span class="keyword">do</span> update(a[j],<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=r <span class="keyword">downto</span> q[i,<span class="number">2</span>]+<span class="number">1</span> <span class="keyword">do</span> update(a[j],-<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=l <span class="keyword">to</span> q[i,<span class="number">1</span>]-<span class="number">1</span> <span class="keyword">do</span> update(a[j],-<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=l-<span class="number">1</span> <span class="keyword">downto</span> q[i,<span class="number">1</span>] <span class="keyword">do</span> update(a[j],<span class="number">1</span>);</div><div class="line">        l:=q[i,<span class="number">1</span>];r:=q[i,<span class="number">2</span>];</div><div class="line">        ans[q[i,<span class="number">0</span>]]:=tot;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(ans[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-czy的后宫4"><a href="#P2-czy的后宫4" class="headerlink" title="P2 czy的后宫4"></a>P2 czy的后宫4</h1><p>czy有很多妹子，妹子虽然数量很多，但是质量不容乐观，她们的美丽值全部为负数（喜闻乐见）。<br>czy每天都要带N个妹子到机房，她们都有一个独一无二的美丽值，美丽值为-1到-N之间的整数。他想要把这些妹子排成一个波动序列，这样相对“漂亮”（美丽值的绝对值较小）的妹子可以与她旁边的两个美丽值的绝对值较大的妹子形成鲜明的对比，整个序列相对将更加“美观”（不再那么无法直视）。<br>一个序列是波动序列仅当序列中的每个数比周围的两个数都大或都小（如果有的话）。<br>现在czy希望知道，长度为N的波动序列有多少种。两种序列A和B不同当且仅当存在一个i，使得Ai≠Bi。由于这个数目可能很大，你只对它除以P的余数感兴趣。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件czy.in仅含一行，两个正整数N, P。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出文件czy.out仅含一行，一个非负整数，表示你所求的答案对P取余之后的结果。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 7</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>说明：共有10种可能的序列，它们是：  1324 1423 2143 2314 2413  3142 3241 3412 4132 4231<br>(忽略负号)<br>【数据规模和约定】<br>对于20%的数据，满足N≤10；<br>对于40%的数据，满足N≤18；<br>对于70%的数据，满足N≤550；<br>对于100%的数据，满足3≤N≤4200，P≤10^9。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>异常坑的dp：</p>
<ol>
<li><p>$f[i,j]$：<span>$a{1..i}$</span><!-- Has MathJax -->的序列以$x\in[1..i]$开头，且<span>$a_1&lt;a_2$</span><!-- Has MathJax -->（序列第一个<strong>上升</strong>）的方案数</p>
</li>
<li><p><span>$g[i,j]$</span><!-- Has MathJax -->：<span>$a{1..i}$</span><!-- Has MathJax -->的序列以$x\in[j..i]$开头，且<span>$a_1&gt;a_2$</span><!-- Has MathJax -->（序列第一个<strong>下降</strong>）的方案数</p>
</li>
</ol>
<p>结论：$$f[i,j]=f[i,j-1]+g[i-1,j]$$</p>
<ol>
<li>$f[i,j-1]$：把$1..j-1$开头的方案加上去</li>
<li>$g[i-1,j]$：考虑序列以j开头，要求<span>$a_2&gt;j$</span><!-- Has MathJax -->，则<span>$a_2\in[j+1,i]$</span><!-- Has MathJax -->，从<span>$a_2$</span><!-- Has MathJax -->开始是上升序列，j已经用掉了，剩下<span>$\{1..j-1,j+1..i\}$</span><!-- Has MathJax -->离散为<span>$\{1..i-1\}$</span><!-- Has MathJax -->，原来的j+1离散为1..i-1中的j，所以方案数为$g[i-1,j]$</li>
</ol>
<p>f和g是对称的：考虑将f的一个序列a中的$a_i$换成$i-a_i+1$，就对应g中的一个序列。</p>
<p>于是：$$f[i,j]=f[i,j-1]+f[i-1,i-j]$$</p>
<dir style="text-align:right"><a href="/2016/09/08/NOIP模拟赛-2014-7-18/czy.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>czy.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,i,j,c,p:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">4210</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'czy.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'czy.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,p);</div><div class="line">    <span class="keyword">if</span> n=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="number">1</span>);halt <span class="keyword">end</span>;</div><div class="line">    f[<span class="number">1</span>,<span class="number">1</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        c:=i <span class="keyword">and</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> i <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            f[c,j]:=f[c,j-<span class="number">1</span>]+f[c xor <span class="number">1</span>,i-j];</div><div class="line">            <span class="keyword">if</span> f[c,j]&gt;p <span class="keyword">then</span> f[c,j]:=f[c,j] <span class="keyword">mod</span> p;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(f[n <span class="keyword">and</span> <span class="number">1</span>,n]*<span class="number">2</span> <span class="keyword">mod</span> p);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P5-蒟蒻czy又被D飞了"><a href="#P5-蒟蒻czy又被D飞了" class="headerlink" title="P5 蒟蒻czy又被D飞了"></a>P5 蒟蒻czy又被D飞了</h1><p>机房里的各路巨神天天D蒟蒻CZY，早已是他们的日常任务了。（今天的机房也是很和平呢）<br>这一次他们安排好了一种方式来D蒟蒻Czy。每个人每次都能把Czy D飞一个高度（让Czy的高度+a[i]），由于他们的精力有限，要保留体力应对接下来的战斗，所以他们每个人只会D Czy k[i]次。由于他们每个人的D人能力不同，各有所长，所以他们每个人都在Czy到一定高度h[i]以后良心发现，任由Czy自生自灭，回去玩达尔文进化岛了。<br>所以Czy想知道他的速度是否能达到第二宇宙速度，离开这个可怕的地方。但是Czy太弱了，所以这个问题就交给了未来集训队的你。但是你这么吊，哪里屑解答Czy蒟蒻的问题。于是你打算只告诉他最高会飞到什么高度，让他自己算自己的速度去。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行：1个整数N（1&lt;=N&lt;=100）N表示机房里有多少人今天要D 蒟蒻Czy<br>接下里N行，每行描述一个神犇的信息  a[i] h[i] k[i]</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>第1行：1个整数H，表示Czy最高会被神犇们D到哪里去<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>7<br>8 35 1<br>5 35 1<br>15 35 1<br>8 35 1<br>10 35 1<br>4 35 1<br>2 35 1</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>35</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于100%的数据  1&lt;=k[i]&lt;=30，1&lt;=h[i]&lt;=10000,  1&lt;=a[i]&lt;=200 </p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>带限制的背包</p>
<dir style="text-align:right"><a href="/2016/09/08/NOIP模拟赛-2014-7-18/fly.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>fly.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">15010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">15010</span>] <span class="keyword">of</span> int;</div><div class="line">    a,k,h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,j,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=h[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> h[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> h[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            swap(h[i],h[j]);</div><div class="line">            swap(k[i],k[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'fly.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'fly.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i],h[i],k[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    fillchar(f,sizeof(f),false);</div><div class="line">    f[<span class="number">0</span>]:=true;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        fillchar(g,sizeof(g),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> j:=a[i] <span class="keyword">to</span> h[i] <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> f[j] <span class="keyword">and</span> f[j-a[i]] <span class="keyword">and</span> </div><div class="line">                (g[j-a[i]]&lt;k[i]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                f[j]:=true;</div><div class="line">                g[j]:=g[j-a[i]]+<span class="number">1</span>;</div><div class="line">                ans:=max(ans,j);            </div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一共五道题，有一道裸的二分和一个树形背包没有写。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题目&lt;/th&gt;
&lt;th&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;czy的后宫3&lt;/td&gt;
&lt;td&gt;无修改莫队/各种数据结构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;czy的后宫4&lt;/td&gt;
&lt;td&gt;坑爹dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;蒟蒻czy又被D飞了&lt;/td&gt;
&lt;td&gt;变形背包&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-czy的后宫4&quot;&gt;&lt;a href=&quot;#P1-czy的后宫4&quot; class=&quot;headerlink&quot; title=&quot;P1 czy的后宫4&quot;&gt;&lt;/a&gt;P1 czy的后宫4&lt;/h1&gt;&lt;p&gt;上次czy在机房妥善安排了他的后宫之后，他发现可以将他的妹子分为c种，他经常会考虑这样一个问题：在[l,r]的妹子中间，能挑选出多少不同类型的妹子呢？&lt;br&gt;注意：由于czy非常丧尸，所以他要求在所挑选的妹子类型在[l,r]中出现次数为正偶数，你懂得。&lt;br&gt;问题简述:n个数，m次询问，每次问[l,r]区间有多少个数恰好出现正偶数次&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="离线" scheme="https://cothrax.github.io/tags/%E7%A6%BB%E7%BA%BF/"/>
    
      <category term="莫队" scheme="https://cothrax.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 混合图</title>
    <link href="https://cothrax.github.io/2016/09/06/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E6%B7%B7%E5%90%88%E5%9B%BE/"/>
    <id>https://cothrax.github.io/2016/09/06/NOIP模拟赛-混合图/</id>
    <published>2016-09-06T15:19:03.000Z</published>
    <updated>2016-09-06T15:30:51.730Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>Hzwer神犇最近又征服了一个国家，然后接下来却也遇见了一个难题。<br>Hzwer的国家有n个点，m条边，而作为国王，他十分喜欢游览自己的国家。他一般会从任意一个点出发，随便找边走，沿途欣赏路上的美景。但是我们的Hzwer是一个奇怪的人，他不喜欢走到自己以前走过的地方，他的国家本来有p1条有向边，p2条无向边，由于国王奇怪的爱好，他觉得整改所有无向边，使得他们变成有向边，要求整改完以后保证他的国家不可能出现从某个地点出发顺着路走一圈又回来的情况。（注:m=p1+p2.）<br>概述:给你一张混合图，要求你为无向图定向，使得图上没有环。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行3个整数 n,p1,p2，分别表示点数，有向边的数量，无向边的数量。<br>第二行起输入p1行，每行2个整数 a,b 表示a到b有一条有向边。<br>接下来输入p2行,每行2个整数 a,b 表示a和b中间有一条无向边。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每条无向边，我们要求按输入顺序输出你定向的结果，也就是如果你输出a b，那表示你将a和b中间的无向边定向为a-&gt;b。<br>注意，也许存在很多可行的解。你只要输出其中任意一个就好。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 2 3<br>1 2<br>4 3<br>1 3<br>4 2<br>3 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1 3<br>4 2<br>2 3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于20%的数据 n&lt;=10 p1&lt;=10 p2&lt;=5<br>对于30%的数据 n&lt;=10 p1&lt;=30 p2&lt;=20<br>对于100%的数据 n&lt;=100000 p1&lt;=100000 p2&lt;=100000<br>数据保证至少有一种可行解。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>原有向图先拓扑，记录时间戳。<br>对于一条无向边，时间早的向时间晚的连边：</p>
<ol>
<li>如果两点在同一拓扑分量，那么这是一条后向边，不会改变dag性质</li>
<li>如果处于不同分量，由于一个分量是集中遍历的，分量x的所有点的时间戳肯定都小于分量y，那么只会从x向y连边，不会出现环。</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/06/NOIP模拟赛-混合图/dizzy.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>dizzy.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,t,ind:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    i,n,m,k,f0,t0,tim:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f0,t0:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t0;</div><div class="line">    g[m].next:=head[f0];head[f0]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">topo</span><span class="params">(v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(tim);t[v]:=tim;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> t[u]=<span class="number">0</span> <span class="keyword">then</span> topo(u);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'dizzy.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'dizzy.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0);add(f0,t0);inc(ind[t0]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    tim:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> ind[i]=<span class="number">0</span> <span class="keyword">then</span> topo(i);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0);</div><div class="line">        <span class="keyword">if</span> t[f0]&lt;t[t0] <span class="keyword">then</span> writeln(f0,<span class="string">' '</span>,t0)</div><div class="line">        <span class="keyword">else</span> writeln(t0,<span class="string">' '</span>,f0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;Hzwer神犇最近又征服了一个国家，然后接下来却也遇见了一个难题。&lt;br&gt;Hzwer的国家有n个点，m条边，而作为国王，他十分喜欢游览自己的国家。他一般会从任意一个点出发，随便找边走，沿途欣赏路上的美景。但是我们的Hzwer是一个奇怪的人，他不喜欢走到自己以前走过的地方，他的国家本来有p1条有向边，p2条无向边，由于国王奇怪的爱好，他觉得整改所有无向边，使得他们变成有向边，要求整改完以后保证他的国家不可能出现从某个地点出发顺着路走一圈又回来的情况。（注:m=p1+p2.）&lt;br&gt;概述:给你一张混合图，要求你为无向图定向，使得图上没有环。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行3个整数 n,p1,p2，分别表示点数，有向边的数量，无向边的数量。&lt;br&gt;第二行起输入p1行，每行2个整数 a,b 表示a到b有一条有向边。&lt;br&gt;接下来输入p2行,每行2个整数 a,b 表示a和b中间有一条无向边。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;对于每条无向边，我们要求按输入顺序输出你定向的结果，也就是如果你输出a b，那表示你将a和b中间的无向边定向为a-&amp;gt;b。&lt;br&gt;注意，也许存在很多可行的解。你只要输出其中任意一个就好。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="拓扑排序" scheme="https://cothrax.github.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 教主的魔法</title>
    <link href="https://cothrax.github.io/2016/09/06/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E6%95%99%E4%B8%BB%E7%9A%84%E9%AD%94%E6%B3%95/"/>
    <id>https://cothrax.github.io/2016/09/06/NOIP模拟赛-教主的魔法/</id>
    <published>2016-09-06T15:13:22.000Z</published>
    <updated>2016-09-10T13:48:32.661Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>教主最近学会了一种神奇的魔法，能够使人长高。于是他准备演示给XMYZ信息组每个英雄看。于是N个英雄们又一次聚集在了一起，这次他们排成了一列，被编号为1、2、……、N。<br>每个人的身高一开始都是不超过1000的正整数。教主的魔法每次可以把闭区间[L, R]（1≤L≤R≤N）内的英雄的身高全部加上一个整数W。（虽然L=R时并不符合区间的书写规范，但我们可以认为是单独增加第L（R）个英雄的身高）<br>CYZ、光哥和ZJQ等人不信教主的邪，于是他们有时候会问WD闭区间 [L, R] 内有多少英雄身高大于等于C，以验证教主的魔法是否真的有效。<br>WD巨懒，于是他把这个回答的任务交给了你。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p> 第1行为两个整数N、Q。Q为问题数与教主的施法数总和。<br> 第2行有N个正整数，第i个数代表第i个英雄的身高。<br> 第3到第Q+2行每行有一个操作：</p>
<ol>
<li>若第一个字母为“M”，则紧接着有三个数字L、R、W。表示对闭区间 [L, R] 内所有英雄的身高加上W。</li>
<li>若第一个字母为“A”，则紧接着有三个数字L、R、C。询问闭区间 [L, R] 内有多少英雄的身高大于等于C。</li>
</ol>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对每个“A”询问输出一行，仅含一个整数，表示闭区间 [L, R] 内身高大于等于C的英雄数。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 3<br>1 2 3 4 5<br>A 1 5 4<br>M 3 5 1<br>A 1 5 4</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2<br>3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>【输入输出样例说明】<br>原先5个英雄身高为1、2、3、4、5，此时[1, 5]间有2个英雄的身高大于等于4。教主施法后变为1、2、4、5、6，此时[1, 5]间有3个英雄的身高大于等于4。<br>【数据范围】<br>对30%的数据，N≤1000，Q≤1000。<br>对100%的数据，N≤1000000，Q≤3000，1≤W≤1000，1≤C≤1,000,000,000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先想到<strong>归并树</strong>，但由于每个节点维护数列，存在mle风险，但最重要的是<strong>它不支持修改</strong>。<br>本题是<strong>数列分块</strong>。</p>
<dir style="text-align:right"><a href="/2016/09/06/NOIP模拟赛-教主的魔法/magic0.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>magic.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,b,bl,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,q,k,i,l,r,x:int;c:char;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=b[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> b[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> b[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(b[i],b[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">sort</span><span class="params">(i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> j,l,r:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=(i-<span class="number">1</span>)*k+<span class="number">1</span>;r:=min(i*k,n);</div><div class="line">    <span class="keyword">for</span> j:=l <span class="keyword">to</span> r <span class="keyword">do</span> b[j]:=a[j];</div><div class="line">    qsort(l,r);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bin</span><span class="params">(i,x:int)</span>:</span>int; <span class="comment">//max&#123;i|b[i]&lt;x&#125;</span></div><div class="line"><span class="keyword">var</span> l,r,mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=(i-<span class="number">1</span>)*k+<span class="number">1</span>;r:=min(i*k,n);</div><div class="line">    bin:=l-<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> b[mid]+t[i]&lt;x <span class="keyword">then</span> <span class="keyword">begin</span> bin:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(l,r,x:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    query:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=l <span class="keyword">to</span> min(r,bl[l]*k) <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]+t[bl[l]]&gt;=x <span class="keyword">then</span> inc(query);</div><div class="line">    <span class="keyword">if</span> bl[l]&lt;&gt;bl[r] <span class="keyword">then</span></div><div class="line">        <span class="keyword">for</span> i:=(bl[r]-<span class="number">1</span>)*k+<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> a[i]+t[bl[r]]&gt;=x <span class="keyword">then</span> inc(query);</div><div class="line">    <span class="keyword">for</span> i:=bl[l]+<span class="number">1</span> <span class="keyword">to</span> bl[r]-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">        inc(query,min(i*k,n)-bin(i,x));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(l,r,x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=l <span class="keyword">to</span> min(r,bl[l]*k) <span class="keyword">do</span> inc(a[i],x);</div><div class="line">    sort(bl[l]);</div><div class="line">    <span class="keyword">if</span> bl[l]&lt;&gt;bl[r] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> i:=(bl[r]-<span class="number">1</span>)*k+<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span> inc(a[i],x);</div><div class="line">        sort(bl[r]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=bl[l]+<span class="number">1</span> <span class="keyword">to</span> bl[r]-<span class="number">1</span> <span class="keyword">do</span> inc(t[i],x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'magic.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'magic.out'</span>);rewrite(output);</div><div class="line">    readln(n,q);k:=floor(sqrt(n));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);readln;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> bl[i]:=(i-<span class="number">1</span>) <span class="keyword">div</span> k+<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> bl[n] <span class="keyword">do</span> sort(i);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c);readln(l,r,x);</div><div class="line">        <span class="keyword">case</span> c <span class="keyword">of</span> </div><div class="line">            <span class="string">'A'</span>:writeln(query(l,r,x));</div><div class="line">            <span class="string">'M'</span>:modify(l,r,x);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;教主最近学会了一种神奇的魔法，能够使人长高。于是他准备演示给XMYZ信息组每个英雄看。于是N个英雄们又一次聚集在了一起，这次他们排成了一列，被编号为1、2、……、N。&lt;br&gt;每个人的身高一开始都是不超过1000的正整数。教主的魔法每次可以把闭区间[L, R]（1≤L≤R≤N）内的英雄的身高全部加上一个整数W。（虽然L=R时并不符合区间的书写规范，但我们可以认为是单独增加第L（R）个英雄的身高）&lt;br&gt;CYZ、光哥和ZJQ等人不信教主的邪，于是他们有时候会问WD闭区间 [L, R] 内有多少英雄身高大于等于C，以验证教主的魔法是否真的有效。&lt;br&gt;WD巨懒，于是他把这个回答的任务交给了你。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt; 第1行为两个整数N、Q。Q为问题数与教主的施法数总和。&lt;br&gt; 第2行有N个正整数，第i个数代表第i个英雄的身高。&lt;br&gt; 第3到第Q+2行每行有一个操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若第一个字母为“M”，则紧接着有三个数字L、R、W。表示对闭区间 [L, R] 内所有英雄的身高加上W。&lt;/li&gt;
&lt;li&gt;若第一个字母为“A”，则紧接着有三个数字L、R、C。询问闭区间 [L, R] 内有多少英雄的身高大于等于C。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;对每个“A”询问输出一行，仅含一个整数，表示闭区间 [L, R] 内身高大于等于C的英雄数。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="分块" scheme="https://cothrax.github.io/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 路面修整</title>
    <link href="https://cothrax.github.io/2016/09/06/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E8%B7%AF%E9%9D%A2%E4%BF%AE%E6%95%B4/"/>
    <id>https://cothrax.github.io/2016/09/06/NOIP模拟赛-路面修整/</id>
    <published>2016-09-06T15:06:43.000Z</published>
    <updated>2016-09-06T15:31:27.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>FJ打算好好修一下农场中某条凹凸不平的土路。按奶牛们的要求，修好后的路面高度应当单调上升或单调下降，也就是说，高度上升与高度下降的路段不能同时出现在修好的路中。 整条路被分成了N段，N个整数A1, … , AN (1 &lt;= N &lt;= 2,000)依次描述了每一段路的高度(0 &lt;= Ai &lt;= 1,000,000,000)。FJ希望找到一个恰好含N个元素的不上升或不下降序列B1, … , BN，作为修过的路中每个路段的高度。由于将每一段路垫高或挖低一个单位的花费相同，修路的总支出可以表示为： |A1 - B1| + |A2 - B2| + … + |AN - BN| 请你计算一下，FJ在这项工程上的最小支出是多少。FJ向你保证，这个支出不会超过2^31-1。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行: 输入1个整数：N<br>第2..N+1行: 第i+1行为1个整数：A_i</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第1行: 输出1个正整数，表示FJ把路修成高度不上升或高度不下降的最小花费<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>7<br>1<br>3<br>2<br>4<br>5<br>3<br>9</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>FJ将第一个高度为3的路段的高度减少为2，将第二个高度为3的路段的高度增加到5，总花费为|2-3|+|5-3| = 3，并且各路段的高度为一个不下降序列 1,2,2,4,5,5,9。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><strong>离散化+DP</strong><br>首先高度的范围比较大，先离散化。<br>然后dp，例如第一种，f[i,j]表示1..i满足要求，a[i]高度为j的最小值。<br>方程简单变形后，利用单调的思想优化一下就可以了。<br>第二种情况同理</p>
<dir style="text-align:right"><a href="/2016/09/06/NOIP模拟赛-路面修整/grading.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>grading.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf:int64=<span class="number">1000000000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int64;</div><div class="line">    <span class="comment">//b[i]:a[i]离散后的值;l[i]:i对应的离散值;</span></div><div class="line">    b:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2010</span>] <span class="keyword">of</span> int; </div><div class="line">    l:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2010</span>] <span class="keyword">of</span> int64;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">2010</span>] <span class="keyword">of</span> int64;</div><div class="line">    i,i0,i1,j,n,m:int;p,ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int64)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;x:int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=a[random(e-b)+b,<span class="number">0</span>];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i,<span class="number">0</span>]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j,<span class="number">0</span>]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i,<span class="number">0</span>],a[j,<span class="number">0</span>]);</div><div class="line">            swap(a[i,<span class="number">1</span>],a[j,<span class="number">1</span>]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'grading.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'grading.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i,<span class="number">0</span>]);</div><div class="line">        a[i,<span class="number">1</span>]:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    m:=<span class="number">0</span>;l[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> a[i,<span class="number">0</span>]&gt;l[m] <span class="keyword">then</span> <span class="keyword">begin</span> inc(m);l[m]:=a[i,<span class="number">0</span>] <span class="keyword">end</span>;</div><div class="line">        b[a[i,<span class="number">1</span>]]:=m;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//f[i,j]:=min(f[i-1,k])+a[i]-b[j]</span></div><div class="line">    ans:=inf;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span> f[<span class="number">1</span>,i]:=abs(l[b[<span class="number">1</span>]]-l[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        p:=inf;i1:=i <span class="keyword">mod</span> <span class="number">2</span>;i0:=<span class="number">1</span>-i1;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            p:=min(p,f[i0,j]);</div><div class="line">            f[i1,j]:=p+abs(l[b[i]]-l[j]);</div><div class="line">            <span class="keyword">if</span> i=n <span class="keyword">then</span> ans:=min(ans,f[i1,j]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        p:=inf;i1:=i <span class="keyword">mod</span> <span class="number">2</span>;i0:=<span class="number">1</span>-i1;</div><div class="line">        <span class="keyword">for</span> j:=m <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            p:=min(p,f[i0,j]);</div><div class="line">            f[i1,j]:=p+abs(l[b[i]]-l[j]);</div><div class="line">            <span class="keyword">if</span> i=n <span class="keyword">then</span> ans:=min(ans,f[i1,j]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;FJ打算好好修一下农场中某条凹凸不平的土路。按奶牛们的要求，修好后的路面高度应当单调上升或单调下降，也就是说，高度上升与高度下降的路段不能同时出现在修好的路中。 整条路被分成了N段，N个整数A1, … , AN (1 &amp;lt;= N &amp;lt;= 2,000)依次描述了每一段路的高度(0 &amp;lt;= Ai &amp;lt;= 1,000,000,000)。FJ希望找到一个恰好含N个元素的不上升或不下降序列B1, … , BN，作为修过的路中每个路段的高度。由于将每一段路垫高或挖低一个单位的花费相同，修路的总支出可以表示为： |A1 - B1| + |A2 - B2| + … + |AN - BN| 请你计算一下，FJ在这项工程上的最小支出是多少。FJ向你保证，这个支出不会超过2^31-1。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第1行: 输入1个整数：N&lt;br&gt;第2..N+1行: 第i+1行为1个整数：A_i&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;第1行: 输出1个正整数，表示FJ把路修成高度不上升或高度不下降的最小花费&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="离散化" scheme="https://cothrax.github.io/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>[CodeVS] P1074 食物链</title>
    <link href="https://cothrax.github.io/2016/09/04/CodeVS-P1074/"/>
    <id>https://cothrax.github.io/2016/09/04/CodeVS-P1074/</id>
    <published>2016-09-04T07:55:44.000Z</published>
    <updated>2016-09-04T08:34:59.452Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>动物王国中有三类动物 A,B,C，这三类动物的食物链构成了有趣的环形。A吃B，B吃C，C吃A。<br>现有N个动物，以1－N编号。每个动物都是A,B,C中的一种，但是我们并不知道它到底是哪一种。<br>有人用两种说法对这N个动物所构成的食物链关系进行描述：</p>
<ol>
<li>第一种说法是“1 X Y”，表示X和Y是同类。</li>
<li>第二种说法是“2 X Y”，表示X吃Y。</li>
</ol>
<p>此人对N个动物，用上述两种说法，一句接一句地说出K句话，这K句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。</p>
<ol>
<li>当前的话与前面的某些真的话冲突，就是假话；</li>
<li>当前的话中X或Y比N大，就是假话；</li>
<li>当前的话表示X吃X，就是假话。</li>
</ol>
<p>你的任务是根据给定的N（1&lt;=N&lt;=50,000）和K句话（0&lt;=K&lt;=100,000），输出假话的总数。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行是两个整数N和K，以一个空格分隔。<br>以下K行每行是三个正整数D，X，Y，两数之间用一个空格隔开，其中 D 表示说法的种类。</p>
<ol>
<li>若D=1，则表示X和Y是同类。</li>
<li>若D=2，则表示X吃Y。</li>
</ol>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>只有一个整数，表示假话的数目。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>100 7<br>1 101 1<br>2 1 2<br>2 2 3<br>2 3 3<br>1 1 3<br>2 3 1<br>1 5 5</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>输入文件<br>对7句话的分析 100 7<br>1 101 1假话<br>2 1 2  真话<br>2 2 3  真话<br>2 3 3  假话<br>1 1 3  假话<br>2 3 1  真话<br>1 5 5  真话<br>NOI 2001 食物链(eat)</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="关系并查集"><a href="#关系并查集" class="headerlink" title="关系并查集"></a>关系并查集</h3><p>多年前在luogu上刷到，用了这种奇特的方法。<br>以<strong>命题</strong>作为元素做并查集，在同一集合中的命题同时成立</p>
<ol>
<li>i 表示i属于A</li>
<li>i+n 表示i属于B</li>
<li>i+2n 表示i属于C</li>
</ol>
<p>对于命题1 x y，合并：</p>
<ol>
<li>x和y</li>
<li>x+n和y+n</li>
<li>x+2n和y+2n</li>
</ol>
<p>对于命题2 x y，合并：</p>
<ol>
<li>x和y+n</li>
<li>x+n和y+2n</li>
<li>x+2n和y</li>
</ol>
<p>判断矛盾：</p>
<ol>
<li>超出范围、2 x x命题</li>
<li>第一种命题，如果same(x,y+n)或same(x+n,x)则矛盾</li>
<li>第二中命题，如果same(x,y)或same(x+n,y)则矛盾</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/04/CodeVS-P1074/p2024.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>p2024.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,k,ans,i,t,a,b:longint;</div><div class="line">    par,rank:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">150010</span>] <span class="keyword">of</span> longint;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:longint)</span>:</span>longint;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[x]:=find(par[x]);</div><div class="line">        find:=par[x];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">unite</span><span class="params">(x,y:longint)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> x=y <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> rank[x]&gt;rank[y] <span class="keyword">then</span> par[y]:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[x]:=y;</div><div class="line">        <span class="keyword">if</span> rank[x]=rank[y] <span class="keyword">then</span> inc(rank[y]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:longint)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    same:=(find(x)=find(y));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span>*n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        par[i]:=i;</div><div class="line">        rank[i]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(t,a,b);</div><div class="line">        <span class="keyword">if</span> (max(a,b)&gt;n) <span class="keyword">or</span> (min(a,b)&lt;<span class="number">1</span>) <span class="keyword">then</span> continue;</div><div class="line">        <span class="keyword">if</span> t=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> same(a,b+n) <span class="keyword">or</span> same(a,b+<span class="number">2</span>*n) <span class="keyword">then</span> continue;</div><div class="line">            unite(a,b);</div><div class="line">            unite(a+n,b+n);</div><div class="line">            unite(a+<span class="number">2</span>*n,b+<span class="number">2</span>*n);</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> same(a,b) <span class="keyword">or</span> same(a,b+<span class="number">2</span>*n) <span class="keyword">then</span> continue;</div><div class="line">            unite(a,b+n);</div><div class="line">            unite(a+n,b+<span class="number">2</span>*n);</div><div class="line">            unite(a+<span class="number">2</span>*n,b);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(ans);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(k-ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h3 id="带权并查集"><a href="#带权并查集" class="headerlink" title="带权并查集"></a>带权并查集</h3><p>今天再看这道题，发现带权并查集的方法更通用一些。<br>我们定义向量$\overrightarrow{xy}$表示动物x和动物y的关系（<strong>模3意义下</strong>）：</p>
<ol>
<li>$\overrightarrow{xy}=0$：同类</li>
<li>$\overrightarrow{xy}=1$：x吃y</li>
<li>$\overrightarrow{xy}=2$：y吃x</li>
</ol>
<p>这样定义是满足向量性质的，比如$\overrightarrow{xy}=1,\overrightarrow{yz}=1$<br>那么$\overrightarrow{xz}=\overrightarrow{xy}+\overrightarrow{yz}=2$<br>表示x吃y，y吃z，那么x被z吃<br>我们定义并查集元素的权：$d[x]=\overrightarrow{p[x]y}$，其中p[x]为x的父亲</p>
<p>路径压缩时维护权值：记r为当前子树的根，我们把x接到r上，此时的d[x]变成：<br>$d[x]=\overrightarrow{rx}=\overrightarrow{rp[x]}+\overrightarrow{p[x]x}=d[p[x]]+d[x]$<br>（此时p[x]已经递归处理过了，于是已经满足p[p[x]]=r）</p>
<p>合并时维护权值：已知$f=\overrightarrow{xy}$，把p[x]接到p[y]上：<br>$d[p[x]]=\overrightarrow{p[y]p[x]}=\overrightarrow{p[y]y}-\overrightarrow{xy}-\overrightarrow{p[x]x}=d[y]-f-d[x]$</p>
<p>并查集初始化为$p[i]=i,d[i]=0$<br>然后处理命题：</p>
<ol>
<li>如果not same(x,y)，将它们合并$union(x,y,\overrightarrow{xy})$</li>
<li>如果same(x,y)那么判断：<ol>
<li>命题1：$d[y]\not\equiv d[x]\ (mod\ 3)$则矛盾</li>
<li>命题2：由于$\overrightarrow{xy}=1=\overrightarrow{py}-\overrightarrow{px}=d[y]-d[x]$，所以$d[y]-d[x]\not\equiv 1\ (mod\ 3)$则矛盾</li>
</ol>
</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/04/CodeVS-P1074/1074.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>1074.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,k,i,a,b,c,ans:int;</div><div class="line">    par,d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> old:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> <span class="keyword">exit</span>(x)</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        old:=par[x];</div><div class="line">        par[x]:=find(par[x]);</div><div class="line">        d[x]:=(d[x]+d[old]) <span class="keyword">mod</span> <span class="number">3</span>;</div><div class="line">        find:=par[x];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y,f:int)</span>;</span></div><div class="line"><span class="keyword">var</span> px,py:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    px:=find(x);py:=find(y);</div><div class="line">    par[px]:=py;</div><div class="line">    d[px]:=(d[y]-f-d[x]+<span class="number">3</span>) <span class="keyword">mod</span> <span class="number">3</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(x)=find(y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        par[i]:=i;</div><div class="line">        d[i]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a,b,c);</div><div class="line">        <span class="keyword">if</span> (b&gt;n) <span class="keyword">or</span> (c&gt;n) <span class="keyword">then</span> inc(ans)</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a=<span class="number">2</span>) <span class="keyword">and</span> (b=c) <span class="keyword">then</span> inc(ans)</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> same(b,c) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> (a=<span class="number">1</span>) <span class="keyword">and</span> (d[b]&lt;&gt;d[c]) <span class="keyword">then</span> inc(ans);</div><div class="line">            <span class="keyword">if</span> (a=<span class="number">2</span>) <span class="keyword">and</span> ((d[c]-d[b]+<span class="number">3</span>) <span class="keyword">mod</span> <span class="number">3</span>&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> inc(ans);</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> union(b,c,a-<span class="number">1</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;动物王国中有三类动物 A,B,C，这三类动物的食物链构成了有趣的环形。A吃B，B吃C，C吃A。&lt;br&gt;现有N个动物，以1－N编号。每个动物都是A,B,C中的一种，但是我们并不知道它到底是哪一种。&lt;br&gt;有人用两种说法对这N个动物所构成的食物链关系进行描述：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一种说法是“1 X Y”，表示X和Y是同类。&lt;/li&gt;
&lt;li&gt;第二种说法是“2 X Y”，表示X吃Y。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此人对N个动物，用上述两种说法，一句接一句地说出K句话，这K句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前的话与前面的某些真的话冲突，就是假话；&lt;/li&gt;
&lt;li&gt;当前的话中X或Y比N大，就是假话；&lt;/li&gt;
&lt;li&gt;当前的话表示X吃X，就是假话。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;你的任务是根据给定的N（1&amp;lt;=N&amp;lt;=50,000）和K句话（0&amp;lt;=K&amp;lt;=100,000），输出假话的总数。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行是两个整数N和K，以一个空格分隔。&lt;br&gt;以下K行每行是三个正整数D，X，Y，两数之间用一个空格隔开，其中 D 表示说法的种类。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若D=1，则表示X和Y是同类。&lt;/li&gt;
&lt;li&gt;若D=2，则表示X吃Y。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;只有一个整数，表示假话的数目。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="并查集" scheme="https://cothrax.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="NOI" scheme="https://cothrax.github.io/tags/NOI/"/>
    
  </entry>
  
  <entry>
    <title>欢乐赛 2014-5-31</title>
    <link href="https://cothrax.github.io/2016/09/04/%E6%AC%A2%E4%B9%90%E8%B5%9B-2014-5-31/"/>
    <id>https://cothrax.github.io/2016/09/04/欢乐赛-2014-5-31/</id>
    <published>2016-09-04T03:45:17.000Z</published>
    <updated>2016-09-04T06:56:22.155Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目名称</th>
<th style="text-align:center">水灾</th>
<th style="text-align:center">某种数列问题</th>
<th style="text-align:center">密码锁</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">源文件</td>
<td style="text-align:center">sliker.cpp/c/pas</td>
<td style="text-align:center">jx.cpp/c/pas</td>
<td style="text-align:center">password.cpp/c/pas</td>
</tr>
<tr>
<td style="text-align:center">输入文件</td>
<td style="text-align:center">sliker.in</td>
<td style="text-align:center">jx.in</td>
<td style="text-align:center">password.in</td>
</tr>
<tr>
<td style="text-align:center">输出文件</td>
<td style="text-align:center">sliker.out</td>
<td style="text-align:center">jx.out</td>
<td style="text-align:center">password.out</td>
</tr>
</tbody>
</table>
<blockquote>
<p>来源：hzwer.com</p>
</blockquote>
<h1 id="P1-水灾"><a href="#P1-水灾" class="headerlink" title="P1 水灾"></a>P1 水灾</h1><p>大雨应经下了几天雨，却还是没有停的样子。土豪CCY刚从外地赚完1e元回来，知道不久除了自己别墅，其他的地方都将会被洪水淹没。<br>CCY所在的城市可以用一个N*M(N,M&lt;=50)的地图表示，地图上有五种符号：“. * X D S”。其中“X”表示石头，水和人都不能从上面经过。“.”表示平原，CCY和洪水都可以经过。“*”表示洪水开始地方（可能有多个地方开始发生洪水）。“D”表示CCY的别墅。“S”表示CCY现在的位置。<br>CCY每分钟可以向相邻位置移动，而洪水将会在CCY移动之后把相邻的没有的土地淹没（从已淹没的土地）。<br>求CCY回到别墅的最少时间。如果聪哥回不了家，就很可能会被淹死，那么他就要膜拜黄金大神涨RP来呼叫直升飞机，所以输出“ORZ hzwer!!!”。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件 sliker.in </p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出文件 sliker.out</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><p>样例1</p>
<blockquote>
<p>3 3<br>D.*<br>…<br>.S.</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>3 3<br>D.*<br>…<br>..S</p>
</blockquote>
<p>样例3</p>
<blockquote>
<p>3 6<br>D…*.<br>.X.X..<br>….S.</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>样例1</p>
<blockquote>
<p>3</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>ORZ hzwer!!!</p>
</blockquote>
<p>样例3</p>
<blockquote>
<p>6</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>比洪水到达时间早就可以走，bfs两次就可以了。<br>审题：洪水不能通过别墅D</p>
<dir style="text-align:right"><a href="/2016/09/04/欢乐赛-2014-5-31/sliker.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>sliker.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">51</span>,<span class="number">0</span>..<span class="number">51</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    dir:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=((<span class="number">0</span>,<span class="number">1</span>),(<span class="number">1</span>,<span class="number">0</span>),(<span class="number">0</span>,-<span class="number">1</span>),(-<span class="number">1</span>,<span class="number">0</span>));</div><div class="line">    inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    map:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">51</span>,<span class="number">0</span>..<span class="number">51</span>] <span class="keyword">of</span> char;</div><div class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2510</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,k,i,j,sx,sy,tx,ty:int;</div><div class="line">    f,d:arr;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">(sx,sy:int;<span class="keyword">var</span> d:arr;b:boolean)</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    h,t,i,nx,ny,x,y:int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2510</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">51</span>,<span class="number">0</span>..<span class="number">51</span>] <span class="keyword">of</span> boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(used,sizeof(used),false);</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">1</span>;</div><div class="line">    q[h,<span class="number">0</span>]:=sx;q[h,<span class="number">1</span>]:=sy;</div><div class="line">    d[sx,sy]:=<span class="number">0</span>;used[sx,sy]:=true;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        x:=q[h,<span class="number">0</span>];y:=q[h,<span class="number">1</span>];</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            nx:=q[h,<span class="number">0</span>]+dir[i,<span class="number">0</span>];ny:=q[h,<span class="number">1</span>]+dir[i,<span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span> (nx&lt;<span class="number">1</span>) <span class="keyword">or</span>(nx&gt;n) <span class="keyword">or</span> (ny&lt;<span class="number">1</span>) <span class="keyword">or</span> (ny&gt;m) <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> used[nx,ny] <span class="keyword">or</span> (map[nx,ny]=<span class="string">'X'</span>) <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> b <span class="keyword">and</span> (map[nx,ny]=<span class="string">'D'</span>) <span class="keyword">then</span> continue;</div><div class="line">            used[nx,ny]:=true;</div><div class="line">            d[nx,ny]:=min(d[nx,ny],d[x,y]+<span class="number">1</span>);</div><div class="line">            <span class="keyword">if</span> b <span class="keyword">and</span> (d[nx,ny]&gt;=f[nx,ny]) <span class="keyword">then</span> continue;</div><div class="line">            q[t,<span class="number">0</span>]:=nx;q[t,<span class="number">1</span>]:=ny;inc(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(h);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'sliker.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'sliker.out'</span>);rewrite(output);</div><div class="line">    readln(n,m);k:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(map[i,j]);</div><div class="line">            <span class="keyword">case</span> map[i,j] <span class="keyword">of</span> </div><div class="line">                <span class="string">'S'</span>:<span class="keyword">begin</span> sx:=i;sy:=j <span class="keyword">end</span>;</div><div class="line">                <span class="string">'D'</span>:<span class="keyword">begin</span> tx:=i;ty:=j <span class="keyword">end</span>;</div><div class="line">                <span class="string">'*'</span>:<span class="keyword">begin</span> inc(k);s[k,<span class="number">0</span>]:=i;s[k,<span class="number">1</span>]:=j <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">if</span> j=m <span class="keyword">then</span> readln;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> bfs(s[i,<span class="number">0</span>],s[i,<span class="number">1</span>],f,false);</div><div class="line">    filldword(d,sizeof(d) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    bfs(sx,sy,d,true);</div><div class="line">    <span class="keyword">if</span> d[tx,ty]&lt;&gt;inf <span class="keyword">then</span> <span class="keyword">write</span>(d[tx,ty])</div><div class="line">    <span class="keyword">else</span> <span class="keyword">write</span>(<span class="string">'ORZ hzwer!!!'</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-某种数列问题"><a href="#P2-某种数列问题" class="headerlink" title="P2 某种数列问题"></a>P2 某种数列问题</h1><p>众所周知，chenzeyu97有无数的妹子(阿掉！&gt;_&lt;)，而且他还有很多恶趣味的问题，继上次纠结于一排妹子的排法以后，今天他有非(chi)常(bao)认(cheng)真(zhe)去研究一个奇怪的问题。有一堆他的妹子站成一排，然后对于每个妹子有一个美丽度，当然美丽度越大越好，chenzeyu97妹子很多，但是质量上不容乐观，经常出现很多美丽度为负数的妹子(喜闻乐见)，chenzeyu97希望从一排妹子里找出3队连续的妹子，使她们的美丽度和最大。注意，一个妹子不能被编入多个队伍而且一定要拿出三队，不然czy会闲着没事做~。<br>简单滴说就是：<br>给定一个数列，从中找到3个无交集的连续子数列使其和最大。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数n，表示数列长度。<br>接下来有n行，每行一个数，第i行为第i个数。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>仅有一个数，表示最大和。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>10<br>-1<br>2<br>3<br>-4<br>0<br>1<br>-6<br>-1<br>1<br>-2</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>7</p>
</blockquote>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>【样例说明】<br>第一队妹子取2，3。<br>第二队妹子取0，1。<br>第三队妹子取1。</p>
<p>【数据范围】<br>请大家放心，虽然chenzeyu97妹子无数，但是这次他叫来的个数n是有限的。=v=<br>对于30%的数据，妹子数不大于200。<br>对于60%的数据，妹子数不大于2000。<br>对于100%的数据，妹子数1000000。<br>而且，由于chenzeyu97没有CCR那样的影响力，所以他的妹子选完的最大美丽度和不超过maxlongint。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>dp就好，f[i,j] 1..j的mz分i组的最大和，sum[i]前缀和<br><span>$f[i,j]=max\{f[i-1,k]+sum[j]-sum[k]\}$</span><!-- Has MathJax --></p>
<p>每次计算完f[i]，此时f[i,j]指的是第i段数<strong>以a[j]结尾</strong>的最大和，于是还要2..n扫一遍：<br><span>$f[i,j]=max(f[i,j],f[i,j-1])$</span><!-- Has MathJax --></p>
<p>复杂度$O(3N^2)$，尝试优化，我们变形一下：<br><span>$f[i,j]=max\{f[i-1,k]-sum[k]\}+sum[j]$</span><!-- Has MathJax --></p>
<p>然后用<strong>单调栈</strong>维护即可。<br>此外注意一下端点。</p>
<dir style="text-align:right"><a href="/2016/09/04/欢乐赛-2014-5-31/jx.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>jx.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    n,i,j,t:int;</div><div class="line">    sum,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>,<span class="number">0</span>..<span class="number">3</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">push</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> (t&gt;<span class="number">0</span>) <span class="keyword">and</span> (s[t]&lt;=x) <span class="keyword">do</span> dec(t);</div><div class="line">    inc(t);s[t]:=x;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'jx.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'jx.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    sum[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        sum[i]:=sum[i-<span class="number">1</span>]+j;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//f[i,j]=max(f[k,j-1]-sum[k])+sum[i]</span></div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        t:=<span class="number">0</span>;</div><div class="line">        push(f[i-<span class="number">1</span>,i-<span class="number">1</span>]-sum[i-<span class="number">1</span>]);</div><div class="line">        <span class="keyword">for</span> j:=i <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            f[j,i]:=s[<span class="number">1</span>]+sum[j];</div><div class="line">            push(f[j,i-<span class="number">1</span>]-sum[j]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            f[j,i]:=max(f[j,i],f[j-<span class="number">1</span>,i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(f[n,<span class="number">3</span>]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-密码锁"><a href="#P2-密码锁" class="headerlink" title="P2 密码锁"></a>P2 密码锁</h1><p>hzwer有一把密码锁，由N个开关组成。一开始的时候，所有开关都是关上的。当且仅当开关x1,x2,x3,…xk为开，其他开关为关时，密码锁才会打开。<br>他可以进行M种的操作，每种操作有一个size[i]，表示，假如他选择了第i种的操作的话，他可以任意选择连续的size[i]个格子，把它们全部取反。（注意，由于黄金大神非常的神，所以操作次数可以无限&gt;_&lt;）<br>本来这是一个无关紧要的问题，但是，黄金大神不小心他的钱丢进去了，没有的钱他哪里能逃过被chenzeyu97 NTR的命运？&gt;_&lt;  于是，他为了虐爆czy，也为了去泡更多的妹子，决定打开这把锁。但是他那么神的人根本不屑这种”水题”。于是，他找到了你。<br>你的任务很简单，求出最少需要多少步才能打开密码锁，或者如果无解的话，请输出-1。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行，三个正整数N，K，M，如题目所述。<br>第2行，K个正整数，表示开关x1,x2,x3..xk必须为开，保证x两两不同。<br>第三行，M个正整数，表示size[i]，size[]可能有重复元素。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出答案，无解输出-1。<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><p>样例1</p>
<blockquote>
<p>10 8 2<br>1 2 3 5 6 7 8 9<br>3 5</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>3 2 1<br>1 2<br>3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><p>样例1</p>
<blockquote>
<p>2</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>-1</p>
</blockquote>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>【数据规模】<br>对于50%的数据，1≤N≤20，1≤k≤5，1≤m≤3;<br>对于另外20%的数据，1≤N≤10000，1≤k≤5,1≤m≤30;<br>对于100%的数据，1≤N≤10000，1≤k≤10，1≤m≤100。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>第一眼看成反转问题，贪心想了好久没有结果。其实是<strong>差分序列+图论建模+bfs+状压DP</strong><br>先把目标序列a变成模2意义下的差分序列b。<br>差分序列b中的元素1最多2k个。题目变成了<strong>把b中的所有元素全变成0的最小操作数</strong><br>每次操作相当于把b[i]和b[size[j]+i]取反：</p>
<ol>
<li>当两个值都是0时，这个操作是多余的</li>
<li>有一个0，一个1时，相当于把1移到0所在的位置</li>
<li>两个都是1时，相当于两个元素1匹配，抵消了。</li>
</ol>
<p>所以b中的所有元素1都要<strong>两两匹配</strong>，把所有元素1作为顶点建图，边权可以用bfs计算出来（g[i,j]=把i移到j的最小操作数）。<br>然后题目就抽象为<strong>一个完全图上的最小权匹配</strong>。<br>因为<strong>顶点数2k≤20</strong>，可以状压DP解决：</p>
<span>$f[S]=min\{f[S-lowbit-j]+g[lowbit,j]\ \ |\ \ j\ \in\ S-lowbit\}$</span><!-- Has MathJax -->
<p>当然闲的蛋疼可以写带花树。</p>
<dir style="text-align:right"><a href="/2016/09/04/欢乐赛-2014-5-31/password.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>password.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span></div><div class="line">    inf=<span class="number">100000000</span>;</div><div class="line">    maxn=<span class="number">1</span> <span class="keyword">shl</span> <span class="number">20</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,k,m,i,j,sz,ans:int;</div><div class="line">    a,b:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">21</span>,<span class="number">0</span>..<span class="number">21</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..maxn+<span class="number">10</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    h,t,i,v,u:int;</div><div class="line">    q,d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    filldword(d,sizeof(d) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;d[x]:=<span class="number">0</span>;q[h]:=x;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> </div><div class="line">            <span class="keyword">for</span> j:=-<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                u:=v+s[i]*j;</div><div class="line">                <span class="keyword">if</span> (u&lt;<span class="number">1</span>) <span class="keyword">or</span> (u&gt;n) <span class="keyword">then</span> continue;</div><div class="line">                <span class="keyword">if</span> d[u]&lt;&gt;inf <span class="keyword">then</span> continue;</div><div class="line">                d[u]:=d[v]+<span class="number">1</span>;q[t]:=u;</div><div class="line">                inc(t);<span class="keyword">if</span> t&gt;<span class="number">10010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">10010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> b[i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></div><div class="line">            g[b[x],b[i]]:=d[i];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dp</span><span class="params">(s:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> x,li,i,lj,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> s=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> f[s]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(f[s]);</div><div class="line">    f[s]:=inf;</div><div class="line">    li:=s <span class="keyword">and</span> (-s);</div><div class="line">    i:=round(ln(li)/ln(<span class="number">2</span>)+<span class="number">1</span>);</div><div class="line">    x:=s-li;</div><div class="line">    <span class="keyword">while</span> x&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        lj:=x <span class="keyword">and</span> (-x);</div><div class="line">        j:=round(ln(lj)/ln(<span class="number">2</span>)+<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> g[i,j]&lt;&gt;inf <span class="keyword">then</span></div><div class="line">            f[s]:=min(f[s],dp(s-li-lj)+g[i,j]);</div><div class="line">        dec(x,lj);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">exit</span>(f[s]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'password.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'password.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);</div><div class="line">        a[j]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(s[i]);</div><div class="line">    inc(n);sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> b[i]:=a[i] xor a[i-<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> b[i]=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(sz);b[i]:=sz;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> b[i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> bfs(i);</div><div class="line">    <span class="comment">//f[S]=min&#123;f[S-lowbit-(1 shl j)]+d[lb,j]&#125;</span></div><div class="line">    fillchar(f,sizeof(f),<span class="number">255</span>);</div><div class="line">    ans:=dp(<span class="number">1</span> <span class="keyword">shl</span> sz-<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> ans=inf <span class="keyword">then</span> <span class="keyword">write</span>(-<span class="number">1</span>) <span class="keyword">else</span> <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目名称&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;水灾&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;某种数列问题&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;密码锁&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;源文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;sliker.cpp/c/pas&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;jx.cpp/c/pas&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;password.cpp/c/pas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;输入文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;sliker.in&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;jx.in&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;password.in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;输出文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;sliker.out&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;jx.out&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;password.out&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;来源：hzwer.com&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;P1-水灾&quot;&gt;&lt;a href=&quot;#P1-水灾&quot; class=&quot;headerlink&quot; title=&quot;P1 水灾&quot;&gt;&lt;/a&gt;P1 水灾&lt;/h1&gt;&lt;p&gt;大雨应经下了几天雨，却还是没有停的样子。土豪CCY刚从外地赚完1e元回来，知道不久除了自己别墅，其他的地方都将会被洪水淹没。&lt;br&gt;CCY所在的城市可以用一个N*M(N,M&amp;lt;=50)的地图表示，地图上有五种符号：“. * X D S”。其中“X”表示石头，水和人都不能从上面经过。“.”表示平原，CCY和洪水都可以经过。“*”表示洪水开始地方（可能有多个地方开始发生洪水）。“D”表示CCY的别墅。“S”表示CCY现在的位置。&lt;br&gt;CCY每分钟可以向相邻位置移动，而洪水将会在CCY移动之后把相邻的没有的土地淹没（从已淹没的土地）。&lt;br&gt;求CCY回到别墅的最少时间。如果聪哥回不了家，就很可能会被淹死，那么他就要膜拜黄金大神涨RP来呼叫直升飞机，所以输出“ORZ hzwer!!!”。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="差分序列" scheme="https://cothrax.github.io/tags/%E5%B7%AE%E5%88%86%E5%BA%8F%E5%88%97/"/>
    
      <category term="状压DP" scheme="https://cothrax.github.io/tags/%E7%8A%B6%E5%8E%8BDP/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="单调栈" scheme="https://cothrax.github.io/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-5-24</title>
    <link href="https://cothrax.github.io/2016/09/03/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-2014-5-24/"/>
    <id>https://cothrax.github.io/2016/09/03/NOIP模拟赛-2014-5-24/</id>
    <published>2016-09-03T14:32:15.000Z</published>
    <updated>2016-09-04T04:36:56.186Z</updated>
    
    <content type="html"><![CDATA[<p>三道USACO的题目</p>
<table>
<thead>
<tr>
<th style="text-align:center">题目名</th>
<th style="text-align:center">护花</th>
<th style="text-align:center">修建草坪</th>
<th style="text-align:center">虫洞</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">源文件</td>
<td style="text-align:center">flower.cpp/c/pas</td>
<td style="text-align:center">mowlawn.cpp/c/pas</td>
<td style="text-align:center">wormhole.cpp/c/pas</td>
</tr>
<tr>
<td style="text-align:center">输入文件</td>
<td style="text-align:center">flower.in</td>
<td style="text-align:center">mowlawn.in</td>
<td style="text-align:center">wormhole.in</td>
</tr>
<tr>
<td style="text-align:center">输出文件</td>
<td style="text-align:center">flower.out</td>
<td style="text-align:center">mowlawn.out</td>
<td style="text-align:center">Wormhole.out</td>
</tr>
<tr>
<td style="text-align:center">时间限制</td>
<td style="text-align:center">1000MS</td>
<td style="text-align:center">1000MS</td>
<td style="text-align:center">1000MS</td>
</tr>
<tr>
<td style="text-align:center">内存限制</td>
<td style="text-align:center">256MB</td>
<td style="text-align:center">256MB</td>
<td style="text-align:center">256MB</td>
</tr>
<tr>
<td style="text-align:center">测试点</td>
<td style="text-align:center">10</td>
<td style="text-align:center">10</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">测试点分值</td>
<td style="text-align:center">10</td>
<td style="text-align:center">10</td>
<td style="text-align:center">10</td>
</tr>
</tbody>
</table>
<h1 id="P1-护花"><a href="#P1-护花" class="headerlink" title="P1 护花"></a>P1 护花</h1><p>约翰留下他的N(N&lt;=100000)只奶牛上山采木．他离开的时候，她们像往常一样悠闲地在草场里吃草．可是，当他回来的时候，他看到了一幕惨剧：牛们正躲在他的花园里，啃食着他心爱的美丽花朵！为了使接下来花朵的损失最小，约翰赶紧采取行动，把牛们送回牛棚． 牛们从1到N编号．第i只牛所在的位置距离牛棚Ti(1≤Ti≤2000000)分钟的路程，而在约翰开始送她回牛棚之前，她每分钟会啃食Di(1≤Di≤100)朵鲜花．无论多么努力，约翰一次只能送一只牛回棚．而运送第第i只牛事实上需要2Ti分钟，因为来回都需要时间．<br>写一个程序来决定约翰运送奶牛的顺序，使最终被吞食的花朵数量最小．<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行输入N，之后N行每行输入两个整数Ti和Di</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，表示最小数量的花朵被吞食</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>6<br>3 1<br>2 5<br>2 3<br>3 2<br>4 1<br>1 6</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>86</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>约翰用6，2，3，4，1，5的顺序来运送他的奶牛 </p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>贪心：考虑牛i和j，如果满足：$$2\times d[i]\cdot t[j]&gt;2\times d[j]\cdot t[i]$$，那么先搬走牛i<br>按这个二元关系qsort就好了。</p>
<dir style="text-align:right"><a href="/2016/09/03/NOIP模拟赛-2014-5-24/flower.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>flower.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> qword; <span class="comment">//0:t;1:d</span></div><div class="line">    n,i:int;ans,sum:qword;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(i,j:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> com:=a[j,<span class="number">0</span>]*a[i,<span class="number">1</span>]&gt;a[i,<span class="number">0</span>]*a[j,<span class="number">1</span>] <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:qword)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;a[<span class="number">0</span>]:=a[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> com(i,<span class="number">0</span>) <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> com(<span class="number">0</span>,j) <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i,<span class="number">0</span>],a[j,<span class="number">0</span>]);swap(a[i,<span class="number">1</span>],a[j,<span class="number">1</span>]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'flower.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'flower.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i,<span class="number">0</span>],a[i,<span class="number">1</span>]);</div><div class="line">        a[i,<span class="number">0</span>]:=a[i,<span class="number">0</span>]*<span class="number">2</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    sum:=<span class="number">0</span>;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> sum:=sum+a[i,<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        sum:=sum-a[i,<span class="number">1</span>];</div><div class="line">        ans:=ans+sum*a[i,<span class="number">0</span>];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-修剪草坪"><a href="#P2-修剪草坪" class="headerlink" title="P2 修剪草坪"></a>P2 修剪草坪</h1><p>在一年前赢得了小镇的最佳草坪比赛后，FJ变得很懒，再也没有修剪过草坪。现在，新一轮的最佳草坪比赛又开始了，FJ希望能够再次夺冠。<br>然而，FJ的草坪非常脏乱，因此，FJ只能够让他的奶牛来完成这项工作。FJ有N<br>(1 &lt;= N &lt;= 100,000)只排成一排的奶牛，编号为1…N。每只奶牛的效率是不同的，奶牛i的效率为E_i(0 &lt;= E_i &lt;= 1,000,000,000)。<br>靠近的奶牛们很熟悉，因此，如果FJ安排超过K（1&lt;=K&lt;=N）只连续的奶牛，那么，这些奶牛就会罢工去开派对:)。<br>因此，现在FJ需要你的帮助，计算FJ可以得到的最大效率，并且该方案中没有连续的超过K只奶牛。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><ul>
<li>第一行：空格隔开的两个整数N和K</li>
<li>第二到N+1行：第i+1行有一个整数E_i</li>
</ul>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><ul>
<li>第一行：一个值，表示FJ可以得到的最大的效率值。<!--more-->
</li>
</ul>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 2<br>1<br>2<br>3<br>4<br>5</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>86</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>输入解释：<br>FJ有5只奶牛，他们的效率为1，2，3，4，5。他们希望选取效率总和最大的奶牛，但是他不能选取超过2只连续的奶牛<br>【样例输出】<br>12<br>FJ可以选择出了第三只以外的其他奶牛，总的效率为1+2+4+5=12。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p><strong>划分dp</strong>很容易想：<br>f[i]前i头牛的最大值，sum[i]前缀和<br><span>$f[i]=max\{ f[j-1]+sum[i]-sum[j] \ \ |\ \ i-j\leq m\}$</span><!-- Has MathJax --></p>
<p>注意预处理i=1..m的$f[i]=sum[i]$<br>复杂度$O(N^2)$，n有些大，我们变形：<br><span>$f[i]=max\{f[j-1]-sum[j]\}+sum[i]$</span><!-- Has MathJax --></p>
<p>这样用递减的<strong>单调队列</strong>维护值对$(i,f[i-1]-sum[i])$即可</p>
<dir style="text-align:right"><a href="/2016/09/03/NOIP模拟赛-2014-5-24/mowlawn.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>mowlawn.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,h,t:int;</div><div class="line">    a,sum,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int64;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">push</span><span class="params">(i,x:int64)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (q[t,<span class="number">1</span>]&lt;=x) <span class="keyword">do</span> dec(t);</div><div class="line">    inc(t);q[t,<span class="number">0</span>]:=i;q[t,<span class="number">1</span>]:=x;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pop</span><span class="params">(i:int64)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> (h&lt;=t) <span class="keyword">and</span> (i-q[h,<span class="number">0</span>]&gt;m) <span class="keyword">do</span> inc(h);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mowlawn.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mowlawn.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    sum[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> sum[i]:=sum[i-<span class="number">1</span>]+a[i];</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        f[i]:=sum[i];</div><div class="line">        push(i,f[i-<span class="number">1</span>]-sum[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="comment">//f[i]:=max&#123;f[j-1]-sum[j]&#125;+sum[i]</span></div><div class="line">    <span class="keyword">for</span> i:=m+<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        push(i,f[i-<span class="number">1</span>]-sum[i]);</div><div class="line">        pop(i);</div><div class="line">        f[i]:=q[h,<span class="number">1</span>]+sum[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(f[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-虫洞"><a href="#P3-虫洞" class="headerlink" title="P3 虫洞"></a>P3 虫洞</h1><p>John在他的农场中闲逛时发现了许多虫洞。虫洞可以看作一条十分奇特的有向边，并可以使你返回到过去的一个时刻（相对你进入虫洞之前）。John的每个农场有M条小路（无向边）连接着N （从1..N标号）块地，并有W个虫洞（有向边）。其中1&lt;=N&lt;=500,1&lt;=M&lt;=2500,1&lt;=W&lt;=200。 现在John想借助这些虫洞来回到过去（出发时刻之前），请你告诉他能办到吗。 John将向你提供F(1&lt;=F&lt;=5)个农场的地图。没有小路会耗费你超过10000秒的时间，当然也没有虫洞回帮你回到超过10000秒以前。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><ul>
<li>Line 1: 一个整数 F, 表示农场个数。</li>
<li>Line 1 of each farm: 三个整数 N, M, W。</li>
<li>Lines 2..M+1 of each farm: 三个数（S, E, T）。表示在标号为S的地与标号为E的地中间有一条用时T秒的小路。</li>
<li>Lines M+2..M+W+1 of each farm: 三个数（S, E, T）。表示在标号为S的地与标号为E的地中间有一条可以使John到达T秒前的虫洞。</li>
</ul>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><ul>
<li>Lines 1..F: 如果John能在这个农场实现他的目标，输出”YES”,否则输出”NO”。<!--more-->
</li>
</ul>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>3 3 1<br>1 2 2<br>1 3 4<br>2 3 1<br>3 1 3<br>3 2 1<br>1 2 3<br>2 3 4<br>3 1 8</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>NO<br>YES</p>
</blockquote>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>spfa判个负环就可以了，注意审题，小路是无向边。</p>
<dir style="text-align:right"><a href="/2016/09/03/NOIP模拟赛-2014-5-24/wormhole.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>wormhole.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">6010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">510</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,k,t,i,f0,t0,w0:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">spfa</span><span class="params">()</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    i,v,u,h,t:int;</div><div class="line">    cnt,q,d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">510</span>] <span class="keyword">of</span> int;</div><div class="line">    inq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">510</span>] <span class="keyword">of</span> boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(d,sizeof(d),<span class="number">0</span>);</div><div class="line">    filldword(cnt,sizeof(cnt) <span class="keyword">div</span> <span class="number">4</span>,<span class="number">1</span>);</div><div class="line">    fillchar(inq,sizeof(inq),true);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> q[i]:=i;</div><div class="line">    h:=<span class="number">1</span>;t:=n+<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]&gt;d[v]+g[i].w <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+g[i].w;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> inq[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    inc(cnt[u]);</div><div class="line">                    <span class="keyword">if</span> cnt[u]&gt;n <span class="keyword">then</span> <span class="keyword">exit</span>(true);</div><div class="line">                    q[t]:=u;inq[u]:=true;</div><div class="line">                    inc(t);<span class="keyword">if</span> t&gt;<span class="number">510</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">510</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">        inq[v]:=false;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    spfa:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'wormhole.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'wormhole.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">        <span class="keyword">read</span>(n,m,k);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">            add(f0,t0,w0);add(t0,f0,w0);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(f0,t0,w0);add(f0,t0,-w0);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> spfa <span class="keyword">then</span> writeln(<span class="string">'YES'</span>) <span class="keyword">else</span> writeln(<span class="string">'NO'</span>);</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">until</span> t=<span class="number">0</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;三道USACO的题目&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目名&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;护花&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;修建草坪&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;虫洞&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;源文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;flower.cpp/c/pas&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mowlawn.cpp/c/pas&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;wormhole.cpp/c/pas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;输入文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;flower.in&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mowlawn.in&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;wormhole.in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;输出文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;flower.out&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mowlawn.out&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Wormhole.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;时间限制&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1000MS&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1000MS&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1000MS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;内存限制&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;256MB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;256MB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;256MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;测试点&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;测试点分值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-护花&quot;&gt;&lt;a href=&quot;#P1-护花&quot; class=&quot;headerlink&quot; title=&quot;P1 护花&quot;&gt;&lt;/a&gt;P1 护花&lt;/h1&gt;&lt;p&gt;约翰留下他的N(N&amp;lt;=100000)只奶牛上山采木．他离开的时候，她们像往常一样悠闲地在草场里吃草．可是，当他回来的时候，他看到了一幕惨剧：牛们正躲在他的花园里，啃食着他心爱的美丽花朵！为了使接下来花朵的损失最小，约翰赶紧采取行动，把牛们送回牛棚． 牛们从1到N编号．第i只牛所在的位置距离牛棚Ti(1≤Ti≤2000000)分钟的路程，而在约翰开始送她回牛棚之前，她每分钟会啃食Di(1≤Di≤100)朵鲜花．无论多么努力，约翰一次只能送一只牛回棚．而运送第第i只牛事实上需要2Ti分钟，因为来回都需要时间．&lt;br&gt;写一个程序来决定约翰运送奶牛的顺序，使最终被吞食的花朵数量最小．&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="单调队列" scheme="https://cothrax.github.io/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="负环" scheme="https://cothrax.github.io/tags/%E8%B4%9F%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 czy的后宫</title>
    <link href="https://cothrax.github.io/2016/09/03/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-czy%E7%9A%84%E5%90%8E%E5%AE%AB/"/>
    <id>https://cothrax.github.io/2016/09/03/NOIP模拟赛-czy的后宫/</id>
    <published>2016-09-03T12:48:06.000Z</published>
    <updated>2016-09-03T12:54:31.718Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>czy要妥善安排他的后宫，他想在机房摆一群妹子，一共有n个位置排成一排，每个位置可以摆妹子也可以不摆妹子。有些类型妹子如果摆在相邻的位置（隔着一个空的位置不算相邻），就不好看了。假定每种妹子数量无限，求摆妹子的方案数。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入有m+1行，第一行有两个用空格隔开的正整数n、m，m表示妹子的种类数。接下来的m行，每行有m个字符1或0,若第i行第j列为1，则表示第i种妹子第j种妹子不能排在相邻的位置，输入保证对称。（提示：同一种妹子可能不能排在相邻位置）。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出只有一个整数，为方案数（这个数字可能很大，请输出方案数除以1000000007的余数。</p>
<a id="more"></a>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 2<br>01<br>10</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>7</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>【样例说明】<br>七种方案为(空，空)、（空，1）、（1、空）、（2、空）、（空、2）、（1,1）、（2,2）。<br>【数据范围】<br>20%的数据，1＜n≤5,0＜m≤10。<br>60%的数据，1＜n≤200,0＜m≤100。<br>100%的数据，1＜n≤1000000000，0＜m≤100。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>DP：f[i,j]第i个以j结尾的方案数<br>$f[i,j]=\sum f[i-1,k]\ \ |\ \ a[j,k]=0$<br>n有点大，递推矩阵快速幂，注意不放的情况</p>
<dir style="text-align:right"><a href="/2016/09/03/NOIP模拟赛-czy的后宫/harem.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>harem.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    mat=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>,<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> qword;</div><div class="line"><span class="keyword">const</span> z:qword=<span class="number">1000000007</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    m,i,j:int;</div><div class="line">    n:int64;ans:qword;</div><div class="line">    a:mat;c:char;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span><span class="params">(a,b:mat)</span>:</span>mat;</div><div class="line"><span class="keyword">var</span> i,j,k:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(mul,sizeof(mul),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span>    </div><div class="line">            <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">                mul[i,j]:=(mul[i,j]+a[i,k]*b[k,j]) <span class="keyword">mod</span> z;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mpow</span><span class="params">(a:mat;p:int64)</span>:</span>mat;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(mpow,sizeof(mpow),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span> mpow[i,i]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> p <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> mpow:=mul(mpow,a);</div><div class="line">        a:=mul(a,a);</div><div class="line">        p:=p <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'harem.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'harem.out'</span>);rewrite(output);</div><div class="line">    readln(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(c);</div><div class="line">            a[i,j]:=<span class="number">1</span>-ord(c)+ord(<span class="string">'0'</span>);</div><div class="line">            <span class="keyword">if</span> j=m <span class="keyword">then</span> readln;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        a[<span class="number">0</span>,i]:=<span class="number">1</span>;a[i,<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    a:=mpow(a,n);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        ans:=(ans+a[i,<span class="number">0</span>]) <span class="keyword">mod</span> z;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;czy要妥善安排他的后宫，他想在机房摆一群妹子，一共有n个位置排成一排，每个位置可以摆妹子也可以不摆妹子。有些类型妹子如果摆在相邻的位置（隔着一个空的位置不算相邻），就不好看了。假定每种妹子数量无限，求摆妹子的方案数。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;输入有m+1行，第一行有两个用空格隔开的正整数n、m，m表示妹子的种类数。接下来的m行，每行有m个字符1或0,若第i行第j列为1，则表示第i种妹子第j种妹子不能排在相邻的位置，输入保证对称。（提示：同一种妹子可能不能排在相邻位置）。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;输出只有一个整数，为方案数（这个数字可能很大，请输出方案数除以1000000007的余数。&lt;/p&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="矩阵" scheme="https://cothrax.github.io/tags/%E7%9F%A9%E9%98%B5/"/>
    
      <category term="快速幂" scheme="https://cothrax.github.io/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 mex</title>
    <link href="https://cothrax.github.io/2016/09/02/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-mex/"/>
    <id>https://cothrax.github.io/2016/09/02/NOIP模拟赛-mex/</id>
    <published>2016-09-02T15:25:01.000Z</published>
    <updated>2016-09-02T15:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><img src="/2016/09/02/NOIP模拟赛-mex/1.png" alt="描述" title="描述">
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><img src="/2016/09/02/NOIP模拟赛-mex/2.png" alt="输入" title="输入">
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><img src="/2016/09/02/NOIP模拟赛-mex/3.png" alt="输出" title="输出">
<a id="more"></a>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>7 5<br>0 2 1 0 1 3 2<br>1 3<br>2 3<br>1 4<br>3 6<br>2 7</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>0<br>3<br>2<br>4</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><img src="/2016/09/02/NOIP模拟赛-mex/4.png" alt="提示" title="提示">
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>离线+线段树<br>用线段树维护前缀的mex值，离线排序处理查询。</p>
<dir style="text-align:right"><a href="/2016/09/02/NOIP模拟赛-mex/mex.pas" title="复制代码">复制代码</a></dir>


<figure class="highlight delphi"><figcaption><span>mex.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,head,next,mex,ans:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    flag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>,<span class="number">0</span>..<span class="number">2</span>] <span class="keyword">of</span> int;</div><div class="line">    sgt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">800010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>; </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> x,i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=q[random(e-b)+b,<span class="number">0</span>];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> q[i,<span class="number">0</span>]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> q[j,<span class="number">0</span>]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(q[i,<span class="number">0</span>],q[j,<span class="number">0</span>]);</div><div class="line">            swap(q[i,<span class="number">1</span>],q[j,<span class="number">1</span>]);</div><div class="line">            swap(q[i,<span class="number">2</span>],q[j,<span class="number">2</span>]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(i,b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=e <span class="keyword">then</span> <span class="keyword">begin</span> sgt[i]:=mex[b];<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    sgt[i]:=inf;</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    build(i*<span class="number">2</span>,b,mid);</div><div class="line">    build(i*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,e);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(i,b,e:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b&lt;e <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        sgt[i*<span class="number">2</span>]:=min(sgt[i*<span class="number">2</span>],sgt[i]);</div><div class="line">        sgt[i*<span class="number">2</span>+<span class="number">1</span>]:=min(sgt[i*<span class="number">2</span>+<span class="number">1</span>],sgt[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    sgt[i]:=inf;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(i,b,e,l,r,x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (r&lt;b) <span class="keyword">or</span> (e&lt;l) <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=b) <span class="keyword">and</span> (e&lt;=r) <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">        sgt[i]:=min(sgt[i],x);</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> sgt[i]&lt;&gt;inf <span class="keyword">then</span> pushdown(i,b,e);</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    update(i*<span class="number">2</span>,b,mid,l,r,x);</div><div class="line">    update(i*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,e,l,r,x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(i,b,e,x:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=e <span class="keyword">then</span> <span class="keyword">exit</span>(sgt[i]);</div><div class="line">    <span class="keyword">if</span> sgt[i]&lt;&gt;inf <span class="keyword">then</span> pushdown(i,b,e);</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> x&lt;=mid <span class="keyword">then</span> query:=query(i*<span class="number">2</span>,b,mid,x)</div><div class="line">    <span class="keyword">else</span> query:=query(i*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,e,x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mex.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mex.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(q[i,<span class="number">0</span>],q[i,<span class="number">1</span>]);</div><div class="line">        q[i,<span class="number">2</span>]:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    j:=<span class="number">0</span>;</div><div class="line">    fillchar(flag,sizeof(flag),false);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        flag[a[i]]:=true;</div><div class="line">        <span class="keyword">while</span> flag[j] <span class="keyword">do</span> inc(j);</div><div class="line">        mex[i]:=j;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        next[i]:=head[a[i]];</div><div class="line">        head[a[i]]:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> next[i]=<span class="number">0</span> <span class="keyword">then</span> next[i]:=n+<span class="number">1</span>;</div><div class="line">    qsort(<span class="number">1</span>,m);</div><div class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">    j:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> j&lt;q[i,<span class="number">0</span>] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            update(<span class="number">1</span>,<span class="number">1</span>,n,j,next[j]-<span class="number">1</span>,a[j]);</div><div class="line">            inc(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        ans[q[i,<span class="number">2</span>]]:=query(<span class="number">1</span>,<span class="number">1</span>,n,q[i,<span class="number">1</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(ans[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;img src=&quot;/2016/09/02/NOIP模拟赛-mex/1.png&quot; alt=&quot;描述&quot; title=&quot;描述&quot;&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;img src=&quot;/2016/09/02/NOIP模拟赛-mex/2.png&quot; alt=&quot;输入&quot; title=&quot;输入&quot;&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;img src=&quot;/2016/09/02/NOIP模拟赛-mex/3.png&quot; alt=&quot;输出&quot; title=&quot;输出&quot;&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="线段树" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="离线" scheme="https://cothrax.github.io/tags/%E7%A6%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 虫洞</title>
    <link href="https://cothrax.github.io/2016/09/01/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E8%99%AB%E6%B4%9E/"/>
    <id>https://cothrax.github.io/2016/09/01/NOIP模拟赛-虫洞/</id>
    <published>2016-09-01T15:08:07.000Z</published>
    <updated>2016-09-02T04:16:01.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>N个虫洞，M条单向跃迁路径。从一个虫洞沿跃迁路径到另一个虫洞需要消耗一定量的燃料和1单位时间。虫洞有白洞和黑洞之分。设一条跃迁路径两端的虫洞质量差为delta。</p>
<ol>
<li>从白洞跃迁到黑洞，消耗的燃料值减少delta，若该条路径消耗的燃料值变为负数的话，取为0。</li>
<li>从黑洞跃迁到白洞，消耗的燃料值增加delta。</li>
<li>路径两端均为黑洞或白洞，消耗的燃料值不变化。</li>
</ol>
<p>作为压轴题，自然不会是如此简单的最短路问题，所以每过1单位时间黑洞变为白洞，白洞变为黑洞。在飞行过程中，可以选择在一个虫洞停留1个单位时间，如果当前为白洞，则不消耗燃料，否则消耗s[i]的燃料。现在请你求出从虫洞1到N最少的燃料消耗，保证一定存在1到N的路线。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行：2个正整数N,M<br>第2行：N个整数，第i个为0表示虫洞i开始时为白洞，1表示黑洞。<br>第3行：N个整数，第i个数表示虫洞i的质量w[i]。<br>第4行：N个整数，第i个数表示在虫洞i停留消耗的燃料s[i]。<br>第5..M+4行：每行3个整数，u,v,k，表示在没有影响的情况下，从虫洞u到虫洞v需要消耗燃料k。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，表示最少的燃料消耗。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 5<br>1 0 1 0<br>10 10 100 10<br>5 20 15 10<br>1 2 30<br>2 3 40<br>1 3 20<br>1 4 200<br>3 4 200</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>130</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>【数据范围】<br>对于30%的数据： 1&lt;=N&lt;=100,1&lt;=M&lt;=500<br>对于60%的数据： 1&lt;=N&lt;=1000,1&lt;=M&lt;=5000<br>对于100%的数据： 1&lt;=N&lt;=5000，1&lt;=M&lt;=30000<br>其中20%的数据为1&lt;=N&lt;=3000的链<br>1&lt;=u,v&lt;=N, 1&lt;=k,w[i],s[i]&lt;=200<br>【样例说明】<br>按照1-&gt;3-&gt;4的路线。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>拆点跑最短路</p>
<dir style="text-align:right"><a href="/2016/09/01/NOIP模拟赛-虫洞/holes0.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>holes0.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">150010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,s,w,a,q,dist:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    inq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,m,i,f0,t0,w0,d:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">spfa</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> u,v,i,h,t:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    filldword(dist,sizeof(dist) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    fillchar(inq,sizeof(inq),false);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=x;inq[x]:=true;dist[x]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> dist[v]+g[i].w&lt;dist[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                dist[u]:=dist[v]+g[i].w;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> inq[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    inq[u]:=true;q[t]:=u;</div><div class="line">                    inc(t);<span class="keyword">if</span> t&gt;<span class="number">10010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">10010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">        inq[v]:=false;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'holes.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'holes.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">    <span class="comment">//i white i+n black</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(s[i]);</div><div class="line">        add(i,i+n,<span class="number">0</span>);</div><div class="line">        add(i+n,i,s[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">        <span class="keyword">if</span> a[f0]=a[t0] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            add(f0,t0+n,w0);</div><div class="line">            add(f0+n,t0,w0);</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">            d:=abs(w[f0]-w[t0]);</div><div class="line">            add(f0,t0,max(w0-d,<span class="number">0</span>));</div><div class="line">            add(f0+n,t0+n,w0+d);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    spfa(a[<span class="number">1</span>]*n+<span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>(min(dist[n],dist[<span class="number">2</span>*n]));</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;N个虫洞，M条单向跃迁路径。从一个虫洞沿跃迁路径到另一个虫洞需要消耗一定量的燃料和1单位时间。虫洞有白洞和黑洞之分。设一条跃迁路径两端的虫洞质量差为delta。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从白洞跃迁到黑洞，消耗的燃料值减少delta，若该条路径消耗的燃料值变为负数的话，取为0。&lt;/li&gt;
&lt;li&gt;从黑洞跃迁到白洞，消耗的燃料值增加delta。&lt;/li&gt;
&lt;li&gt;路径两端均为黑洞或白洞，消耗的燃料值不变化。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;作为压轴题，自然不会是如此简单的最短路问题，所以每过1单位时间黑洞变为白洞，白洞变为黑洞。在飞行过程中，可以选择在一个虫洞停留1个单位时间，如果当前为白洞，则不消耗燃料，否则消耗s[i]的燃料。现在请你求出从虫洞1到N最少的燃料消耗，保证一定存在1到N的路线。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第1行：2个正整数N,M&lt;br&gt;第2行：N个整数，第i个为0表示虫洞i开始时为白洞，1表示黑洞。&lt;br&gt;第3行：N个整数，第i个数表示虫洞i的质量w[i]。&lt;br&gt;第4行：N个整数，第i个数表示在虫洞i停留消耗的燃料s[i]。&lt;br&gt;第5..M+4行：每行3个整数，u,v,k，表示在没有影响的情况下，从虫洞u到虫洞v需要消耗燃料k。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;一个整数，表示最少的燃料消耗。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="最短路" scheme="https://cothrax.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="拆点" scheme="https://cothrax.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-3-15</title>
    <link href="https://cothrax.github.io/2016/08/30/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-2014-3-15/"/>
    <id>https://cothrax.github.io/2016/08/30/NOIP模拟赛-2014-3-15/</id>
    <published>2016-08-30T11:59:14.000Z</published>
    <updated>2016-08-30T13:11:51.356Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>题目名</th>
<th>高级打字机</th>
<th>不等数列</th>
<th>经营与开发</th>
</tr>
</thead>
<tbody>
<tr>
<td>源文件</td>
<td>type.cpp/c/pas</td>
<td>num.cpp/c/pas</td>
<td>exploit.cpp/c/pas</td>
</tr>
<tr>
<td>输入文件</td>
<td>type.in</td>
<td>num.in</td>
<td>exploit.in</td>
</tr>
<tr>
<td>输出文件</td>
<td>type.out</td>
<td>num.out</td>
<td>exploit.out</td>
</tr>
<tr>
<td>时间限制</td>
<td>1000MS</td>
<td>1000MS</td>
<td>1000MS</td>
</tr>
<tr>
<td>内存限制</td>
<td>256MB</td>
<td>256MB</td>
<td>256MB</td>
</tr>
<tr>
<td>测试点</td>
<td>5+(5)</td>
<td>10</td>
<td>10</td>
</tr>
<tr>
<td>测试点分值</td>
<td>20</td>
<td>10</td>
<td>10</td>
</tr>
</tbody>
</table>
<blockquote>
<p>这套题来源于：<a href="http://hzwer.com/7602.html" target="_blank" rel="external">http://hzwer.com/7602.html</a></p>
</blockquote>
<h1 id="Problem-1-高级打字机"><a href="#Problem-1-高级打字机" class="headerlink" title="Problem 1 高级打字机"></a>Problem 1 高级打字机</h1><p>早苗入手了最新的高级打字机。最新款自然有着与以往不同的功能，那就是它具备撤销功能，厉害吧。<br>请为这种高级打字机设计一个程序，支持如下3种操作：</p>
<ol>
<li>T x：在文章末尾打下一个小写字母x。(type操作)</li>
<li>U x：撤销最后的x次修改操作。（Undo操作）<br>（注意Query操作并不算修改操作）</li>
<li>Q x：询问当前文章中第x个字母并输出。（Query操作）</li>
</ol>
<p>文章一开始可以视为空串。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行：一个整数n，表示操作数量。<br>以下n行，每行一个命令。保证输入的命令合法。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>每行输出一个字母，表示Query操作的答案。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>7<br>T a<br>T b<br>T c<br>Q 2<br>U 2<br>T c<br>Q 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>b<br>c</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于40%的数据 n&lt;=200;<br>对于100%的数据 n&lt;=100000；保证Undo操作不会撤销Undo操作。<br>高级挑战<br>对于200%的数据 n&lt;=100000；Undo操作可以撤销Undo操作。<br>IOI挑战<br>必须使用在线算法完成该题。</p>
<h2 id="水解"><a href="#水解" class="headerlink" title="水解"></a>水解</h2><p>对于100%的数据，直接模拟就好了</p>
<dir style="text-align:right"><a href="/2016/08/30/NOIP模拟赛-2014-3-15/type.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>type.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> char;</div><div class="line">    i,j,n,p:int;c,x:char;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'type.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'type.out'</span>);rewrite(output);</div><div class="line">    readln(n);</div><div class="line">    p:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c);<span class="keyword">read</span>(x);</div><div class="line">        <span class="keyword">case</span> c <span class="keyword">of</span> </div><div class="line">            <span class="string">'T'</span>:<span class="keyword">begin</span> inc(p);readln(a[p]) <span class="keyword">end</span>;</div><div class="line">            <span class="string">'U'</span>:<span class="keyword">begin</span> readln(j);dec(p,j) <span class="keyword">end</span>;</div><div class="line">            <span class="string">'Q'</span>:<span class="keyword">begin</span> readln(j);writeln(a[j]) <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>对于200%的数据，离线做，应用可持久化的版本树<br>对每次修改操作新建一个版本，用这些版本作为节点建树：（记本次操作为m）</p>
<ol>
<li>T c操作：m向m-1连一条边，边上标记字符c</li>
<li>U x操作：m向m-x-1连一条边，边上标记’.’表示是U操作</li>
</ol>
<p>然后开数组q记录查询操作。<br>然后从节点0开始dfs一遍就可以了。</p>
<dir style="text-align:right"><a href="/2016/08/30/NOIP模拟赛-2014-3-15/type2.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>type2.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,next:int;c:char <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,cnt,l,r:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    ans:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> char;</div><div class="line">    n,m,k,i,j,sz:int;c,x:char;s:ansistring;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int;c:char)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);</div><div class="line">    g[sz].f:=f;g[sz].t:=t;g[sz].c:=c;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=l[v] <span class="keyword">to</span> r[v] <span class="keyword">do</span> ans[i]:=s[q[i,<span class="number">1</span>]];</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> g[i].c&lt;&gt;<span class="string">'.'</span> <span class="keyword">then</span> s:=s+g[i].c;</div><div class="line">        dfs(u);</div><div class="line">        <span class="keyword">if</span> g[i].c&lt;&gt;<span class="string">'.'</span> <span class="keyword">then</span> delete(s,length(s),<span class="number">1</span>);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'type.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'type.out'</span>);rewrite(output);</div><div class="line">    readln(n);</div><div class="line">    m:=<span class="number">0</span>;sz:=<span class="number">0</span>;k:=<span class="number">0</span>;</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    fillchar(q,sizeof(q),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c);<span class="keyword">read</span>(x);</div><div class="line">        <span class="keyword">case</span> c <span class="keyword">of</span></div><div class="line">            <span class="string">'Q'</span>:<span class="keyword">begin</span> </div><div class="line">                inc(k);q[k,<span class="number">0</span>]:=m;readln(q[k,<span class="number">1</span>]) <span class="keyword">end</span>;</div><div class="line">            <span class="string">'T'</span>:<span class="keyword">begin</span> readln(x);inc(m);add(m-<span class="number">1</span>,m,x) <span class="keyword">end</span>;</div><div class="line">            <span class="string">'U'</span>:<span class="keyword">begin</span> readln(j);inc(m);add(m-j-<span class="number">1</span>,m,<span class="string">'.'</span>) <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> inc(cnt[q[i,<span class="number">0</span>]]);</div><div class="line">    r[<span class="number">0</span>]:=<span class="number">0</span>;l[<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        l[i]:=r[i-<span class="number">1</span>]+<span class="number">1</span>;</div><div class="line">        r[i]:=l[i]+cnt[i]-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs(<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> writeln(ans[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="Problem-2-不等数列"><a href="#Problem-2-不等数列" class="headerlink" title="Problem 2 不等数列"></a>Problem 2 不等数列</h1><p>将1到n任意排列，然后在排列的每两个数之间根据他们的大小关系插入“<span>$&gt;$</span><!-- Has MathJax -->”和“<span>$&lt;$</span><!-- Has MathJax -->”。问在所有排列中，有多少个排列恰好有k个“<span>$&lt;$</span><!-- Has MathJax -->”。答案对2012取模。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行2个整数n,k。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数表示答案。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 2</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>66</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据：<span>$n \leq 10$</span><!-- Has MathJax --><br>对于100%的数据：<span>$k &lt; n \leq 1000$</span><!-- Has MathJax --></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>DP就好了<br>记f[i,j]是1..i个数的所有排列中，有j个小于号的方案数。<br>考虑将数字i插入1..i-1的某个排列中，因为i比排列中的任何数都要大：</p>
<ol>
<li>插到头位置，会多一个大于号，由f[i-1,j]转移</li>
<li>插到尾位置，会多一个小于号，由f[i-1,j-1]转移</li>
<li>插到中间，一定会变成<span>$a_j&lt;i&gt;a_{j+1}$</span><!-- Has MathJax -->的形式<ol>
<li>如果原来是小于，那么会多一个大于号，由f[i-1,j]转移，共j种</li>
<li>如果原来是大于，会多一个小于号，有f[i-1,j-1]转移，共i-j-1种</li>
</ol>
</li>
</ol>
<p>合并后，方程为：$f[i,j]=f[i-1,j-1]\cdot (i-j)+f[i-1,j]\cdot (j+1)$</p>
<dir style="text-align:right"><a href="/2016/08/30/NOIP模拟赛-2014-3-15/num.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>num.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,k,i,j:int;</div><div class="line">    f:<span class="keyword">array</span>[-<span class="number">1</span>..<span class="number">1010</span>,-<span class="number">1</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'num.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'num.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> i-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">            f[i,j]:=(f[i-<span class="number">1</span>,j-<span class="number">1</span>]*(i-j)+f[i-<span class="number">1</span>,j]*(j+<span class="number">1</span>)) <span class="keyword">mod</span> <span class="number">2012</span>;</div><div class="line">    <span class="keyword">write</span>(f[n,k]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="Problem-3-经营与开发"><a href="#Problem-3-经营与开发" class="headerlink" title="Problem 3 经营与开发"></a>Problem 3 经营与开发</h1><p>4X概念体系，是指在PC战略游戏中一种相当普及和成熟的系统概念，得名自4个同样以“EX”为开头的英语单词。<br>eXplore（探索）<br>eXpand（拓张与发展）<br>eXploit（经营与开发）<br>eXterminate（征服）<br>——维基百科</p>
<p>今次我们着重考虑exploit部分，并将其模型简化：<br>你驾驶着一台带有钻头（初始能力值w）的飞船，按既定路线依次飞过n个星球。</p>
<p>星球笼统的分为2类：资源型和维修型。（p为钻头当前能力值）</p>
<ol>
<li>资源型：含矿物质量a[i]，若选择开采，则得到a[i]*p的金钱，之后钻头损耗k%，即p=p*(1-0.01k)</li>
<li>维修型：维护费用b[i]，若选择维修，则支付b[i]*p的金钱，之后钻头修复c%，即p=p*(1+0.01c)<br>注：维修后钻头的能力值可以超过初始值（你可以认为是翻修+升级）</li>
</ol>
<p>请作为舰长的你仔细抉择以最大化收入。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行4个整数n,k,c,w。<br>以下n行，每行2个整数type,x。<br>type为1则代表其为资源型星球，x为其矿物质含量a[i]；<br>type为2则代表其为维修型星球，x为其维护费用b[i]；</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个实数（保留2位小数），表示最大的收入。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 50 50 10<br>1 10<br>1 20<br>2 10<br>2 20<br>1 30</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>375.00</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据 n&lt;=100<br>另有20%的数据 n&lt;=1000；k=100<br>对于100%的数据 n&lt;=100000; 0&lt;=k,c,w,a[i],b[i]&lt;=100；保证答案不超过10^9</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>首先很容易看出DP，然后想到变形背包，但问题在于费用的范围未知而且非整数。<br>这一题应用的<strong>反向处理+贪心状态表示</strong><br>首先可以忽略w，默认起始能力值为1，最后答案乘上w就可以了。<br>记f[i]第i个点能力值为1，<strong>i..n</strong>所能得到的最大收益<br>倒过来写转移：</p>
<ol>
<li>i为资源：$f[i]=max(f[i+1],f[i+1]*(1-k\%)+a[i])$</li>
<li>i为维修：$f[i]=max(f[i+1],f[i+1]*(1+c\%)-b[i])$</li>
</ol>
<p>答案是$w\cdot f[1]$</p>
<dir style="text-align:right"><a href="/2016/08/30/NOIP模拟赛-2014-3-15/exploit.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>exploit.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,w,i:int;</div><div class="line">    k,c:double;</div><div class="line">    a,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> double;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'exploit.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'exploit.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k,c,w);</div><div class="line">    k:=(<span class="number">100</span>-k)/<span class="number">100</span>;c:=(<span class="number">100</span>+c)/<span class="number">100</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i],a[i]);</div><div class="line">    f[n+<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> t[i]=<span class="number">1</span> <span class="keyword">then</span> </div><div class="line">            f[i]:=max(f[i+<span class="number">1</span>],f[i+<span class="number">1</span>]*k+a[i])</div><div class="line">        <span class="keyword">else</span> </div><div class="line">            f[i]:=max(f[i+<span class="number">1</span>],f[i+<span class="number">1</span>]*c-a[i]);</div><div class="line">    <span class="keyword">write</span>(f[<span class="number">1</span>]*w:<span class="number">0</span>:<span class="number">2</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题目名&lt;/th&gt;
&lt;th&gt;高级打字机&lt;/th&gt;
&lt;th&gt;不等数列&lt;/th&gt;
&lt;th&gt;经营与开发&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;源文件&lt;/td&gt;
&lt;td&gt;type.cpp/c/pas&lt;/td&gt;
&lt;td&gt;num.cpp/c/pas&lt;/td&gt;
&lt;td&gt;exploit.cpp/c/pas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;输入文件&lt;/td&gt;
&lt;td&gt;type.in&lt;/td&gt;
&lt;td&gt;num.in&lt;/td&gt;
&lt;td&gt;exploit.in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;输出文件&lt;/td&gt;
&lt;td&gt;type.out&lt;/td&gt;
&lt;td&gt;num.out&lt;/td&gt;
&lt;td&gt;exploit.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;时间限制&lt;/td&gt;
&lt;td&gt;1000MS&lt;/td&gt;
&lt;td&gt;1000MS&lt;/td&gt;
&lt;td&gt;1000MS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内存限制&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;测试点&lt;/td&gt;
&lt;td&gt;5+(5)&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;测试点分值&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;这套题来源于：&lt;a href=&quot;http://hzwer.com/7602.html&quot;&gt;http://hzwer.com/7602.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Problem-1-高级打字机&quot;&gt;&lt;a href=&quot;#Problem-1-高级打字机&quot; class=&quot;headerlink&quot; title=&quot;Problem 1 高级打字机&quot;&gt;&lt;/a&gt;Problem 1 高级打字机&lt;/h1&gt;&lt;p&gt;早苗入手了最新的高级打字机。最新款自然有着与以往不同的功能，那就是它具备撤销功能，厉害吧。&lt;br&gt;请为这种高级打字机设计一个程序，支持如下3种操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;T x：在文章末尾打下一个小写字母x。(type操作)&lt;/li&gt;
&lt;li&gt;U x：撤销最后的x次修改操作。（Undo操作）&lt;br&gt;（注意Query操作并不算修改操作）&lt;/li&gt;
&lt;li&gt;Q x：询问当前文章中第x个字母并输出。（Query操作）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文章一开始可以视为空串。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="树结构" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    
      <category term="离线" scheme="https://cothrax.github.io/tags/%E7%A6%BB%E7%BA%BF/"/>
    
      <category term="可持久化" scheme="https://cothrax.github.io/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>雅礼中学2015模拟赛 Day3</title>
    <link href="https://cothrax.github.io/2016/08/30/%E9%9B%85%E7%A4%BC%E4%B8%AD%E5%AD%A62015%E6%A8%A1%E6%8B%9F%E8%B5%9B-Day3/"/>
    <id>https://cothrax.github.io/2016/08/30/雅礼中学2015模拟赛-Day3/</id>
    <published>2016-08-30T01:25:20.000Z</published>
    <updated>2016-08-30T12:39:05.617Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>题目名称</th>
<th>A</th>
<th>B</th>
<th>C</th>
</tr>
</thead>
<tbody>
<tr>
<td>源文件</td>
<td>A.c/.cpp/.pas</td>
<td>B.c/.cpp/.pas</td>
<td>C.c/.cpp/.pas</td>
</tr>
<tr>
<td>输入/输出文件名</td>
<td>A.in/.out</td>
<td>B.in/.out</td>
<td>C.in/.out</td>
</tr>
<tr>
<td>测试点数</td>
<td>10</td>
<td>10</td>
<td>10</td>
</tr>
<tr>
<td>每个测试点分值</td>
<td>10</td>
<td>10</td>
<td>10</td>
</tr>
<tr>
<td>单个测试点时限</td>
<td>1s</td>
<td>1s</td>
<td>1s</td>
</tr>
<tr>
<td>空间限制</td>
<td>128MB</td>
<td>128MB</td>
<td>128MB</td>
</tr>
</tbody>
</table>
<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>码零鼠是一只很喜欢mx数学的神犇，上面那个不是ta本人的样子。这天，ta在研究一个神奇的数列，这个数列是这样的：<br><span>$a_0=1$</span><!-- Has MathJax --><br><span>$a_n=a_i+a_j$</span><!-- Has MathJax -->（n≥1；i,j在[0,n-1]内随机）<br>Ta想知道对于给定的n，an的期望值是多少，你能告诉ta吗？<br>出于ta对整数的热爱，你只需要输出答案向下取整后的值<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一个整数T，表示数据组数<br>每组数据一行，包括一个整数n</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数<span>$E(a_n)$</span><!-- Has MathJax --></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>0<br>1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于前30%的数据T&lt;=10, n&lt;=3000<br>对于前60%的数据T&lt;=100, n&lt;=100000<br>对于100%的数据T &lt;= 10000, 0 &lt;= n &lt;= 2147483647</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>结论题，<span>$E(a_n)=n+1$</span><!-- Has MathJax -->，方便起见，下文<span>$a_n=E(a_n)$</span><!-- Has MathJax --></p>
<p>期望值定义得：<span>$a_n=\sum_{i=0}^{n-1}\sum_{j=0}^{n-1}\dfrac{a_i+a_j}{n^2}$</span><!-- Has MathJax --></p>
<p>合并同类项：<span>$a_n=\dfrac{2}{n}\sum_{i=0}^{n-1}a_i$</span><!-- Has MathJax --></p>
<p>又：<span>$a_{n-1}=\dfrac{2}{n-1}\sum_{i=0}^{n-2}a_i$</span><!-- Has MathJax --></p>
<p>变形得：<span>$\sum_{i=0}^{n-2}a_i=\dfrac{(n-1)a_{n-1}}{2}$</span><!-- Has MathJax --></p>
<p>上式带入$a_n$的式子：<span>$a_n=\dfrac{2}{n}(\dfrac{(n-1)a_{n-1}}{2}+a_{n-1})$</span><!-- Has MathJax --></p>
<p>合并变形后：<span>$\dfrac{a_n}{n+1}=\dfrac{a_{n-1}}{n}=\frac{a_0}{1}=1$</span><!-- Has MathJax --></p>
<p>所以<span>$a_n=n+1$</span><!-- Has MathJax --></p>
<p>ps:如果不会证的话，写几个找找规律吧。</p>
<dir style="text-align:right"><a href="/2016/08/30/雅礼中学2015模拟赛-Day3/A.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>A.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> t,n:qword;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'A.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'A.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">read</span>(n);</div><div class="line">        writeln(n+<span class="number">1</span>);</div><div class="line">        t:=t-<span class="number">1</span>;</div><div class="line">    <span class="keyword">until</span> t=<span class="number">0</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>泡泡鱼是一条调皮的鱼，ta的家住在一片珊瑚礁上。在ta的眼里，这些珊瑚礁的形态可以脑补成一个n个节点，m条边的带权图，在海水的腐蚀下，这些珊瑚礁形成了许多的环，ta想考考你能不能找出这些环中，权值的平均值最小的环。泡泡鱼这么聪明，ta当然知道答案，调皮的ta对你说，如果你算错了，就要吃ta下的蛋。因为ta很调皮，ta把图变成了有向图，还有可能用无环图坑你。为代表你知道，你只需告诉ta最小的平均权值即可。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>共m+1行。<br>第1行，2个整数n和m，表示珊瑚礁的点数和边数。<br>第2~m+1行，每行3个正整数u，v，w，表示u与v之间有一条权值为w的有向边。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>如果输入数据无环，输出”PaPaFish is laying egg!”。（不含引号）<br>否则输出一个浮点数ans， 表示所有环中，权值的平均值最小的环的平均权值。答案保留2位小数。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 2<br>1 2 2<br>2 1 3</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2.50</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于前40%的数据n &lt;= 50, m &lt;= 5000<br>对于100%的数据1 &lt;= n &lt;= 1000, 1 &lt;= m &lt;= 10000, 0 &lt;= w &lt;= 10000000</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>先yy了一个找环的方法：先tarjan找出强连通分量，然后dfs找环。<br>骗60分，虽然这个方法是错的，比如下面这个分量，3个环中dfs最多找到2个。<br><img src="/2016/08/30/雅礼中学2015模拟赛-Day3/g.png" alt="g.png" title=""><br>正解是<strong>二分+判负环</strong><br>二分最小平均值mid，将所有边都减去mid，如果这个值比最小的平均值大，此时图中一定有负圈，用spfa判断。<br>ps: spfa判负圈比bellman快一些，但最慢的点还是跑了很久。</p>
<dir style="text-align:right"><a href="/2016/08/30/雅礼中学2015模拟赛-Day3/B.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>B.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> eps=<span class="number">0.000000000001</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,next:int;w:double <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,f0,t0,w0:int;l,r,mid:double;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line">    d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> double;</div><div class="line">    inq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> boolean;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f0,t0:int;w0:double)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f0;g[m].t:=t0;g[m].w:=w0;</div><div class="line">    g[m].next:=head[f0];head[f0]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">spfa</span><span class="params">(x:double)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,v,u,h,t:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(d,sizeof(d),<span class="number">0</span>);</div><div class="line">    fillchar(inq,sizeof(inq),true);</div><div class="line">    filldword(cnt,sizeof(cnt) <span class="keyword">shr</span> <span class="number">1</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> q[i]:=i;</div><div class="line">    h:=<span class="number">1</span>;t:=n+<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inq[v]:=false;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">10010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]&gt;d[v]+g[i].w-x <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+g[i].w-x;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> inq[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    inq[u]:=true;q[t]:=u;</div><div class="line">                    inc(t);<span class="keyword">if</span> t&gt;<span class="number">10010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                    inc(cnt[u]);</div><div class="line">                    <span class="keyword">if</span> cnt[u]&gt;n <span class="keyword">then</span> <span class="keyword">exit</span>(true);</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    spfa:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'B.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'B.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    l:=<span class="number">0</span>;r:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0);<span class="keyword">read</span>(w0);</div><div class="line">        r:=max(r,w0);</div><div class="line">        add(f0,t0,w0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    r:=r+<span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> spfa(r) <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">        <span class="keyword">write</span>(<span class="string">'PaPaFish is laying egg!'</span>);</div><div class="line">        halt;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> r-l&gt;<span class="number">0.0001</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r)/<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span> spfa(mid) <span class="keyword">then</span> r:=mid <span class="keyword">else</span> l:=mid;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(r:<span class="number">0</span>:<span class="number">2</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><blockquote>
<p>还没写</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题目名称&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;源文件&lt;/td&gt;
&lt;td&gt;A.c/.cpp/.pas&lt;/td&gt;
&lt;td&gt;B.c/.cpp/.pas&lt;/td&gt;
&lt;td&gt;C.c/.cpp/.pas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;输入/输出文件名&lt;/td&gt;
&lt;td&gt;A.in/.out&lt;/td&gt;
&lt;td&gt;B.in/.out&lt;/td&gt;
&lt;td&gt;C.in/.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;测试点数&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每个测试点分值&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;单个测试点时限&lt;/td&gt;
&lt;td&gt;1s&lt;/td&gt;
&lt;td&gt;1s&lt;/td&gt;
&lt;td&gt;1s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;空间限制&lt;/td&gt;
&lt;td&gt;128MB&lt;/td&gt;
&lt;td&gt;128MB&lt;/td&gt;
&lt;td&gt;128MB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;A&quot;&gt;&lt;a href=&quot;#A&quot; class=&quot;headerlink&quot; title=&quot;A&quot;&gt;&lt;/a&gt;A&lt;/h1&gt;&lt;p&gt;码零鼠是一只很喜欢mx数学的神犇，上面那个不是ta本人的样子。这天，ta在研究一个神奇的数列，这个数列是这样的：&lt;br&gt;&lt;span&gt;$a_0=1$&lt;/span&gt;&lt;!-- Has MathJax --&gt;&lt;br&gt;&lt;span&gt;$a_n=a_i+a_j$&lt;/span&gt;&lt;!-- Has MathJax --&gt;（n≥1；i,j在[0,n-1]内随机）&lt;br&gt;Ta想知道对于给定的n，an的期望值是多少，你能告诉ta吗？&lt;br&gt;出于ta对整数的热爱，你只需要输出答案向下取整后的值&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="概率期望" scheme="https://cothrax.github.io/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="负环" scheme="https://cothrax.github.io/tags/%E8%B4%9F%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班 Day3 resistor</title>
    <link href="https://cothrax.github.io/2016/08/29/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day3-resistor/"/>
    <id>https://cothrax.github.io/2016/08/29/JSOI2016-提高1班-Day3-resistor/</id>
    <published>2016-08-29T14:53:54.000Z</published>
    <updated>2016-08-30T02:23:49.612Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>物理课上老师让小 w 测一个电路板的电阻,小 w 用欧姆表很快就得到了答案。但是,欧姆表巨大的误差是令小 w 无法容忍的,于是他决定用数学方法准确算出总电阻。<br>电路板一共有 N 个连接点,M 个电阻,小 w 需要算出 1 号连接点和 N 号连接点的总电阻。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>多组数据,输入直到文件结束<br>每组数据第一行两个整数 N,M<br>接下来 M 行,每行三个非负整数 X,Y,R,表示电阻连接的两接点和阻值(X 与 Y 可能相等)。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>每组数据输出一行,一个实数,四舍五入到小数点后两位。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 1<br>1 2 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1.00</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 20%的数据 N=2<br>对于另外 30%的数据 M=N-1 且任意两个连接点间的电阻不是无穷大。<br>对于 100%的数据保证 1&lt;N&lt;=100<br>数据保证不出现电阻无穷大的情况。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这是一道<strong>物理题</strong>orz，好像bzoj上有原题：2419 电阻<br>记点i的电势是$E(i)$，那么设$E(1)=1,E(n)=0$，然后用<strong>高斯消元</strong>解方程组。<br>方程组这样列：除了1和n外，所有点的<strong>流入电流=流出电流</strong>，第i个方程就是：<br>$$\sum\dfrac{E(j)-E(i)}{R(i,j)}=0$$<br>然后第一个方程改成：$E(1)=1$，第n个改成$E(n)=0$<br>这样算出所有点的电势，进而我们能求出<strong>等效电流</strong>=流入终点的电流之和：（其中k指与点n有直接连边的点）<br>$$I=\sum \frac{E(k)-0}{R(n,k)}$$<br>因为1和n的电势差是1，答案就是$|1/I|$</p>
<dir style="text-align:right"><a href="/2016/08/29/JSOI2016-提高1班-Day3-resistor/resistor.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>resistor.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> eps=<span class="number">0.0000000001</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g,g0:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>,<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> double;</div><div class="line">    tmp:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> double;</div><div class="line">    n,m,i,j,k,r,p:int;</div><div class="line">    f:double;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">inc</span><span class="params">(<span class="keyword">var</span> a:double;b:double)</span>;</span></div><div class="line"><span class="keyword">begin</span> a:=a+b <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'resistor.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'resistor.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">while</span> <span class="keyword">not</span> eof <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        readln(n,m);</div><div class="line">        fillchar(g,sizeof(g),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            readln(j,k,r);</div><div class="line">            inc(g[j,k],<span class="number">1</span>/r);inc(g[j,j],-<span class="number">1</span>/r);</div><div class="line">            inc(g[k,j],<span class="number">1</span>/r);inc(g[k,k],-<span class="number">1</span>/r);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        g0:=g;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            g[<span class="number">1</span>,i]:=<span class="number">0</span>;g[n,i]:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        g[<span class="number">1</span>,<span class="number">1</span>]:=<span class="number">1</span>;g[<span class="number">1</span>,n+<span class="number">1</span>]:=<span class="number">1</span>;</div><div class="line">        g[n,n]:=<span class="number">1</span>;g[n,n+<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            p:=i;</div><div class="line">            <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">                <span class="keyword">if</span> abs(g[j,i])&gt;abs(g[p,i]) <span class="keyword">then</span> p:=j;</div><div class="line">            tmp:=g[i];g[i]:=g[p];g[p]:=tmp;</div><div class="line">            <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> n+<span class="number">1</span> <span class="keyword">do</span> g[i,j]:=g[i,j]/g[i,i];</div><div class="line">            <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">                <span class="keyword">if</span> j&lt;&gt;i <span class="keyword">then</span></div><div class="line">                    <span class="keyword">for</span> k:=i+<span class="number">1</span> <span class="keyword">to</span> n+<span class="number">1</span> <span class="keyword">do</span> </div><div class="line">                        inc(g[j,k],-g[j,i]*g[i,k]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        f:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> abs(g0[n,i])&gt;eps <span class="keyword">then</span> inc(f,g[i,n+<span class="number">1</span>]*g0[n,i]);</div><div class="line">        writeln(round(abs(<span class="number">1</span>/f)*<span class="number">100</span>)/<span class="number">100</span>:<span class="number">0</span>:<span class="number">2</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<p>还可以设电流为1，第n点电势为0，这样求出点1的电势就是答案，好像还是基尔霍夫矩阵什么的，详见此处：<a href="http://blog.lightning34.cn/?p=237" target="_blank" rel="external">http://blog.lightning34.cn/?p=237</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;物理课上老师让小 w 测一个电路板的电阻,小 w 用欧姆表很快就得到了答案。但是,欧姆表巨大的误差是令小 w 无法容忍的,于是他决定用数学方法准确算出总电阻。&lt;br&gt;电路板一共有 N 个连接点,M 个电阻,小 w 需要算出 1 号连接点和 N 号连接点的总电阻。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;多组数据,输入直到文件结束&lt;br&gt;每组数据第一行两个整数 N,M&lt;br&gt;接下来 M 行,每行三个非负整数 X,Y,R,表示电阻连接的两接点和阻值(X 与 Y 可能相等)。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;每组数据输出一行,一个实数,四舍五入到小数点后两位。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="高斯消元" scheme="https://cothrax.github.io/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/"/>
    
      <category term="线性代数" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
      <category term="物理" scheme="https://cothrax.github.io/tags/%E7%89%A9%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班 Day3 separate</title>
    <link href="https://cothrax.github.io/2016/08/29/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day3-separate/"/>
    <id>https://cothrax.github.io/2016/08/29/JSOI2016-提高1班-Day3-separate/</id>
    <published>2016-08-29T09:41:50.000Z</published>
    <updated>2016-08-29T10:29:43.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>小 w 是扬中的高一新生。俗话说新官上任三把火,作为班长,第一件事自然是要给全班分座位。<br>这可不是一件简单的任务。大家都知道学霸是一种环境不友好型生物,所以在一个组里,学霸会对同组的学渣造成巨大伤害。<br>具体来说,我们定义一个组的不和谐度为本组的最高成绩与最低成绩差的平方。如一个组内的分数为 4 7 10 1,那么不和谐度为(10-1)^2=81。<br>现在,班主任给小 w 全班的成绩和要求分的组数,求全班所有小组的不和谐度<strong>之和</strong>的最小值。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>多组测试数据。<br>每组测试数据,第一行两个整数 N,M,N 是全班人数,M 是组数<br>第二行 N 个整数表示全班成绩。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>每组测试数据,一行一个整数 S 表示全班所有小组的不和谐度<strong>之和</strong>的最小值。<br>答案保证在 32 位有符号整型范围内。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>3 2<br>1 2 4<br>4 2<br>4 7 10 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>Case 1: 1<br>Case 2: 18</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 30%数据,M&lt;=N&lt;=10<br>对于 80%数据,M&lt;=N&lt;=100<br>对于 100%数据,M&lt;=N&lt;=5000</p>
<h2 id="水解"><a href="#水解" class="headerlink" title="水解"></a>水解</h2><p>首先，题意有点问题，“之和”二字是我后加的。<br>先qsort，很容易想到<strong>dp</strong>，记f[i,j]为1..j个人分i组的最小值<br>$f[i,j]=f[i-1,k-1]+(a[k]-a[j])^2$<br>把状态维（1..j个人）放在第二个位置确实不爽，但这是为了用<strong>滚动数组</strong>。<br>复杂度$O(MN^2)$，80分到手。</p>
<dir style="text-align:right"><a href="/2016/08/29/JSOI2016-提高1班-Day3-separate/separate.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>separate.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,k,p,c,t,t0:int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">5010</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">5010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=a[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'separate.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'separate.ans'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t0);</div><div class="line">    <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t0 <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">        qsort(<span class="number">1</span>,n);</div><div class="line">        filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">        f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;p:=<span class="number">1</span>;c:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            swap(p,c);</div><div class="line">            filldword(f[c],sizeof(f[c]) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">            <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">                <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> j <span class="keyword">do</span></div><div class="line">                    f[c,j]:=min(f[c,j],f[p,k-<span class="number">1</span>]+sqr(a[k]-a[j]));</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        writeln(<span class="string">'Case '</span>,t,<span class="string">': '</span>,f[c,n]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>斜率优化dp，详见神犇的讲解：<a href="http://www.cnblogs.com/ka200812/archive/2012/08/03/2621345.html" target="_blank" rel="external">http://www.cnblogs.com/ka200812/archive/2012/08/03/2621345.html</a></p>
<p>关于本题，我简单推一遍：<br>$$f[i,j]=f[i-1,k-1]+(a[k]-a[j])^2$$<br>设<span>$k&gt;t$</span><!-- Has MathJax -->，若从k转移更优，则：<br>$$f[i-1,k-1]+(a[k]-a[j])^2&lt;f[i-1,t-1]+(a[t]-a[j])^2$$<br>变形后：$$\dfrac{(f[i-1,k-1]+a[k]^2)-(f[i-1,t-1]+a[t]^2)}{a[k]-a[t]}&lt;2a[j]$$<br>记$$x(k)=a[k],y(k)=f[i-1,k-1]+a[k]^2$$<br>则上式变形为：$$\dfrac{y(k)-y(t)}{x(k)-x(t)}&lt;2a[j]$$<br>把k和t看成点，左边就是$kt$的斜率，记为$g(k,t)$，当$g(k,t)&lt;2a[j]$时k优于t</p>
<p>用<strong>单调队列</strong>维护：<br><strong>从头出队</strong>：满足上面的情况，t出队</p>
<p><strong>从尾出队</strong>：设<span>$k&lt;t&lt;l$</span><!-- Has MathJax -->，若<span>$g(l,t)&lt;g(t,k)$</span><!-- Has MathJax -->，那么t一定不是最优解，分类讨论：</p>
<ol>
<li>若<span>$g(t,k)&lt;2a[j]$</span><!-- Has MathJax -->，那么t不比k优</li>
<li>若<span>$g(t,k)&gt;2a[j]$</span><!-- Has MathJax -->，则<span>$g(l,t)&lt;2a[j]$</span><!-- Has MathJax -->，l比t优</li>
</ol>
<p>所以存在上述情况，t出队</p>
<p>注意点：</p>
<ol>
<li>g(k,t)和g(t,k)是不等价的（虽然算出来是一样的），因为我们默认<strong>k&gt;t</strong>，<strong>要保证x坐标递增</strong>（所以数组a要qsort，单调队列中的标号也是递增的）</li>
<li>当i&gt;j时f[i,j]是不存在的</li>
<li>注意端点，方程不能写成<span>$f[i-1,k]+(a[k+1]-a[j])^2$</span><!-- Has MathJax -->，因为有可能k=n，而又有多组数据，会wa。</li>
<li>算坐标时longint会爆</li>
<li>最好把上面推导中的小于改成<strong>小于等于</strong>，原因是什么我也不知道</li>
</ol>
<p>在ubuntu下测最后一点tle，试了一下标程也是，那开个inline吧==。</p>
<dir style="text-align:right"><a href="/2016/08/29/JSOI2016-提高1班-Day3-separate/0separate.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>separate.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&#123;$inline on&#125;</span></div><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,h,t,t0,t1,p,c:int;</div><div class="line">    a,q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">5010</span>] <span class="keyword">of</span> int;</div><div class="line">    x,y:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">5010</span>] <span class="keyword">of</span> qword;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">5010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=a[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">better</span><span class="params">(i,j,k:int)</span>:</span>boolean;<span class="keyword">inline</span>;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//i&gt;j&gt;k, g[i,j]&lt;=g[j,k]</span></div><div class="line">    better:=(y[i]-y[j])*(x[j]-x[k])&lt;=(y[j]-y[k])*(x[i]-x[j]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(i,j,k:int)</span>:</span>boolean;<span class="keyword">inline</span>;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//j&gt;k,g[j,k]&lt;=2*a[i]</span></div><div class="line">    check:=(y[j]-y[k])&lt;=<span class="number">2</span>*a[i]*(x[j]-x[k]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'separate.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'separate.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(t0);</div><div class="line">    <span class="keyword">for</span> t1:=<span class="number">1</span> <span class="keyword">to</span> t0 <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(n,m);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">        qsort(<span class="number">1</span>,n);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> f[<span class="number">1</span>,i]:=sqr(a[i]-a[<span class="number">1</span>]);</div><div class="line">        p:=<span class="number">0</span>;c:=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            p:=<span class="number">1</span>-p;c:=<span class="number">1</span>-c;</div><div class="line">            h:=<span class="number">0</span>;t:=<span class="number">0</span>;q[h]:=i-<span class="number">1</span>;</div><div class="line">            <span class="keyword">for</span> j:=i <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                x[j]:=a[j];</div><div class="line">                y[j]:=f[p,j-<span class="number">1</span>]+sqr(a[j]);</div><div class="line">                <span class="keyword">while</span> (h&lt;t) <span class="keyword">and</span> better(j,q[t],q[t-<span class="number">1</span>]) <span class="keyword">do</span> dec(t);</div><div class="line">                inc(t);q[t]:=j;</div><div class="line">                <span class="keyword">while</span> (h&lt;t) <span class="keyword">and</span> check(j,q[h+<span class="number">1</span>],q[h]) <span class="keyword">do</span> inc(h);</div><div class="line">                f[c,j]:=f[p,q[h]-<span class="number">1</span>]+sqr(a[q[h]]-a[j]);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        writeln(<span class="string">'Case '</span>,t1,<span class="string">': '</span>,f[c,n]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;小 w 是扬中的高一新生。俗话说新官上任三把火,作为班长,第一件事自然是要给全班分座位。&lt;br&gt;这可不是一件简单的任务。大家都知道学霸是一种环境不友好型生物,所以在一个组里,学霸会对同组的学渣造成巨大伤害。&lt;br&gt;具体来说,我们定义一个组的不和谐度为本组的最高成绩与最低成绩差的平方。如一个组内的分数为 4 7 10 1,那么不和谐度为(10-1)^2=81。&lt;br&gt;现在,班主任给小 w 全班的成绩和要求分的组数,求全班所有小组的不和谐度&lt;strong&gt;之和&lt;/strong&gt;的最小值。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;多组测试数据。&lt;br&gt;每组测试数据,第一行两个整数 N,M,N 是全班人数,M 是组数&lt;br&gt;第二行 N 个整数表示全班成绩。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;每组测试数据,一行一个整数 S 表示全班所有小组的不和谐度&lt;strong&gt;之和&lt;/strong&gt;的最小值。&lt;br&gt;答案保证在 32 位有符号整型范围内。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="斜率优化" scheme="https://cothrax.github.io/tags/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>雅礼中学2015模拟赛 chain</title>
    <link href="https://cothrax.github.io/2016/08/28/%E9%9B%85%E7%A4%BC%E4%B8%AD%E5%AD%A62015%E6%A8%A1%E6%8B%9F%E8%B5%9B-chain/"/>
    <id>https://cothrax.github.io/2016/08/28/雅礼中学2015模拟赛-chain/</id>
    <published>2016-08-28T13:44:36.000Z</published>
    <updated>2016-08-28T14:50:23.378Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>PCY 最近在努力地学习生物。看到食物链这一节的时候,他迷茫了。<br>生态系统中的生物种类众多,亦于生态系统分别扮演着不同的角色,但根据它们能量和物质中所引起的作用,可以被分类为生产者、消费者和分解者三个类别。最底层是“生产者”,是以阳光来行使光合作用,自行用水和二氧化碳等无机物合成有机物的绿色植物;再上层是各级“消费者”,要依赖生产者供应物质和能量;当消费者死亡以后,“分解者”会以他们的尸体为食物。<br>生物必修二曾写道,“两个营养级之间的能量传递效率为 10% ~ 20%”。<br>PCY 说,“那些错综复杂的食物网我根本看不清楚”,于是我们将问题简化,每一个物种只存在唯一一个的捕食者(形成捕食关系),给出这些捕食关系,和每个物种所拥有的能量。求出整个食物网中食物链的数量和处在最高营养级的物种的能量。(某一物种的能量 = 摄入食物的能量 * 传递效率 + 自身能量),不考虑能量损耗,为了避免精度误差,能量效率按均为整数计算。也就是说,一个物种被吃了以后他的能量就成了他的数倍了。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为 n ,代表物种数量(物种按 1 … n 编号)<br>接下来 n - 1 行,每一行三个整数 x,y,z ,代表 y 被 x 捕食,且两个物种之间能量传递的效率为<br>z(1 &lt;= x, y &lt;= n,x ≠ y)<br>接下来 n 行,每行一个整数 w ,代表 1 … n 号物种的能量</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>共两行,第一行一个整数,代表食物链的总数,第二行一个整数,代表最高营养级的物种的能量。能量对 32416190071 取模。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><p>样例1</p>
<blockquote>
<p>5<br>1 3 2<br>1 2 2<br>2 4 2<br>2 5 2<br>1 2 3 4 5</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>5<br>1 2 1<br>2 3 2<br>3 4 3<br>4 5 4<br>5 5 5 5 5</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>样例1</p>
<blockquote>
<p>3<br>47</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>1<br>170</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于前 30%的数据, n &lt;= 10<br>对于前 50%的数据, n &lt;= 10000 ,保证数据随机, w &lt;= 2 * 10 ^ 9<br>对于后 50%的数据, n &lt;= 2000000,w &lt;= 10 ^ 4,z &lt;= 10 ^ 5<br>内存限制 256M ,时间限制 1s ,必要时请手写人工栈</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这本来是一道很水的<strong>树形DP</strong><br>第一问就是叶节点的个数<br>第二问：记f[v]是节点v的能量，那么f[v]=sum(f[u]*e(v,u))+w[v]（u是v的儿子）<br>然后有了两个问题：</p>
<ol>
<li><strong>爆栈</strong>：手写一个人工栈。因为是f[v]是回溯更新得到的，我们先从根bfs得到拓扑序，然后逆着拓扑序用循环处理dp（就是从最深的叶节点向上更新，一直到根）。ps：如果是用父节点更新子节点的话，直接用bfs处理dp就好了</li>
<li>pascal党的杯具：<strong>int64的bug</strong>，好像int64的底层是用浮点数trunc出来的，对它大量取模（尤其是模数也是int64时）出现了精度误差，我们用qword替代int64来做。</li>
</ol>
<p>读入和取模的常数都很大，在ubuntu下测好像tle了，pascal没有读入优化（杯具），不过std好像也tle了</p>
<dir style="text-align:right"><a href="/2016/08/28/雅礼中学2015模拟赛-chain/chain.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>chain.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> z:qword=<span class="number">32416190071</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,i,j,f0,t0,w0,r,h,t,v,u,cnt,sz:int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,q,ind,w:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000010</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000010</span>] <span class="keyword">of</span> qword;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);</div><div class="line">    g[sz].t:=t;g[sz].w:=w;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'chain.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'chain.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,w0);</div><div class="line">        add(f0,t0,w0);inc(ind[t0]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> ind[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> r:=i;break <span class="keyword">end</span>;</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=r;cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inc(h);</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">if</span> i=<span class="number">0</span> <span class="keyword">then</span> inc(cnt);</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            q[t]:=u;inc(t);</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=t-<span class="number">1</span> <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[i];</div><div class="line">        f[v]:=w[v];</div><div class="line">        j:=head[v];</div><div class="line">        <span class="keyword">while</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[j].t;</div><div class="line">            inc(f[v],f[u]*g[j].w);</div><div class="line">            <span class="keyword">if</span> f[v]&gt;=z <span class="keyword">then</span> f[v]:=f[v] <span class="keyword">mod</span> z;</div><div class="line">            j:=g[j].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(cnt);<span class="keyword">write</span>(f[r]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;PCY 最近在努力地学习生物。看到食物链这一节的时候,他迷茫了。&lt;br&gt;生态系统中的生物种类众多,亦于生态系统分别扮演着不同的角色,但根据它们能量和物质中所引起的作用,可以被分类为生产者、消费者和分解者三个类别。最底层是“生产者”,是以阳光来行使光合作用,自行用水和二氧化碳等无机物合成有机物的绿色植物;再上层是各级“消费者”,要依赖生产者供应物质和能量;当消费者死亡以后,“分解者”会以他们的尸体为食物。&lt;br&gt;生物必修二曾写道,“两个营养级之间的能量传递效率为 10% ~ 20%”。&lt;br&gt;PCY 说,“那些错综复杂的食物网我根本看不清楚”,于是我们将问题简化,每一个物种只存在唯一一个的捕食者(形成捕食关系),给出这些捕食关系,和每个物种所拥有的能量。求出整个食物网中食物链的数量和处在最高营养级的物种的能量。(某一物种的能量 = 摄入食物的能量 * 传递效率 + 自身能量),不考虑能量损耗,为了避免精度误差,能量效率按均为整数计算。也就是说,一个物种被吃了以后他的能量就成了他的数倍了。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行为 n ,代表物种数量(物种按 1 … n 编号)&lt;br&gt;接下来 n - 1 行,每一行三个整数 x,y,z ,代表 y 被 x 捕食,且两个物种之间能量传递的效率为&lt;br&gt;z(1 &amp;lt;= x, y &amp;lt;= n,x ≠ y)&lt;br&gt;接下来 n 行,每行一个整数 w ,代表 1 … n 号物种的能量&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;共两行,第一行一个整数,代表食物链的总数,第二行一个整数,代表最高营养级的物种的能量。能量对 32416190071 取模。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="树形DP" scheme="https://cothrax.github.io/tags/%E6%A0%91%E5%BD%A2DP/"/>
    
      <category term="栈" scheme="https://cothrax.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>雅礼中学2015模拟赛 prefix</title>
    <link href="https://cothrax.github.io/2016/08/28/%E9%9B%85%E7%A4%BC%E4%B8%AD%E5%AD%A62015%E6%A8%A1%E6%8B%9F%E8%B5%9B-prefix/"/>
    <id>https://cothrax.github.io/2016/08/28/雅礼中学2015模拟赛-prefix/</id>
    <published>2016-08-28T11:50:39.000Z</published>
    <updated>2016-08-30T13:45:33.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>PCY 学生物学累了。突然看到地上有一本笔记本。<br>上面写着“ isdashagaydashisorisdashnot … ”之类的字眼,独具慧眼的他发现这些字符串中有着大<br>秘密!类似“ isdash ”这样的前缀在字符串中出现的次数不止一次!他觉得这其中一定有蹊跷,于是<br>开始一个一个数前缀出现的次数。<br>虽然他早已经从逐字符匹配转换到了多行同时匹配模式,但是这小小的练习本上几十万个字符还<br>是让他措手不及。你能帮助他吗?他想知道所有长度为偶数的前缀在整个字符串出现的次数和。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>共一行,一个字符串 s</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>共一行,输出一个整数,代表长度为偶数的前缀在整个字符串出现的次数和。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><p>样例1</p>
<blockquote>
<p>abababc</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>isdashagayisdashagaydashisnotagaydashisnotagay</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>样例1</p>
<blockquote>
<p>6</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>30</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 30%的数据, |S| &lt;= 100 ,保证数据随机<br>对于 100%的数据, |S| &lt;= 200000<br>内存限制 256M ,时间限制 1s</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>KMP+DP，KMP是一个无比神奇的算法</p>
<ol>
<li>orz D.E.Knuth</li>
<li>orz J.H.Morris</li>
<li>orz V.R.Pratt</li>
</ol>
<p>这一题应用了经典kmp中<strong>前缀匹配后缀</strong>的思想。<br>考虑kmp中的next数组，next[i]实际上是使得s[1..k]=s[i-k+1..i]的最大k。<br>于是定义f[i]：s[1..i]中，对于一个<strong>偶数</strong>前缀[1..j]，使得[1..j]=[i-j+1..i]的所有j的个数。（就是与后缀匹配的偶数前缀的数量）<br>那么：<br>f[i]=f[next[i]]+1（i为偶数）<br>f[i]=f[next[i]]（i为奇数）<br>答案是sum(f[i])</p>
<dir style="text-align:right"><a href="/2016/08/28/雅礼中学2015模拟赛-prefix/prefix.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>prefix.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    p,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    s:ansistring;</div><div class="line">    n,i,j,ans:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'prefix.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'prefix.out'</span>);rewrite(output);</div><div class="line">    readln(s);n:=length(s);</div><div class="line">    p[<span class="number">1</span>]:=<span class="number">0</span>;j:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (j&gt;<span class="number">0</span>) <span class="keyword">and</span> (s[j+<span class="number">1</span>]&lt;&gt;s[i]) <span class="keyword">do</span> j:=p[j];</div><div class="line">        <span class="keyword">if</span> s[j+<span class="number">1</span>]=s[i] <span class="keyword">then</span> inc(j);</div><div class="line">        p[i]:=j; </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> (i <span class="keyword">and</span> <span class="number">1</span>)=<span class="number">0</span> <span class="keyword">then</span> inc(f[i]);</div><div class="line">        inc(f[i],f[p[i]]);</div><div class="line">        inc(ans,f[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;PCY 学生物学累了。突然看到地上有一本笔记本。&lt;br&gt;上面写着“ isdashagaydashisorisdashnot … ”之类的字眼,独具慧眼的他发现这些字符串中有着大&lt;br&gt;秘密!类似“ isdash ”这样的前缀在字符串中出现的次数不止一次!他觉得这其中一定有蹊跷,于是&lt;br&gt;开始一个一个数前缀出现的次数。&lt;br&gt;虽然他早已经从逐字符匹配转换到了多行同时匹配模式,但是这小小的练习本上几十万个字符还&lt;br&gt;是让他措手不及。你能帮助他吗?他想知道所有长度为偶数的前缀在整个字符串出现的次数和。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;共一行,一个字符串 s&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;共一行,输出一个整数,代表长度为偶数的前缀在整个字符串出现的次数和。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="KMP" scheme="https://cothrax.github.io/tags/KMP/"/>
    
      <category term="字符串" scheme="https://cothrax.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2016] 提高1班 Day3 message</title>
    <link href="https://cothrax.github.io/2016/08/28/JSOI2016-%E6%8F%90%E9%AB%981%E7%8F%AD-Day3-message/"/>
    <id>https://cothrax.github.io/2016/08/28/JSOI2016-提高1班-Day3-message/</id>
    <published>2016-08-28T10:23:48.000Z</published>
    <updated>2016-08-29T09:42:20.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>体育老师又向班主任打小报告了。<br>悲剧的是体育老师并不记得是哪些人在体育课上捣乱，他只记得捣乱的人在队里是连续的一段，并且他知道一共有多少人捣乱以及这些人的身高比较信息。他向班主任提供了这些信息，希望能找出捣乱的人。<br>作为班主任的得力小助手，这任务自然又落到了小w的头上。<br>小w记得全班体育课的队形以及各个位置上人的身高，他要找出捣乱的是哪一段人。当然他知道可能找到不止一段人，请按从小至大的顺序输出所有可能。<br>身高比较信息：体育老师记得的是相对身高，比如他记得他告诉班主任捣乱的人身高分别是1 4 4 3 2 1，那么我们能知道第一个人比第二个人矮，第二个人和第三个人一样高等等诸如此类。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数N，K。N表示全班人数，K表示捣乱的人数。<br>第二行至第N+1行每行一个正整数表示各个人的身高。<br>第N+2行至第N+K+1行每行一个正整数表示捣乱的人的身高信息。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行一个整数T表示可能的方案数。<br>第二行至第T+1行每行一个数表示每段的起始位置。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>9 6<br>5<br>6<br>2<br>10<br>10<br>7<br>3<br>2<br>9<br>1<br>4<br>4<br>3<br>2<br>1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于20%的数据，N&lt;=1000<br>对于另外50%的数据，保证每个人的身高不超过2<br>对于100%的数据，N&lt;=100000，K&lt;=25000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先，数据范围是错的，实际上100%的K&lt;=N<br><strong>kmp+树状数组</strong><br>关于经典的kmp可以看这里：<a href="http://www.matrix67.com/blog/archives/115" target="_blank" rel="external">http://www.matrix67.com/blog/archives/115</a><br>这一题的匹配方式不是相等，而是满足相对关系，可以得到：<br>a[i..j]中小于a[j+1]的数和b[k..l]中小于b[l+1]的数个数相同，小于等于的个数也相同时，a[i..j]和b[k..l]是匹配的。<br>用树状数组维护这些值，然后注意一下端点的细节。</p>
<dir style="text-align:right"><a href="/2016/08/28/JSOI2016-提高1班-Day3-message/message.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>message.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,bit,b,p,lb,ub,opt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,k,i,j,l,cnt:int;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lowbit</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span> lowbit:=x <span class="keyword">and</span> (-x) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(x,k:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> x=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">while</span> x&lt;=<span class="number">100010</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(bit[x],k);</div><div class="line">        inc(x,lowbit(x));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    sum:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(sum,bit[x]);</div><div class="line">        dec(x,lowbit(x));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'message.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'message.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">read</span>(b[i]);</div><div class="line">    fillchar(bit,sizeof(bit),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        add(b[i],<span class="number">1</span>);</div><div class="line">        ub[i]:=sum(b[i]);</div><div class="line">        lb[i]:=sum(b[i]-<span class="number">1</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(bit,sizeof(bit),<span class="number">0</span>);</div><div class="line">    p[<span class="number">1</span>]:=<span class="number">0</span>;j:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        add(b[i],<span class="number">1</span>);</div><div class="line">        <span class="keyword">while</span> (j&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> ((lb[j+<span class="number">1</span>]&lt;&gt;sum(b[i]-<span class="number">1</span>)) <span class="keyword">or</span> </div><div class="line">            (ub[j+<span class="number">1</span>]&lt;&gt;sum(b[i]))) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">for</span> l:=i-j <span class="keyword">to</span> i-p[j]-<span class="number">1</span> <span class="keyword">do</span> add(b[l],-<span class="number">1</span>);</div><div class="line">            j:=p[j];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> (lb[j+<span class="number">1</span>]=sum(b[i]-<span class="number">1</span>)) <span class="keyword">and</span> (ub[j+<span class="number">1</span>]=sum(b[i])) <span class="keyword">then</span> inc(j);</div><div class="line">        p[i]:=j</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    fillchar(bit,sizeof(bit),<span class="number">0</span>);</div><div class="line">    j:=<span class="number">0</span>;cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        add(a[i],<span class="number">1</span>);</div><div class="line">        <span class="keyword">while</span> (j&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> ((lb[j+<span class="number">1</span>]&lt;&gt;sum(a[i]-<span class="number">1</span>)) <span class="keyword">or</span></div><div class="line">            (ub[j+<span class="number">1</span>]&lt;&gt;sum(a[i]))) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">for</span> l:=i-j <span class="keyword">to</span> i-p[j]-<span class="number">1</span> <span class="keyword">do</span> add(a[l],-<span class="number">1</span>);</div><div class="line">            j:=p[j];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">if</span> (lb[j+<span class="number">1</span>]=sum(a[i]-<span class="number">1</span>)) <span class="keyword">and</span> (ub[j+<span class="number">1</span>]=sum(a[i])) <span class="keyword">then</span> inc(j);</div><div class="line">        <span class="keyword">if</span> j=k <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(cnt);opt[cnt]:=i-j+<span class="number">1</span>;</div><div class="line">            <span class="keyword">for</span> l:=i-j+<span class="number">1</span> <span class="keyword">to</span> i-p[j] <span class="keyword">do</span> add(a[l],-<span class="number">1</span>);</div><div class="line">            j:=p[j];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(cnt);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span> writeln(opt[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;体育老师又向班主任打小报告了。&lt;br&gt;悲剧的是体育老师并不记得是哪些人在体育课上捣乱，他只记得捣乱的人在队里是连续的一段，并且他知道一共有多少人捣乱以及这些人的身高比较信息。他向班主任提供了这些信息，希望能找出捣乱的人。&lt;br&gt;作为班主任的得力小助手，这任务自然又落到了小w的头上。&lt;br&gt;小w记得全班体育课的队形以及各个位置上人的身高，他要找出捣乱的是哪一段人。当然他知道可能找到不止一段人，请按从小至大的顺序输出所有可能。&lt;br&gt;身高比较信息：体育老师记得的是相对身高，比如他记得他告诉班主任捣乱的人身高分别是1 4 4 3 2 1，那么我们能知道第一个人比第二个人矮，第二个人和第三个人一样高等等诸如此类。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行两个整数N，K。N表示全班人数，K表示捣乱的人数。&lt;br&gt;第二行至第N+1行每行一个正整数表示各个人的身高。&lt;br&gt;第N+2行至第N+K+1行每行一个正整数表示捣乱的人的身高信息。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;第一行一个整数T表示可能的方案数。&lt;br&gt;第二行至第T+1行每行一个数表示每段的起始位置。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="JSOI" scheme="https://cothrax.github.io/tags/JSOI/"/>
    
      <category term="KMP" scheme="https://cothrax.github.io/tags/KMP/"/>
    
      <category term="树状数组" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>雅礼中学2015模拟赛 motor</title>
    <link href="https://cothrax.github.io/2016/08/28/%E9%9B%85%E7%A4%BC%E4%B8%AD%E5%AD%A62015%E6%A8%A1%E6%8B%9F%E8%B5%9B-motor/"/>
    <id>https://cothrax.github.io/2016/08/28/雅礼中学2015模拟赛-motor/</id>
    <published>2016-08-28T03:45:25.000Z</published>
    <updated>2016-08-30T05:09:13.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>在你的强力援助下,PCY 成功完成了之前的所有任务,他觉得,现在正是出去浪的大好时光。于是,他来到高速公路上,找到一辆摩的前往几千公里以外他心仪的那家黄焖鸡米饭。由于 PCY 的品味异于常人,途经几百个城市的黄焖鸡米饭他都不屑一顾,他只愿意前往他心中最好的那家,但是为了一碗二十块钱的黄焖鸡米饭,他不愿意花上几千块的路费,他希望路费尽量少。高速路上的警察叔叔被他的行为所打动,于是在多方协调下,最多 K 条城市之间的高速收费站愿意免费为 PCY 放行(可以任意选择)。<br>显然,PCY 已经筋疲力尽,不想再动用自己的数学天才来计算他可以花费的最小路费,因此他希望你可以帮他最后一次,他说他可以请你吃大碗的黄焖鸡米饭,还可以加一瓶豆奶。<br>现在给你 N 个城市(编号为 0 … N - 1 ), M 条道路,和每条高速公路的花费 Wi ,以及题目所描述的 K。PCY 想从城市 S 到城市 T, 因为他对 T 城市的黄焖鸡米饭情有独钟。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行,三个整数 N,M,K ,如题意所描述<br>第二行,两个整数 S,T ,代表出发城市和目标城市编号<br>接下来 M 行,每行三个整数 X,Y,W ,代表 X 和 Y 城市之间的高速公路收费为 W 元</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>共一行,输出一个整数,代表 PCY 最少需要花费的路费。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><p>样例1</p>
<blockquote>
<p>3 3 1<br>1 3<br>0 1 50<br>1 2 30<br>1 3 50 </p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>5 6 1<br>0 4<br>2 3 5<br>0 1 15<br>1 2 5<br>3 4 5<br>2 3 3<br>0 2 1005</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>样例1</p>
<blockquote>
<p>8</p>
</blockquote>
<p>样例2</p>
<blockquote>
<p>0</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 10%的数据, N &lt;= 100,K = 0<br>对于 30%的数据, N &lt;= 5,M &lt;= 10,K &lt;= 2<br>对于 100%的数据, N &lt;= 10000,M &lt;= 50000,K &lt;= 10,Wi &lt;= 10000<br>内存限制 256M ,时间限制 1s</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><strong>分层图</strong>入门题，考虑到k很小，我们把图复制k层，层i实际含义是有i条公路免费放行后的状态，在每层之间连边：<br>若原图中有边e(u,v)=w，那在在层i-1和层i间连边：e(g[i-1,u],g[i,v])=0，这样只能从上一层走到下一层。<br>这样，答案就是dist[g[0,s],g[k,t]]<br>注意题目是<strong>无向图</strong>，以及spfa会tle，用<strong>heap+dijkstra</strong></p>
<dir style="text-align:right"><a href="/2016/08/28/雅礼中学2015模拟赛-motor/motor2.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>motor2.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,w,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2500010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,k,s0,t0,f,t,w,i,j,sz:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,w:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);m:=sz;</div><div class="line">    g[m].t:=t;g[m].w:=w;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dijkstra</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    l:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110010</span>] <span class="keyword">of</span> int;</div><div class="line">    i,v,u,sz:int;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(i,j:int)</span>;</span></div><div class="line">    <span class="keyword">var</span> tmp:int;</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        l[h[i,<span class="number">0</span>]]:=j;l[h[j,<span class="number">0</span>]]:=i;</div><div class="line">        tmp:=h[i,<span class="number">0</span>];h[i,<span class="number">0</span>]:=h[j,<span class="number">0</span>];h[j,<span class="number">0</span>]:=tmp;</div><div class="line">        tmp:=h[i,<span class="number">1</span>];h[i,<span class="number">1</span>]:=h[j,<span class="number">1</span>];h[j,<span class="number">1</span>]:=tmp;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">heapify</span><span class="params">(i:int)</span>;</span></div><div class="line">    <span class="keyword">var</span> l,r,s:int;</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        l:=i*<span class="number">2</span>;r:=l+<span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (l&lt;=sz) <span class="keyword">and</span> (h[l,<span class="number">1</span>]&lt;h[i,<span class="number">1</span>]) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=i;</div><div class="line">        <span class="keyword">if</span> (r&lt;=sz) <span class="keyword">and</span> (h[r,<span class="number">1</span>]&lt;h[s,<span class="number">1</span>]) <span class="keyword">then</span> s:=r;</div><div class="line">        <span class="keyword">if</span> i&lt;&gt;s <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(i,s);</div><div class="line">            heapify(s);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">extract</span><span class="params">()</span>;</span></div><div class="line">    <span class="keyword">begin</span></div><div class="line">        swap(<span class="number">1</span>,sz);</div><div class="line">        dec(sz);</div><div class="line">        heapify(<span class="number">1</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">reduceto</span><span class="params">(i,k:int)</span>;</span></div><div class="line">    <span class="keyword">begin</span></div><div class="line">        h[i,<span class="number">1</span>]:=k;</div><div class="line">        <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> (h[i,<span class="number">1</span>]&lt;h[i <span class="keyword">div</span> <span class="number">2</span>,<span class="number">1</span>]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            swap(i,i <span class="keyword">div</span> <span class="number">2</span>);</div><div class="line">            i:=i <span class="keyword">div</span> <span class="number">2</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x,k:int)</span>;</span></div><div class="line">    <span class="keyword">begin</span></div><div class="line">        inc(sz);</div><div class="line">        h[sz,<span class="number">0</span>]:=x;h[sz,<span class="number">1</span>]:=inf;l[x]:=sz;</div><div class="line">        reduceto(sz,k);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> (k+<span class="number">1</span>)*n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> i=x <span class="keyword">then</span> insert(i,<span class="number">0</span>) <span class="keyword">else</span> insert(i,inf);</div><div class="line">    <span class="keyword">while</span> sz&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=h[<span class="number">1</span>,<span class="number">0</span>];d[v]:=h[<span class="number">1</span>,<span class="number">1</span>];extract;</div><div class="line">        i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> (l[u]&lt;=sz) <span class="keyword">and</span> (h[l[u],<span class="number">1</span>]&gt;g[i].w+d[v]) <span class="keyword">then</span></div><div class="line">                reduceto(l[u],g[i].w+d[v]);</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'motor.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'motor.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,k,s0,t0);sz:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t,w);</div><div class="line">        add(f,t,w);add(t,f,w);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            add(f+j*n,t+j*n,w);</div><div class="line">            add(t+j*n,f+j*n,w);</div><div class="line">            add(f+(j-<span class="number">1</span>)*n,t+j*n,<span class="number">0</span>);</div><div class="line">            add(t+(j-<span class="number">1</span>)*n,f+j*n,<span class="number">0</span>);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dijkstra(s0);</div><div class="line">    <span class="keyword">write</span>(d[t0+k*n]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;在你的强力援助下,PCY 成功完成了之前的所有任务,他觉得,现在正是出去浪的大好时光。于是,他来到高速公路上,找到一辆摩的前往几千公里以外他心仪的那家黄焖鸡米饭。由于 PCY 的品味异于常人,途经几百个城市的黄焖鸡米饭他都不屑一顾,他只愿意前往他心中最好的那家,但是为了一碗二十块钱的黄焖鸡米饭,他不愿意花上几千块的路费,他希望路费尽量少。高速路上的警察叔叔被他的行为所打动,于是在多方协调下,最多 K 条城市之间的高速收费站愿意免费为 PCY 放行(可以任意选择)。&lt;br&gt;显然,PCY 已经筋疲力尽,不想再动用自己的数学天才来计算他可以花费的最小路费,因此他希望你可以帮他最后一次,他说他可以请你吃大碗的黄焖鸡米饭,还可以加一瓶豆奶。&lt;br&gt;现在给你 N 个城市(编号为 0 … N - 1 ), M 条道路,和每条高速公路的花费 Wi ,以及题目所描述的 K。PCY 想从城市 S 到城市 T, 因为他对 T 城市的黄焖鸡米饭情有独钟。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行,三个整数 N,M,K ,如题意所描述&lt;br&gt;第二行,两个整数 S,T ,代表出发城市和目标城市编号&lt;br&gt;接下来 M 行,每行三个整数 X,Y,W ,代表 X 和 Y 城市之间的高速公路收费为 W 元&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;共一行,输出一个整数,代表 PCY 最少需要花费的路费。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="堆" scheme="https://cothrax.github.io/tags/%E5%A0%86/"/>
    
      <category term="最短路" scheme="https://cothrax.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="分层图" scheme="https://cothrax.github.io/tags/%E5%88%86%E5%B1%82%E5%9B%BE/"/>
    
  </entry>
  
</feed>
