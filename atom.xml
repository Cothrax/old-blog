<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cothrax</title>
  <subtitle>I don&#39;t need a subtitle.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cothrax.github.io/"/>
  <updated>2016-09-24T12:46:36.058Z</updated>
  <id>https://cothrax.github.io/</id>
  
  <author>
    <name>Cothrax</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NOIP模拟赛 2014-10-23</title>
    <link href="https://cothrax.github.io/2016/09/24/noip-2014-10-23/"/>
    <id>https://cothrax.github.io/2016/09/24/noip-2014-10-23/</id>
    <published>2016-09-24T12:27:30.000Z</published>
    <updated>2016-09-24T12:46:36.058Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">pour</td>
<td style="text-align:center">扩展欧几里得</td>
</tr>
<tr>
<td style="text-align:center">stol</td>
<td style="text-align:center">网格dp</td>
</tr>
<tr>
<td style="text-align:center">?</td>
<td style="text-align:center">?</td>
</tr>
</tbody>
</table>
<h1 id="P1-Jams倒酒"><a href="#P1-Jams倒酒" class="headerlink" title="P1 Jams倒酒"></a>P1 Jams倒酒</h1><p>Jams是一家酒吧的老板，他的酒吧提供2种体积的啤酒，a ml 和 b ml，分别使用容积为a ml 和 b ml的酒杯来装载。<br>酒吧的生意并不好。Jams发现酒鬼们都很穷，不像他那么土豪。有时，他们会因为负担不起a ml 或者 b ml酒的消费，而不得不离去。因此，Jams决定出手第三种体积的啤酒(较小体积的啤酒)。<br>Jams只有两种杯子，容积分别为 a ml 和 b ml，而且啤酒杯是没有刻度的。他只能通过两种杯子和酒桶间的互相倾倒来得到新的体积的酒。<br>倒酒步骤为:<br>(1) 规定a&gt;=b<br>(2) 酒桶容积无限，酒桶中酒体积无限大。<br>(3) 只能包含三种可能的倒酒操作：<br>1、 将酒桶中的酒倒入容积为b ml的酒杯中；<br>2、 将容积为a ml的酒杯中的酒倒入酒桶；<br>3、 将容积为b ml的酒杯中的酒倒入容积为 a ml的酒杯中。<br>(4) 每次倒酒必须把杯子倒满或者把被倾倒的杯子倒空。<br>Jams希望通过若干次倾倒得到容积为 a ml酒杯中剩下的就体积尽可能小，他请求你帮助他设计倾倒方案。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>两个整数a,b(0&lt;b&lt;=a&lt;=10^9)</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行一个整数，表示可以得到的最小体积的酒。<br>第二行两个整数Pa和Pb（中间用一个空格分开），分别表示从体积为a ml的酒杯中到处酒的次数和将酒倒入体积为b ml的酒杯的次数。<br>若有多种可能的Pa，Pb满足要求，那么请输出Pa最小的。若Pa最小的时候有多个Pb，那么输出Pb最小的。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>1 2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>倾倒方案为：<br>1、 桶-&gt;B；<br>2、 B-&gt;A；<br>3、 桶-&gt;B;<br>4、 B-&gt;A;<br>5、 A-&gt;桶；<br>6、 B-&gt;A;</p>
<p>对于20%的数据，pa,pb总和不超过5<br>对于60%的数据，pa&lt;=10^8<br>对于100%的数据，0&lt;b&lt;=a&lt;=10^9</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>记向b倒入y次，从a倒出x次，那么最后a剩余的酒体积为$w=by-ax$<br>要最小化w，由数论显然w最小是$gcd(a,b)$，于是题目变成了解方程$by-ax=gcd(a,b)$<br>令x=-x，上扩展欧几里得即可，最后答案是-x,y<br>至于最优解的调整，已知一组解(x,y)<br>那么任意一组解为$x_t=x+b\cdot t,y_t=y-a\cdot t$<br>答案调整到最大非负整数x</p>
<div><br><div class="copy"><br>    <a href="/2016/09/24/noip-2014-10-23/pour.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>pour.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> a,b,x,y,g:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> gcd:=a <span class="keyword">else</span> gcd:=gcd(b,a <span class="keyword">mod</span> b);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extgcd</span><span class="params">(a,b:int;<span class="keyword">var</span> x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        x:=<span class="number">1</span>;y:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        extgcd(b,a <span class="keyword">mod</span> b,y,x);</div><div class="line">        dec(y,(a <span class="keyword">div</span> b)*x);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'pour.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'pour.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(a,b);</div><div class="line">    g:=gcd(a,b);</div><div class="line">    writeln(g,<span class="string">' '</span>);</div><div class="line">    a:=a <span class="keyword">div</span> g;b:=b <span class="keyword">div</span> g;</div><div class="line">    extgcd(a,b,x,y);</div><div class="line">    <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        dec(x,b);inc(y,a);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> x+b&lt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(x,b);dec(y,a);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(-x,<span class="string">' '</span>,y);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-土豪聪要请客"><a href="#P2-土豪聪要请客" class="headerlink" title="P2 土豪聪要请客"></a>P2 土豪聪要请客</h1><p>众所周知，聪哥(ndsf)是个土豪，不过你们不知道的是他的MZ和他的RMB一样滴多……<br>某天土豪聪又赚了10^10000e的RMB，他比较开心，于是准备请客。他在自己在XX星上的别墅里面大摆酒席，想要邀请尽可能多的MZ来参加他的宴会。他将会同MZ一起坐在一个巨大的长方形桌子上。这个桌子能坐下的人数等于他的周长。聪哥要求他的桌子能够放进他的别墅，并且桌子的边必须与别墅的边界平行。给定别墅的平面图，请你求出聪哥最多可以请多少个MZ。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行n,m。表示别墅的长宽<br>下面n行，每行M个字符，表示一个方块是空的(‘ ’)或是被占用了(‘X’)。<br>聪哥只要他的桌子放在别墅里，并且桌子不能占用任何一个已经占用了的方块。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个数，表示聪哥最多可以请几个Maze。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 4<br>X.XX<br>X..X<br>..X.<br>..XX</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>9</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>怎么搞都可以的网格dp<br>预处理l[i,j]为点(i,j)向左的连续空位的数量，u[i,j]为(i,j)向上的连续空位的数量<br>记f[i,j,k]为以点(i,j)为右下角，纵向长度为k时的最大横向长度<br>然后转移<br>细节</p>
<ol>
<li>循环变量打错m写成n</li>
<li>滚动数组每次循环时初始化</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/09/24/noip-2014-10-23/stol.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>stol.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">410</span>,<span class="number">0</span>..<span class="number">410</span>] <span class="keyword">of</span> int;</div><div class="line">    l,u:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">410</span>,<span class="number">0</span>..<span class="number">410</span>] <span class="keyword">of</span> int;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">410</span>,<span class="number">0</span>..<span class="number">410</span>] <span class="keyword">of</span> char;</div><div class="line">    n,m,i,p,c,j,k,t1,t2,ans:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'stol.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'stol.out'</span>);rewrite(output);</div><div class="line">    readln(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i,j]);</div><div class="line">        readln;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> a[i,j]=<span class="string">'X'</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                l[i,j]:=<span class="number">0</span>;u[i,j]:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">                l[i,j]:=l[i,j-<span class="number">1</span>]+<span class="number">1</span>;</div><div class="line">                u[i,j]:=u[i-<span class="number">1</span>,j]+<span class="number">1</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        c:=i <span class="keyword">and</span> <span class="number">1</span>;p:=c xor <span class="number">1</span>;</div><div class="line">        fillchar(f[c],sizeof(f[c]),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> u[i,j] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                t1:=f[c,j-<span class="number">1</span>,k]+<span class="number">1</span>;</div><div class="line">                t2:=min(f[p,j,k-<span class="number">1</span>],l[i,j]);</div><div class="line">                f[c,j,k]:=max(t1,t2);</div><div class="line">                ans:=max(ans,f[c,j,k]*<span class="number">2</span>+k*<span class="number">2</span>);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans-<span class="number">1</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-最强大脑"><a href="#P3-最强大脑" class="headerlink" title="P3 最强大脑"></a>P3 最强大脑</h1><blockquote>
<p>还没有做</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;pour&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;扩展欧几里得&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;stol&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;网格dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;?&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-Jams倒酒&quot;&gt;&lt;a href=&quot;#P1-Jams倒酒&quot; class=&quot;headerlink&quot; title=&quot;P1 Jams倒酒&quot;&gt;&lt;/a&gt;P1 Jams倒酒&lt;/h1&gt;&lt;p&gt;Jams是一家酒吧的老板，他的酒吧提供2种体积的啤酒，a ml 和 b ml，分别使用容积为a ml 和 b ml的酒杯来装载。&lt;br&gt;酒吧的生意并不好。Jams发现酒鬼们都很穷，不像他那么土豪。有时，他们会因为负担不起a ml 或者 b ml酒的消费，而不得不离去。因此，Jams决定出手第三种体积的啤酒(较小体积的啤酒)。&lt;br&gt;Jams只有两种杯子，容积分别为 a ml 和 b ml，而且啤酒杯是没有刻度的。他只能通过两种杯子和酒桶间的互相倾倒来得到新的体积的酒。&lt;br&gt;倒酒步骤为:&lt;br&gt;(1) 规定a&amp;gt;=b&lt;br&gt;(2) 酒桶容积无限，酒桶中酒体积无限大。&lt;br&gt;(3) 只能包含三种可能的倒酒操作：&lt;br&gt;1、 将酒桶中的酒倒入容积为b ml的酒杯中；&lt;br&gt;2、 将容积为a ml的酒杯中的酒倒入酒桶；&lt;br&gt;3、 将容积为b ml的酒杯中的酒倒入容积为 a ml的酒杯中。&lt;br&gt;(4) 每次倒酒必须把杯子倒满或者把被倾倒的杯子倒空。&lt;br&gt;Jams希望通过若干次倾倒得到容积为 a ml酒杯中剩下的就体积尽可能小，他请求你帮助他设计倾倒方案。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="数论" scheme="https://cothrax.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="网格DP" scheme="https://cothrax.github.io/tags/%E7%BD%91%E6%A0%BCDP/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-22</title>
    <link href="https://cothrax.github.io/2016/09/23/noip-2014-10-22/"/>
    <id>https://cothrax.github.io/2016/09/23/noip-2014-10-22/</id>
    <published>2016-09-23T12:07:17.000Z</published>
    <updated>2016-09-25T03:00:15.470Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">bishop</td>
<td style="text-align:center">dfs+打表</td>
</tr>
<tr>
<td style="text-align:center">czybm</td>
<td style="text-align:center">左右取数dp</td>
</tr>
<tr>
<td style="text-align:center">hop</td>
<td style="text-align:center">图论建模+lca</td>
</tr>
</tbody>
</table>
<h1 id="P1-传教士"><a href="#P1-传教士" class="headerlink" title="P1 传教士"></a>P1 传教士</h1><p>panzhili王国的疆土恰好是一个矩形，为了管理方便，国王jjs将整个疆土划分成N＊M块大小相同的区域。由于jjs希望他的子民也能信教爱教（”打拳”神教），所以他想安排一些传教士到全国各地去传教。但这些传教士的传教形式非常怪异，他们只在自己据点周围特定的区域内传教且领地意识极其强烈（即任意一个传教士的据点都不能在其他传教士的传教区域内，否则就会发生冲突）。现在我们知道传教士的传教区域为以其据点为中心的两条斜对角线上（如图）。现在jjs请你帮忙找出一个合理的安置方案，使得可以在全国范围内安置尽可能多的传教士而又不至于任意两个传教士会发生冲突。</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center">x</th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">A</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p>（若A为某传教士的据点，则其传教范围为所有标有X的格子。为不产生冲突，则第二个传教士的据点只能放在上图的空格中。）<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件共一行，包含两个整数N和M，代表国土的大小，n为水平区域数，m为垂直区域数。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出文件仅一行，包含一个整数，即最多可以安置的传教士的数目。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 4</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>6</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>说明：样例安置方案如下图所示，X表示为某传教士的据点。<br>XXX<br>OOO<br>OOO<br>XXX<br>对于100%的数据，1&lt;=n,m&lt;=9，且数据规模呈梯度上升。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>先暴力dfs打个表<br>由于是对角线，可以用x+y=b和x-y=b（斜率为±1的直线）进行状态转移</p>
<div><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/bishop.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>bishop.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    l,r:<span class="keyword">array</span>[-<span class="number">10</span>..<span class="number">30</span>] <span class="keyword">of</span> boolean;</div><div class="line">    ans,n,m:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(x,y,k:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> y=m+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> y:=<span class="number">1</span>;inc(x) <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> x=n+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">        ans:=max(ans,k);<span class="keyword">exit</span> </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs(x,y+<span class="number">1</span>,k);</div><div class="line">    <span class="keyword">if</span> r[x+y] <span class="keyword">and</span> l[y-x] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        r[x+y]:=false;l[y-x]:=false;</div><div class="line">        dfs(x,y+<span class="number">1</span>,k+<span class="number">1</span>);</div><div class="line">        r[x+y]:=true;l[y-x]:=true;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="comment">//read(n,m);</span></div><div class="line">    <span class="keyword">for</span> n:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">9</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> m:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">9</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            fillchar(l,sizeof(l),true);</div><div class="line">            fillchar(r,sizeof(r),true);</div><div class="line">            ans:=<span class="number">0</span>;</div><div class="line">            dfs(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">            <span class="keyword">write</span>(ans:<span class="number">3</span>);        </div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        writeln;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div><br><div><br><br>然后找找规律<br>打表后发现：分行列讨论，对角线特判<br><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/bishop1.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>bishop1.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> n,m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'bishop.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'bishop.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">if</span> n=m <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> n=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">write</span>(<span class="number">1</span>:<span class="number">3</span>) </div><div class="line">        <span class="keyword">else</span> <span class="keyword">write</span>(<span class="number">2</span>*(n-<span class="number">1</span>):<span class="number">3</span>);</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> odd(m) <span class="keyword">then</span> <span class="keyword">write</span>(n+m-<span class="number">1</span>:<span class="number">3</span>)</div><div class="line">        <span class="keyword">else</span> <span class="keyword">write</span>(m+<span class="number">2</span>*((n-<span class="number">1</span>) <span class="keyword">div</span> <span class="number">2</span>):<span class="number">3</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-czy把妹"><a href="#P2-czy把妹" class="headerlink" title="P2 czy把妹"></a>P2 czy把妹</h1><p>Czy是个大丧失，非常喜欢bm。他经常挑战bm的极限，同时b很多的mz。(虽然也许质量不容乐观)<br>这一天，czy又开始了他的极限挑战。在一个数轴上有n个maze,她们都在等待着czy的到来。Czy一开始站在k号妹子的旁边，他需要搞定所有的妹子(由于他向fewdan学会了绝技，所以搞定妹子的时间是无限接近于0的，也就是一瞬间就搞定而不用花额外的时间)。Maze们都很没有耐心，每让她们多等1s,她们就会增加w[i]的不开心值。现在，czy从k号妹子这里出发，以1m/s的速度开始行动，他希望在搞定所有maze的情况下使得她们的不开心值总和最小，于是他找到了即将在NOIP2014 AK的你来帮他解决这个问题。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件的第一行包含一个整数N，2&lt;=N&lt;=1000，表示maze的数量。<br>第二行包含一个整数V，1&lt;=V&lt;=N，表示开始时czy站在几号maze的旁边.接下来的N行中，每行包含两个用空格隔开的整数D和W，用来描述每个maze，其中0&lt;=D&lt;=1000，0&lt;=W&lt;=1000。D表示MM在数轴上的位置(单位: m)，W表示每秒钟会增加的不开心值。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，最小的不开心值。(答案不超过10^9)</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4<br>3<br>2 2<br>5 8<br>6 1<br>8 7</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>56</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于40%的数据，1&lt;=n&lt;=7<br>对于100%的数据，1&lt;=n&lt;=1000 0&lt;=D&lt;=1000 0&lt;=w&lt;=1000</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>因为只要路过一个mz必定要干掉，于是已经干掉的妹子构成的是一个连续区间。<br>以k为起点，左右取数的dp<br>状态f[i,j,s]：k以左取i个，右取j个，s=0在现在在左边，s=1现在在右边<br>部分数据预处理，然后转移</p>
<p>其实和洛谷的关路灯那题一模一样<br>dp时注意数组越界，要加判断i&gt;0和j&gt;0</p>
<div><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/czybm.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>czybm.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    i,j,n,k:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    d,w,l,r:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=d[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> d[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> d[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> i=k <span class="keyword">then</span> k:=j;<span class="keyword">if</span> j=k <span class="keyword">then</span> k:=i;</div><div class="line">            swap(d[i],d[j]);swap(w[i],w[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;    </div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'czybm.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'czybm.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(d[i],w[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);l[k-<span class="number">1</span>]:=<span class="number">0</span>;r[n-k]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=k-<span class="number">2</span> <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> l[i]:=l[i+<span class="number">1</span>]+w[k-<span class="number">1</span>-i];</div><div class="line">    <span class="keyword">for</span> i:=n-k-<span class="number">1</span> <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> r[i]:=r[i+<span class="number">1</span>]+w[k+<span class="number">1</span>+i];</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;f[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> k-<span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> n-k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span> i&gt;<span class="number">0</span> <span class="keyword">then</span> f[i,j,<span class="number">0</span>]:=min(</div><div class="line">                f[i-<span class="number">1</span>,j,<span class="number">0</span>]+(l[i-<span class="number">1</span>]+r[j])*(d[k-i+<span class="number">1</span>]-d[k-i]),</div><div class="line">                f[i-<span class="number">1</span>,j,<span class="number">1</span>]+(l[i-<span class="number">1</span>]+r[j])*(d[k+j]-d[k-i]));</div><div class="line">            <span class="keyword">if</span> j&gt;<span class="number">0</span> <span class="keyword">then</span> f[i,j,<span class="number">1</span>]:=min(</div><div class="line">                f[i,j-<span class="number">1</span>,<span class="number">1</span>]+(l[i]+r[j-<span class="number">1</span>])*(d[k+j]-d[k+j-<span class="number">1</span>]),</div><div class="line">                f[i,j-<span class="number">1</span>,<span class="number">0</span>]+(l[i]+r[j-<span class="number">1</span>])*(d[k+j]-d[k-i]));</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(min(f[k-<span class="number">1</span>,n-k,<span class="number">0</span>],f[k-<span class="number">1</span>,n-k,<span class="number">1</span>]));</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-跳跳棋"><a href="#P3-跳跳棋" class="headerlink" title="P3 跳跳棋"></a>P3 跳跳棋</h1><p>Hzwer的跳跳棋是在一条数轴上进行的。棋子只能摆在整点上。每个点不能摆超过一个棋子。<br>某一天，黄金大神和cjy用跳跳棋来做一个简单的游戏：棋盘上有3颗棋子，分别在a，b，c这三个位置。他们要通过最少的跳动把它们的位置移动成x，y，z。（棋子是没有区别的）<br>跳动的规则很简单，任意选一颗棋子，对一颗中轴棋子跳动。跳动后两颗棋子距离不变。一次只允许跳过1颗棋子。<br>写一个程序，首先判断是否可以完成任务。如果可以，输出最少需要的跳动次数。<br><!--more--></p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含三个整数，表示当前棋子的位置a b c。（互不相同）<br>第二行包含三个整数，表示目标位置x y z。（互不相同）</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>如果无解，输出一行NO。<br>如果可以到达，第一行输出YES，第二行输出最少步数。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>1 2 3<br>0 3 5</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>YES<br>2</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>20% 输入整数的绝对值均不超过10<br>40% 输入整数的绝对值均不超过10000<br>100% 绝对值不超过10^9</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>考察状态(a,b,c)，其中$a&lt;b&lt;c$<br>写暴力bfs时可以发现，当将b向外跳得到下一个状态时(a’,b’,c)时a’只可以通过向里跳得到上一个状态，这个状态转移是树形的：</p>
<ol>
<li>b向外跳得到两个状态作为儿子</li>
<li>a/c向里跳得到的是父亲</li>
</ol>
<p>而且很容易发现存在根节点为(a,b,c)其中a-b=b-c<br>于是对于起始和目标状态，想要最短步转移，实际上就是找LCA，可以用辗转相除模拟向上走的过程，然后二分处理LCA</p>
<p>注意点</p>
<ol>
<li>要调整到同一深度</li>
<li>注意inf大小</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/09/23/noip-2014-10-22/hop.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>hop.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3</span>] <span class="keyword">of</span> int;</div><div class="line">    pint=^int;</div><div class="line"><span class="keyword">var</span></div><div class="line">    f,t,r1,r2:arr;</div><div class="line">    l,r,mid,ans,c1,c2,i:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">sort</span><span class="params">(<span class="keyword">var</span> f:arr)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> f[i]&gt;f[j] <span class="keyword">then</span> swap(f[i],f[j]);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(f:arr;k:int;p:pint)</span>:</span>arr;</div><div class="line"><span class="keyword">var</span> d1,d2,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    d1:=f[<span class="number">2</span>]-f[<span class="number">1</span>];d2:=f[<span class="number">3</span>]-f[<span class="number">2</span>];</div><div class="line">    <span class="keyword">if</span> d1=d2 <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">    <span class="keyword">if</span> d1&gt;d2 <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        x:=min(d1 <span class="keyword">div</span> d2,k);</div><div class="line">        <span class="keyword">if</span> d2*x=d1 <span class="keyword">then</span> dec(x);</div><div class="line">        dec(k,x);inc(p^,x);</div><div class="line">        dec(f[<span class="number">2</span>],x*d2);dec(f[<span class="number">3</span>],x*d2);</div><div class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        x:=min(d2 <span class="keyword">div</span> d1,k);</div><div class="line">        <span class="keyword">if</span> d1*x=d2 <span class="keyword">then</span> dec(x);</div><div class="line">        dec(k,x);inc(p^,x);</div><div class="line">        inc(f[<span class="number">1</span>],x*d1);inc(f[<span class="number">2</span>],x*d1);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> k=<span class="number">0</span> <span class="keyword">then</span> cal:=f <span class="keyword">else</span> cal:=cal(f,k,p);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">equ</span><span class="params">(a,b:arr)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[i]&lt;&gt;b[i] <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">    equ:=true;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'hop.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'hop.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">read</span>(f[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    sort(f);c1:=<span class="number">0</span>;r1:=cal(f,maxlongint,@c1);</div><div class="line">    sort(t);c2:=<span class="number">0</span>;r2:=cal(t,maxlongint,@c2);</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> equ(r1,r2) <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="string">'NO'</span>);halt <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> c1&gt;c2 <span class="keyword">then</span> f:=cal(f,c1-c2,@i);</div><div class="line">    <span class="keyword">if</span> c2&gt;c1 <span class="keyword">then</span> t:=cal(t,c2-c1,@i);</div><div class="line">    l:=<span class="number">0</span>;r:=c1+c2;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> equ(cal(f,mid,@i),cal(t,mid,@i)) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            ans:=mid*<span class="number">2</span>;r:=mid-<span class="number">1</span></div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(<span class="string">'YES'</span>);<span class="keyword">write</span>(ans+abs(c1-c2));</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bishop&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dfs+打表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;czybm&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左右取数dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;hop&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;图论建模+lca&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-传教士&quot;&gt;&lt;a href=&quot;#P1-传教士&quot; class=&quot;headerlink&quot; title=&quot;P1 传教士&quot;&gt;&lt;/a&gt;P1 传教士&lt;/h1&gt;&lt;p&gt;panzhili王国的疆土恰好是一个矩形，为了管理方便，国王jjs将整个疆土划分成N＊M块大小相同的区域。由于jjs希望他的子民也能信教爱教（”打拳”神教），所以他想安排一些传教士到全国各地去传教。但这些传教士的传教形式非常怪异，他们只在自己据点周围特定的区域内传教且领地意识极其强烈（即任意一个传教士的据点都不能在其他传教士的传教区域内，否则就会发生冲突）。现在我们知道传教士的传教区域为以其据点为中心的两条斜对角线上（如图）。现在jjs请你帮忙找出一个合理的安置方案，使得可以在全国范围内安置尽可能多的传教士而又不至于任意两个传教士会发生冲突。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;x&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;（若A为某传教士的据点，则其传教范围为所有标有X的格子。为不产生冲突，则第二个传教士的据点只能放在上图的空格中。）&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
      <category term="树结构" scheme="https://cothrax.github.io/tags/%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="二分" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="打表" scheme="https://cothrax.github.io/tags/%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-18</title>
    <link href="https://cothrax.github.io/2016/09/22/noip-2014-10-18/"/>
    <id>https://cothrax.github.io/2016/09/22/noip-2014-10-18/</id>
    <published>2016-09-22T15:42:48.000Z</published>
    <updated>2016-09-24T12:05:45.903Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">jkl</td>
<td style="text-align:center">贪心乱搞</td>
</tr>
<tr>
<td style="text-align:center">walk</td>
<td style="text-align:center">倍增</td>
</tr>
<tr>
<td style="text-align:center">mokou</td>
<td style="text-align:center">mst+遍历</td>
</tr>
<tr>
<td style="text-align:center">submatrix</td>
<td style="text-align:center">单调栈</td>
</tr>
</tbody>
</table>
<h1 id="P1-肥得更高"><a href="#P1-肥得更高" class="headerlink" title="P1 肥得更高"></a>P1 肥得更高</h1><p>现在，你有n亩的小麦地需要增产，你拥有一些金坷垃，但是金坷垃极其稀少，掺肥料也只够你撒K次。<br>众所周知，金坷垃能激活土壤深处的氮磷钾，同一块地可以撒多次肥料，但是效果是有略微衰减的。<br>实地考察后你发现，第i亩土地第x次撒肥料增产a[i]-x+1公斤。<br>hzwer将代替你去撒肥料，但是他是个蒟蒻，完全不动大脑，所以你想知道如果他随机撒肥料，最坏情况下小麦将增产多少，最好情况下将增产多少？(他最多只会对第i亩地撒肥料a[i]次)<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数n，K<br>第二行n个整数，第i个整数为a[i]</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出最大值，最小值，空格隔开</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 10<br>10 3 3 1 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>58 26</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据n，k&lt;=1000<br>对于70%的数据n，k&lt;=200000<br>对于100%的数据n，k，a[i]&lt;=1000000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>贪心乱搞<br>显然每次取最小值，每次取出a[i]后，a[i]-=1，可以用cnt[i]记录当前a[j]=i的j的个数<br>至于最大值，拿一个指针指想cnt[i]&gt;0的最大i，每次<code>dec(cnt[i]);inc(cnt[i-1])</code>，模拟k次即可<br>最小值的话，因为根据样例a[i]不能减负数，那么用一个指针指向cnt[i]&gt;0的最小i，然后一次性处理cnt[i]（相当于对a[j]=i的所有地j各撒i此，让a[j]减到0，用等差数列求和），然后向上找可用的i，记录次数直到k次<br>最后一个点会爆int</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/jkl.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>jkl.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    tmp,cnt:<span class="keyword">array</span>[-<span class="number">1000010</span>..<span class="number">1000010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,k,i,j,mn,mx,p:int;ans:int64;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'jkl.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'jkl.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k);</div><div class="line">    mn:=maxlongint;mx:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);inc(cnt[j]);</div><div class="line">        mn:=min(j,mn);mx:=max(j,mx);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    tmp:=cnt;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> cnt[mx]=<span class="number">0</span> <span class="keyword">do</span> dec(mx);</div><div class="line">        inc(ans,mx);dec(cnt[mx]);inc(cnt[mx-<span class="number">1</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans,<span class="string">' '</span>);</div><div class="line">    p:=mn;i:=k;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> i&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (tmp[p]=<span class="number">0</span>) <span class="keyword">do</span> inc(p);</div><div class="line">        <span class="comment">//p+p-1+p-2+...1</span></div><div class="line">        dec(tmp[p]);j:=min(i,p);dec(i,j);</div><div class="line">        inc(ans,(p+(p-j+<span class="number">1</span>))*j <span class="keyword">div</span> <span class="number">2</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-滑板鞋"><a href="#P2-滑板鞋" class="headerlink" title="P2 滑板鞋"></a>P2 滑板鞋</h1><p>你在魅力之都购买了一双时尚的滑板鞋，你非常兴奋地到处摩擦！<br>hzwer很想问一个问题：按照你的行动方式，你从某个结点摩擦（移动）K步后能到的目的地<br>这显然是一个很简单的问题，但是蒟蒻hzwer总是问个不停，所以你决定写一个程序回答他的询问</p>
<!--more-->
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个数n，m表示结点个数和询问次数<br>接下来n行，第i个数一个数a[i]表示你在第i个结点的话，下一步会移动到第a[i]个结点<br>接下来m行，每行两个数t,k，蒟蒻hzwer询问如果你当前在第t个结点，k步之后你会到第几个节点</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>m行为每次询问的结果</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 2<br>2<br>3<br>2<br>1 2<br>2 4</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>2</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>共十个测试点，每个测试点数据规模如下所示</p>
<ol>
<li>n=10^2,m=n,k&lt;=10^2</li>
<li>n=10^3,m=n,k&lt;=10^3</li>
<li>n=10^4,m=1,k&lt;=10^9</li>
<li>n=10^5,m=1,k&lt;=10^9</li>
<li>n=10^5,m=1,k&lt;=10^12</li>
<li>n=10^5,m=1,k&lt;=10^15</li>
<li>n=10^5,m=1,k&lt;=10^18</li>
<li>n=10^5,m=n,k&lt;=10^12</li>
<li>n=10^5,m=n,k&lt;=10^15<br>10.n=10^5,m=n,k&lt;=10^18</li>
</ol>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>倍增即可</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/walk.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>walk.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> mx=<span class="number">60</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..mx] <span class="keyword">of</span> int;</div><div class="line">    bin:<span class="keyword">array</span>[<span class="number">0</span>..mx] <span class="keyword">of</span> int64;</div><div class="line">    n,m,t,i,j:int;k:int64;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'walk.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'walk.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(f[i,<span class="number">0</span>]);</div><div class="line">    bin[<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> mx <span class="keyword">do</span> bin[i]:=bin[i-<span class="number">1</span>]*int64(<span class="number">2</span>);</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> mx <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            f[i,j]:=f[f[i,j-<span class="number">1</span>],j-<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(t,k);</div><div class="line">        <span class="keyword">for</span> j:=mx <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> bin[j]&lt;=k <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                dec(k,bin[j]);t:=f[t,j];</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        writeln(t);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-警察叔叔"><a href="#P3-警察叔叔" class="headerlink" title="P3 警察叔叔"></a>P3 警察叔叔</h1><p>魅力之都是一个有N个路口，M条双向道路连接的城市。警察叔叔绘制了一张特殊的地图，在地图上只保留了N-1条道路，我们称这些道路为【特殊道路】，要保证任意两个路口间有且仅有一条路径，且满足所有保留的道路长度之和最小。<br>现在要在其中一个连接有多条【特殊道路】的路口设立【根据地】，去掉【根据地】所在路口后，就会出现某些路口间无法通过【特殊道路】相互连通的情况，我们认为这时仍然能够通过【特殊道路】连通的路口属于同一个【区域】。警察叔叔希望最后每个【区域】的【特殊道路】总长尽可能平均。警察叔叔找到了hzwer，但是hzwer是个无向图和有向图都无法区分的蒟蒻，请你帮他计算出应该选择哪一个路口作为【根据地】。<br>(尽可能平均即权值最小，设每一块【区域】的路线总长为Length[i]（包括连接【根据地】与该【区域】的边），平均路线长度为Avg=SUM{Length[i]}/区域数，权值d=∑ (Length[i]-Avg)^2</p>
<!--more-->
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行：2个正整数N,M<br>第2..M+1行：每行2个整数u,v和1个实数len，表示u,v之间存在长度为len的边</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>第1行：1个整数，最后选择的路口编号（存在多个可选路口时选择编号小的）</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 3<br>3 1 5<br>3 2 4<br>1 2 3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于60%的数据：3 ≤ N ≤ 2,000，N-1 ≤ M ≤ 50,000<br>对于100%的数据：3 ≤ N ≤ 40,000，N-1 ≤ M ≤ 200,000<br>对于100%的数据：0 &lt; len ≤ 100,000,000<br>保证不存在相同距离的线路，两个路口间可能出现多条路径，且任意点对间至少存在一条路径</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>首先最小生成树显然<br>然后以1为根，在树上遍历统计以点i为根的子树上的边权和len[i]，在for一遍每个点找出最小值。<br>注意权值不是方差，而是方差×n。</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/mokou.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mokou.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int;w:double <span class="keyword">end</span>;</div><div class="line">    e1=<span class="keyword">record</span> f,t:int;w:double <span class="keyword">end</span>;</div><div class="line"><span class="keyword">const</span> eps=<span class="number">0.0000000001</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    e:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> e1;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">80010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,par,rnk,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>] <span class="keyword">of</span> int;</div><div class="line">    len:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>] <span class="keyword">of</span> double;</div><div class="line">    n,m,sz,i,ans:int;tmp,sum,mn:double;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int;w:double)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].t:=t;g[sz].w:=w;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:e1)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:e1;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;x:double;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=e[random(r-l)+l].w;</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> e[i].w&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> e[j].w&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(e[i],e[j]);inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[x]:=find(par[x]);find:=par[x];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    x:=find(x);y:=find(y);</div><div class="line">    <span class="keyword">if</span> x=y <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> rnk[x]&lt;rnk[y] <span class="keyword">then</span> par[x]:=y</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[y]:=x;</div><div class="line">        <span class="keyword">if</span> rnk[x]=rnk[y] <span class="keyword">then</span> inc(rnk[x]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(x)=find(y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(v,p:int)</span>:</span>double;</div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    len[v]:=<span class="number">0</span>;cnt[v]:=<span class="number">0</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;inc(cnt[v]);</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> len[v]:=len[v]+dfs(u,v)+g[i].w;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dfs:=len[v];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(v:int)</span>:</span>double;</div><div class="line"><span class="keyword">var</span> i,u:int;avg:double;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> cnt[v]=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(-<span class="number">1</span>);</div><div class="line">    avg:=sum/cnt[v];cal:=<span class="number">0</span>;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> len[u]&lt;len[v] <span class="keyword">then</span></div><div class="line">            cal:=cal+sqr(len[u]+g[i].w-avg);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> v&lt;&gt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        cal:=cal+sqr(sum-len[v]-avg);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mokou.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mokou.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(e[i].f,e[i].t,e[i].w);</div><div class="line">    qsort(<span class="number">1</span>,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        par[i]:=i;rnk[i]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    sz:=<span class="number">0</span>;sum:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> same(e[i].f,e[i].t) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            union(e[i].f,e[i].t);</div><div class="line">            sum:=sum+e[i].w;</div><div class="line">            add(e[i].f,e[i].t,e[i].w);</div><div class="line">            add(e[i].t,e[i].f,e[i].w);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    mn:=-<span class="number">1</span>;dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        tmp:=cal(i);<span class="keyword">if</span> tmp+<span class="number">1</span>&lt;eps <span class="keyword">then</span> continue;</div><div class="line">        <span class="keyword">if</span> (mn=-<span class="number">1</span>) <span class="keyword">or</span> (tmp&lt;mn) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            mn:=tmp;ans:=i;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P4-请客"><a href="#P4-请客" class="headerlink" title="P4 请客"></a>P4 请客</h1><p>chenzeyu97的家可以看成是一个n*m的矩阵，每块区域都有独一无二的海拔高度h（h&gt;0）！其最大值为n*m。现在他要选择一个子矩阵摆放一张桌子，在他眼里，这样摆放桌子的美观度为这个子矩阵的最小值，他想知道，如果他要求摆放桌子的美观度为i，那么可以选择多少种子矩阵呢？对于所有可能的i值（1&lt;=i&lt;=n*m），你都应该得出其方案数，这样你就能顶替蒟蒻hzwer获得被请客的资格！</p>
<!--more-->
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个整数n，m<br>接下来n行，每行m个整数，描述chenzeyu97的家</p>
<h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h3><p>n*m行，每行一个整数，第i行表示美观度i的方案数</p>
<h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 3<br>2 5 1<br>6 3 4</p>
</blockquote>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>6<br>4<br>5<br>1<br>1<br>1</p>
</blockquote>
<h2 id="提示​-3"><a href="#提示​-3" class="headerlink" title="提示​"></a>提示​</h2><p>30%的数据1&lt;=n,m&lt;=50<br>100%的数据1&lt;=n,m&lt;=300</p>
<h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>单调栈<br>依然考虑每个点对答案的贡献<br>对于一个点向二维扩展不方便，于是枚举左右边界l和r<br>预处理每一行l..r的最小值mn<br>对行i，记向上的第一个mn[j]小于mn[i]的行为j，向下第一个mn[k]小于mn[i]的行为k，那么i对答案（美观度为mn[i]的数量）的贡献为(i-j)*(i-k)<br>对于j和k可以用单调栈求得</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-18/submatrix.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>submatrix.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int;</div><div class="line">    mn:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>] <span class="keyword">of</span> int;</div><div class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">310</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    ans:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j,k:longint;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cal</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">var</span> t,i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    t:=<span class="number">0</span>;s[<span class="number">0</span>,<span class="number">1</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (t&gt;<span class="number">0</span>) <span class="keyword">and</span> (s[t,<span class="number">0</span>]&gt;mn[i]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            inc(ans[s[t,<span class="number">0</span>]],(s[t,<span class="number">1</span>]-s[t-<span class="number">1</span>,<span class="number">1</span>])*(i-s[t,<span class="number">1</span>]));</div><div class="line">            dec(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inc(t);s[t,<span class="number">0</span>]:=mn[i];s[t,<span class="number">1</span>]:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> t&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(ans[s[t,<span class="number">0</span>]],(s[t,<span class="number">1</span>]-s[t-<span class="number">1</span>,<span class="number">1</span>])*(n+<span class="number">1</span>-s[t,<span class="number">1</span>]));</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'submatrix.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'submatrix.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(a[i,j]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        filldword(mn,sizeof(mn) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">        <span class="keyword">for</span> j:=i <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">                mn[k]:=min(mn[k],a[k,j]);</div><div class="line">            cal();</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m*n <span class="keyword">do</span> writeln(ans[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;jkl&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心乱搞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;walk&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;倍增&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mokou&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mst+遍历&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;submatrix&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;单调栈&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-肥得更高&quot;&gt;&lt;a href=&quot;#P1-肥得更高&quot; class=&quot;headerlink&quot; title=&quot;P1 肥得更高&quot;&gt;&lt;/a&gt;P1 肥得更高&lt;/h1&gt;&lt;p&gt;现在，你有n亩的小麦地需要增产，你拥有一些金坷垃，但是金坷垃极其稀少，掺肥料也只够你撒K次。&lt;br&gt;众所周知，金坷垃能激活土壤深处的氮磷钾，同一块地可以撒多次肥料，但是效果是有略微衰减的。&lt;br&gt;实地考察后你发现，第i亩土地第x次撒肥料增产a[i]-x+1公斤。&lt;br&gt;hzwer将代替你去撒肥料，但是他是个蒟蒻，完全不动大脑，所以你想知道如果他随机撒肥料，最坏情况下小麦将增产多少，最好情况下将增产多少？(他最多只会对第i亩地撒肥料a[i]次)&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="倍增" scheme="https://cothrax.github.io/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="生成树" scheme="https://cothrax.github.io/tags/%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="单调栈" scheme="https://cothrax.github.io/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-5</title>
    <link href="https://cothrax.github.io/2016/09/22/noip-2014-10-5/"/>
    <id>https://cothrax.github.io/2016/09/22/noip-2014-10-5/</id>
    <published>2016-09-22T11:16:48.000Z</published>
    <updated>2016-09-24T12:46:56.367Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">tree</td>
<td style="text-align:center">LCA</td>
</tr>
<tr>
<td style="text-align:center">mat</td>
<td style="text-align:center">概率期望+指针+前缀</td>
</tr>
<tr>
<td style="text-align:center">num</td>
<td style="text-align:center">背包+组合数学+容斥</td>
</tr>
</tbody>
</table>
<h1 id="P1-祖孙询问"><a href="#P1-祖孙询问" class="headerlink" title="P1 祖孙询问"></a>P1 祖孙询问</h1><p>已知一棵n个节点的有根树。有m个询问。每个询问给出了一对节点的编号x和y，询问x与y的祖孙关系。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p> 输入第一行包括一个整数n表示节点个数。<br>接下来n行每行一对整数对a和b表示a和b之间有连边。如果b是-1，那么a就是树的根。<br>第n+2行是一个整数m表示询问个数。<br>接下来m行，每行两个正整数x和y。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每一个询问，输出1:如果x是y的祖先，输出2:如果y是x的祖先，否则输出0。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>10<br>234 -1<br>12 234<br>13 234<br>14 234<br>15 234<br>16 234<br>17 234<br>18 234<br>19 234<br>233 19<br>5<br>234 233<br>233 12<br>233 13<br>233 15<br>233 19</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1<br>0<br>0<br>0<br>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，n,m≤1000。<br>对于100%的.据,n,m≤40000，每个节点的编号都不超过40000。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的LCA，倍增即可</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-5/tree.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>tree.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">80010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,dep:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>] <span class="keyword">of</span> int;</div><div class="line">    par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40010</span>,<span class="number">0</span>..<span class="number">20</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,logn,k,sz,i,j,r,f,t:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);g[sz].t:=t;</div><div class="line">    g[sz].next:=head[f];head[f]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,p:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    dep[v]:=dep[p]+<span class="number">1</span>;par[v,<span class="number">0</span>]:=p;</div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> u&lt;&gt;p <span class="keyword">then</span> dfs(u,v);</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(u,v:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> dep[u]&lt;dep[v] <span class="keyword">then</span> swap(u,v);</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> dep[par[u,i]]&gt;=dep[v] <span class="keyword">then</span></div><div class="line">            u:=par[u,i];</div><div class="line">    <span class="keyword">if</span> v=u <span class="keyword">then</span> <span class="keyword">exit</span>(u);</div><div class="line">    <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> par[u,i]&lt;&gt;par[v,i] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            u:=par[u,i];v:=par[v,i];</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    lca:=par[u,<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'tree.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'tree.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);k:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);</div><div class="line">        k:=max(k,max(f,t));</div><div class="line">        <span class="keyword">if</span> t=-<span class="number">1</span> <span class="keyword">then</span> r:=f</div><div class="line">        <span class="keyword">else</span> <span class="keyword">begin</span> add(f,t);add(t,f) <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    dep[<span class="number">0</span>]:=<span class="number">0</span>;dfs(r,<span class="number">0</span>);</div><div class="line">    logn:=floor(ln(n)/ln(<span class="number">2</span>));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span></div><div class="line">            par[j,i]:=par[par[j,i-<span class="number">1</span>],i-<span class="number">1</span>];</div><div class="line">    <span class="keyword">read</span>(m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t);</div><div class="line">        <span class="comment">//if f=t then begin writeln(0);continue end;</span></div><div class="line">        j:=lca(f,t);</div><div class="line">        <span class="keyword">if</span> j=f <span class="keyword">then</span> writeln(<span class="number">1</span>)</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> j=t <span class="keyword">then</span> writeln(<span class="number">2</span>)</div><div class="line">        <span class="keyword">else</span> writeln(<span class="number">0</span>);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-比赛"><a href="#P2-比赛" class="headerlink" title="P2 比赛"></a>P2 比赛</h1><p>有两个队伍A和B，每个队伍都有n个人。这两支队伍之间进行n场1对1比赛，每一场都是由A中的一个选手与B中的一个选手对抗。同一个人不会参加多场比赛，每个人的对手都是随机而等概率的。例如A队有A1和A2两个人，B队有B1和B2两个人，那么(A1 vs B1,A2 vs B2)和(A1 vs B2,A2 vs B1)的概率都是均等的50%。<br>每个选手都有一个非负的实力值。如果实力值为X和Y的选手对抗，那么实力值较强的选手所在的队伍将会获得(X-Y)^2的得分。<br>求A的得分减B的得分的期望值。<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数n表示两队的人数为n。<br>第二行n个数，第i个数A[i]表示队伍A的第i个人的实力值。<br>第三行n个数，第i个数B[i]表示队伍B的第i个人的实力值。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出仅包含一个实数表示A期望赢B多少分。答案保留到小数点后一位（注意精度）。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>3 7<br>1 5</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>20.0</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，n≤50。<br>对于100%的.据,n≤50000;A[i],B[i]≤50000。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>考虑a中的每个点对答案的贡献<br>对于点i，它对答案的贡献$$=\frac{\sum_j(a[i]-a[j])^2-\sum_k(a[i]-a[k])^2}{n}$$<br>其中j为b中所有实力值小于a[i]的人，k为b中所有实力值大于a[i]的人，这个值可以qsort后，用一个指针维护。<br>式子变形后，维护一个前缀和、前缀平方和，即可在O(N)内解决。<br>注意点：a数组设为int64，int与int64混合计算可能溢出</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-5/mat.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mat.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> int64;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    sum,squ,a,b:arr;</div><div class="line">    n,i,p:int;sa,sb:int64;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int64)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int64;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(<span class="keyword">var</span> b:arr;l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j:int;x:int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=b[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> b[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> b[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(b[i],b[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(b,i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(b,l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mat.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mat.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(b[i]);</div><div class="line">    qsort(a,<span class="number">1</span>,n);qsort(b,<span class="number">1</span>,n);</div><div class="line">    sum[<span class="number">0</span>]:=<span class="number">0</span>;squ[<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        sum[i]:=sum[i-<span class="number">1</span>]+b[i];</div><div class="line">        squ[i]:=squ[i-<span class="number">1</span>]+sqr(b[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    p:=<span class="number">1</span>;sa:=<span class="number">0</span>;sb:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">while</span> (p&lt;=n) <span class="keyword">and</span> (b[p]&lt;=a[i]) <span class="keyword">do</span> inc(p);</div><div class="line">        sa:=sa+(p-<span class="number">1</span>)*sqr(a[i])-<span class="number">2</span>*a[i]*sum[p-<span class="number">1</span>]+squ[p-<span class="number">1</span>];</div><div class="line">        sb:=sb+(n-p+<span class="number">1</span>)*sqr(a[i])-<span class="number">2</span>*a[i]*(sum[n]-sum[p-<span class="number">1</span>])</div><div class="line">            +squ[n]-squ[p-<span class="number">1</span>];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>((sa-sb)/n:<span class="number">0</span>:<span class="number">1</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-数字"><a href="#P3-数字" class="headerlink" title="P3 数字"></a>P3 数字</h1><p>一个数字被称为好数字当他满足下列条件：</p>
<ol>
<li>它有2*n个数位，n是正整数(允许有前导0)。</li>
<li>构成它的每个数字都在给定的数字集合S中。</li>
<li>它前n位之和与后n位之和相等或者它奇数位之和与偶数位之和相等<br>例如对于n=2,S={1,2}，合法的好数字有1111,1122,1212,1221,2112,2121,2211,2222这样8种。<br>已知n，求合法的好数字的个数mod 999983。</li>
</ol>
<!--more-->
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个数n。<br>接下来一个长度不超过10的字符串，表示给定的数字集合。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行一个数字表示合法的好数字的个数mod 999983。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>0987654321</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1240</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于20%的数据，n≤7。<br>对于100%的.据,n≤1000,|S|≤10。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>背包+组合数学+容斥<br>见此：<a href="http://www.voidcn.com/blog/pzler/article/p-2260743.html" target="_blank" rel="external">http://www.voidcn.com/blog/pzler/article/p-2260743.html</a><br>$O(|S|N^2)$比较大，注意背包时向前转移，这样可以舍去无效点，加快速度。</p>
<div><br><div class="copy"><br>    <a href="/2016/09/22/noip-2014-10-5/num.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>num.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> z=<span class="number">999983</span>;</div><div class="line"><span class="keyword">var</span></div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int64;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j,k:int;s:<span class="keyword">string</span>;</div><div class="line">    ans,od,ev:int64;p:^int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cal</span><span class="params">(n:int)</span>:</span>int64;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    cal:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n*<span class="number">9</span> <span class="keyword">do</span> cal:=(cal+sqr(f[n,i])) <span class="keyword">mod</span> z;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'num.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'num.out'</span>);rewrite(output);</div><div class="line">    readln(n);readln(s);</div><div class="line">    m:=length(s);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> a[i]:=ord(s[i])-ord(<span class="string">'0'</span>);</div><div class="line">    fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> i*<span class="number">9</span> <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> f[i,j]&gt;<span class="number">0</span> <span class="keyword">then</span></div><div class="line">                <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">                    p:=@f[i+<span class="number">1</span>,j+a[k]];</div><div class="line">                    p^:=(p^+f[i,j]) <span class="keyword">mod</span> z;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">    ans:=cal(n);ev:=cal(n <span class="keyword">shr</span> <span class="number">1</span>);od:=cal((n+<span class="number">1</span>) <span class="keyword">shr</span> <span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>((ans*<span class="number">2</span>+z-ev*od <span class="keyword">mod</span> z) <span class="keyword">mod</span> z); </div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tree&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;LCA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mat&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;概率期望+指针+前缀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;num&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;背包+组合数学+容斥&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-祖孙询问&quot;&gt;&lt;a href=&quot;#P1-祖孙询问&quot; class=&quot;headerlink&quot; title=&quot;P1 祖孙询问&quot;&gt;&lt;/a&gt;P1 祖孙询问&lt;/h1&gt;&lt;p&gt;已知一棵n个节点的有根树。有m个询问。每个询问给出了一对节点的编号x和y，询问x与y的祖孙关系。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="组合数学" scheme="https://cothrax.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
      <category term="概率期望" scheme="https://cothrax.github.io/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="LCA" scheme="https://cothrax.github.io/tags/LCA/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="容斥" scheme="https://cothrax.github.io/tags/%E5%AE%B9%E6%96%A5/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-6</title>
    <link href="https://cothrax.github.io/2016/09/21/noip-2014-10-6/"/>
    <id>https://cothrax.github.io/2016/09/21/noip-2014-10-6/</id>
    <published>2016-09-21T15:34:24.000Z</published>
    <updated>2016-09-24T12:47:57.196Z</updated>
    
    <content type="html"><![CDATA[<p>一道模拟和一道平衡树区间k大没有做</p>
<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">catclimb</td>
<td style="text-align:center">dfs</td>
</tr>
<tr>
<td style="text-align:center">disblo</td>
<td style="text-align:center">分组背包+输出方案</td>
</tr>
</tbody>
</table>
<h1 id="P1-小猫爬山"><a href="#P1-小猫爬山" class="headerlink" title="P1 小猫爬山"></a>P1 小猫爬山</h1><p>Freda和rainbow饲养了N只小猫，这天，小猫们要去爬山。经历了千辛万苦，小猫们终于爬上了山顶，但是疲倦的它们再也不想徒步走下山了（呜咕&gt;_&lt;）。<br>Freda和rainbow只好花钱让它们坐索道下山。索道上的缆车最大承重量为W，而N只小猫的重量分别是C1、C2……CN。当然，每辆缆车上的小猫的重量之和不能超过W。每租用一辆缆车，Freda和rainbow就要付1美元，所以他们想知道，最少需要付多少美元才能把这N只小猫都运送下山？<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个用空格隔开的整数，N和W。<br>接下来N行每行一个整数，其中第i+1行的整数表示第i只小猫的重量C i。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数，最少需要多少美元，也就是最少需要多少辆缆车。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 1996<br>1<br>2<br>1994<br>12<br>29</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于100%的数据，1&lt;=N&lt;=18，1&lt;=C i &lt;=W&lt;=10^8。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>dfs即可，加上最优性剪枝可过</p>
<div><br><div class="copy"><br>    <a href="/2016/09/21/noip-2014-10-6/catclimb.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>catclimb.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    a,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">20</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,cnt,ans:int;w:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> cnt&gt;=ans <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> x=n+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> ans:=min(ans,cnt);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> a[x]+f[i]&lt;=w <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(f[i],a[x]);</div><div class="line">            dfs(x+<span class="number">1</span>);</div><div class="line">            dec(f[i],a[x]);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    inc(cnt);inc(f[cnt],a[x]);</div><div class="line">    dfs(x+<span class="number">1</span>);</div><div class="line">    dec(f[cnt],a[x]);dec(cnt);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'catclimb.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'catclimb.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,w);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    ans:=maxlongint;</div><div class="line">    dfs(<span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-暗黑破坏神"><a href="#P2-暗黑破坏神" class="headerlink" title="P2 暗黑破坏神"></a>P2 暗黑破坏神</h1><p>无聊中的小x玩起了Diablo I…<br>游戏的主人公有n个魔法<br>每个魔法分为若干个等级，第i个魔法有p[i]个等级(不包括0)<br>每个魔法的每个等级都有一个效果值，一个j级的i种魔法的效果值为w[i][j]<br>魔法升一级需要一本相应的魔法书<br>购买魔法书需要金币，第i个魔法的魔法书价格为c[i]<br>而小x只有m个金币(好孩子不用修改器)<br>你的任务就是帮助小x决定如何购买魔法书才能使所有魔法的效果值之和最大<br>开始时所有魔法为0级 效果值为0<br><!--more--></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行 用空格隔开的两个整数n m<br>以下n行 描述n个魔法<br>第i+1行描述 第i个魔法 格式如下<br>c[i] p[i] w[i][1] w[i][2] … w[i][p[i]]</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行输出一个整数，即最大效果值。<br>以后n行输出你的方案：<br>第i+1行有一个整数v[i] 表示你决定把第i个魔法学到v[i]级<br>如果有多解 输出花费金币最少的一组<br>如果还多解 输出任意一组</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 10<br>1 3 1 2 2<br>2 3 2 4 6<br>3 3 2 1 10</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>11<br>1<br>0<br>3</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>1&lt;=n&lt;=100<br>1&lt;=m&lt;=500<br>1&lt;=p[i]&lt;=50<br>1&lt;=c[i]&lt;=10<br>保证输入数据和最终结果在longint范围内</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>分组背包<br>f[i,j]表示前i个花费j的最大值，$k\in[1,p_i]$<br>方程：$$f[i,j]:=max{f[i,j],f[i-1,j-k*c[i]]+w[i,k]}$$<br>至于输出方案，向前迭代即可。</p>
<div><br><div class="copy"><br>    <a href="/2016/09/21/noip-2014-10-6/diablo.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>diablo.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    p,c:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    w:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>,<span class="number">0</span>..<span class="number">51</span>] <span class="keyword">of</span> int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,j,k,ans:int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'diablo.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'diablo.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c[i],p[i]);</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> p[i] <span class="keyword">do</span> <span class="keyword">read</span>(w[i,j]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    f[<span class="number">0</span>,<span class="number">0</span>]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> min(j <span class="keyword">div</span> c[i],p[i]) <span class="keyword">do</span></div><div class="line">                f[i,j]:=max(f[i,j],f[i-<span class="number">1</span>,j-k*c[i]]+w[i,k]);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> f[n,i]&gt;ans <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            ans:=f[n,i];j:=i;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> k:=<span class="number">0</span> <span class="keyword">to</span> min(j <span class="keyword">div</span> c[i],p[i]) <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> f[i,j]=f[i-<span class="number">1</span>,j-k*c[i]]+w[i,k] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                g[i]:=k;j:=j-k*c[i];break;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    writeln(ans);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(g[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道模拟和一道平衡树区间k大没有做&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;catclimb&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dfs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;disblo&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;分组背包+输出方案&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-小猫爬山&quot;&gt;&lt;a href=&quot;#P1-小猫爬山&quot; class=&quot;headerlink&quot; title=&quot;P1 小猫爬山&quot;&gt;&lt;/a&gt;P1 小猫爬山&lt;/h1&gt;&lt;p&gt;Freda和rainbow饲养了N只小猫，这天，小猫们要去爬山。经历了千辛万苦，小猫们终于爬上了山顶，但是疲倦的它们再也不想徒步走下山了（呜咕&amp;gt;_&amp;lt;）。&lt;br&gt;Freda和rainbow只好花钱让它们坐索道下山。索道上的缆车最大承重量为W，而N只小猫的重量分别是C1、C2……CN。当然，每辆缆车上的小猫的重量之和不能超过W。每租用一辆缆车，Freda和rainbow就要付1美元，所以他们想知道，最少需要付多少美元才能把这N只小猫都运送下山？&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="DFS" scheme="https://cothrax.github.io/tags/DFS/"/>
    
      <category term="搜索" scheme="https://cothrax.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-10-4</title>
    <link href="https://cothrax.github.io/2016/09/20/noip-2014-10-4/"/>
    <id>https://cothrax.github.io/2016/09/20/noip-2014-10-4/</id>
    <published>2016-09-20T15:07:13.000Z</published>
    <updated>2016-09-24T12:49:24.947Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">题目</th>
<th style="text-align:center">思路</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">password</td>
<td style="text-align:center">折半枚举</td>
</tr>
<tr>
<td style="text-align:center">formation</td>
<td style="text-align:center">LIS</td>
</tr>
<tr>
<td style="text-align:center">escape</td>
<td style="text-align:center">二分+bfs</td>
</tr>
</tbody>
</table>
<h1 id="P1-某种密码"><a href="#P1-某种密码" class="headerlink" title="P1 某种密码"></a>P1 某种密码</h1><p>关于某种密码有如下描述：某种密码的原文A是由N个数字组成，而密文B是一个长度为N的01数串，原文和密文的关联在于一个钥匙码KEY。若KEY=∑▒〖Ai*Bi〗，则密文就是原文的一组合法密码。<br>现在有原文和钥匙码，请编一个程序来帮助他统计到底有多少个符合条件的密文。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个数N，KEY，意义同题目描述；<br>第二行N个数表示原文A，意义同题目描述。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个数ANS，表示对于原文A和KEY，有多少组可行的密文B。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>3 2<br>1 1 2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>密文110，1<em>1+1</em>1+0<em>2=2<br>密文001，0</em>1+0<em>1+1</em>2=2<br>一共两组可行的密文。<br>60%数据满足N&lt;=25<br>100%数据满足N&lt;=40，-maxlongint&lt;=∑Ai&lt;=maxlongint</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的折半枚举<br>注意点：</p>
<ol>
<li>ai可能为负数</li>
<li>hash中重复元素的计数：每次insert时遍历一遍该链的元素。</li>
</ol>
<div><br><div class="copy"><br>    <a href="/2016/09/20/noip-2014-10-4/password.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>password.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> z=<span class="number">500009</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">41</span>] <span class="keyword">of</span> int;</div><div class="line">    hash:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500000</span>] <span class="keyword">of</span> int;</div><div class="line">    amt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500000</span>] <span class="keyword">of</span> int;</div><div class="line">    next:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500000</span>] <span class="keyword">of</span> int;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..z] <span class="keyword">of</span> int;</div><div class="line">    sz,n,f,k,w,i:int;cnt:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x:int64)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=(x <span class="keyword">mod</span> z+z) <span class="keyword">mod</span> z;</div><div class="line">    <span class="keyword">if</span> head[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(sz);head[i]:=sz;</div><div class="line">        hash[sz]:=x;inc(amt[sz]);</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    i:=head[i];</div><div class="line">    <span class="keyword">while</span> next[i]&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> hash[i]=x <span class="keyword">then</span> <span class="keyword">begin</span> inc(amt[i]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> hash[i]=x <span class="keyword">then</span> <span class="keyword">begin</span> inc(amt[i]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    inc(sz);hash[sz]:=x;inc(amt[sz]);next[i]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[(x <span class="keyword">mod</span> z+z) <span class="keyword">mod</span> z];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> hash[i]=x <span class="keyword">then</span> <span class="keyword">exit</span>(i);</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    query:=-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(c,x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> t:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (x=<span class="number">0</span>) <span class="keyword">and</span> (c=k+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span> insert(f);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> (x=<span class="number">1</span>) <span class="keyword">and</span> (c=n+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        t:=query(w-f);</div><div class="line">        <span class="keyword">if</span> t&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> inc(cnt,amt[t]);</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    inc(f,a[c]);dfs(c+<span class="number">1</span>,x);</div><div class="line">    dec(f,a[c]);dfs(c+<span class="number">1</span>,x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'password.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'password.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,w);k:=n <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    sz:=<span class="number">0</span>;f:=<span class="number">0</span>;dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    cnt:=<span class="number">0</span>;f:=<span class="number">0</span>;dfs(k+<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">write</span>(cnt);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P2-球的序列"><a href="#P2-球的序列" class="headerlink" title="P2 球的序列"></a>P2 球的序列</h1><p>N个编号为1-n的球，每个球都有唯一的编号。这些球被排成两种序列，分别为A、B序列，现在需要重新寻找一个球的序列l，对于这个子序列l中任意的两个球，要求j,k(j<k)，都要求满足lj在a中位置比lk在a中位置靠前，却lj在b中位置比lk在b中位置靠前，请你计算这个子序列l的最大长度。 <!--more--=""></k)，都要求满足lj在a中位置比lk在a中位置靠前，却lj在b中位置比lk在b中位置靠前，请你计算这个子序列l的最大长度。></p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个整数，表示N。<br>第二行N个整数，表示A序列。<br>第三行N个整数，表示B序列。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>1 2 4 3 5<br>5 2 3 4 1</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>样例说明<br>L可以是{2,3}，也可以是{2,4}<br>数据范围:<br>40% N&lt;=5000<br>100% N&lt;=50000</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>以在a中下标重新给球编号，以在b中下标作为球的权值，然后就变成了LIS。<br>LIS有$O(NlogN)$的求法</p>
<div><br><div class="copy"><br>    <a href="/2016/09/20/noip-2014-10-4/formation.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>formation.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">100000000</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,b,w,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,j,len:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bin</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> l,r,mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    bin:=<span class="number">0</span>;;l:=<span class="number">1</span>;r:=len;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> f[mid]&lt;x <span class="keyword">then</span> <span class="keyword">begin</span> bin:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'formation.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'formation.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span> <span class="keyword">read</span>(j);b[j]:=i <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i]:=b[a[i]];</div><div class="line">    filldword(f,sizeof(f) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    f[<span class="number">0</span>]:=<span class="number">0</span>;len:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        j:=bin(w[i])+<span class="number">1</span>;</div><div class="line">        f[j]:=min(f[j],w[i]);</div><div class="line">        len:=max(len,j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(len);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<h1 id="P3-大逃亡"><a href="#P3-大逃亡" class="headerlink" title="P3 大逃亡"></a>P3 大逃亡</h1><p>N（1&lt;=N&lt;=10000），X（1&lt;=x&lt;=1000），Y（1&lt;=Y&lt;=1000）,代表有N个敌人分布一个X行Y列的矩阵上，矩形的行号从0到X-1,列号从0到Y-1再给出四个数字x1,y1,x2,y2,代表你要从点(x1,y1)移到(x2,y2)。在移动的过程中你当然希望离敌人的距离的最小值最大化，现在请求出这个值最大可以为多少,以及在这个前提下，你最少要走多少步才可以回到目标点。注意这里距离的定义为两点的曼哈顿距离，即某两个点的坐标分为(a,b),(c,d),那么它们的距离为|a-c|+|b-d|。<br><!--more--></p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行给出数字N，X，Y<br>第二行给出x1,y1,x2,y2<br>下面将有N行，给出N个敌人所在的坐标</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>在一行内输出你离敌人的距离及在这个距离的限制下，你回到目标点最少要移动多少步。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2 5 6<br>0 0 4 0<br>2 1<br>2 3</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2 14</p>
</blockquote>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>先从敌人所在点bfs一次，计算出每个点离最近敌人的距离<br>然后二分答案+bfs判解</p>
<div><br><div class="copy"><br>    <a href="/2016/09/20/noip-2014-10-4/escape.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>escape.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> d:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int=((<span class="number">1</span>,<span class="number">0</span>),(<span class="number">0</span>,<span class="number">1</span>),(-<span class="number">1</span>,<span class="number">0</span>),(<span class="number">0</span>,-<span class="number">1</span>));</div><div class="line"><span class="keyword">var</span></div><div class="line">    mp,dist:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>,<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    k,n,m,i,h,t,</div><div class="line">    x,y,sx,sy,tx,ty,nx,ny,</div><div class="line">    l,r,mid,ans,mn:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x0:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> mp[sx,sy]&lt;x0 <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">    fillchar(dist,sizeof(dist),<span class="number">255</span>);</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">1</span>;q[h,<span class="number">0</span>]:=sx;q[h,<span class="number">1</span>]:=sy;dist[sx,sy]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        x:=q[h,<span class="number">0</span>];y:=q[h,<span class="number">1</span>];inc(h);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            nx:=x+d[i,<span class="number">0</span>];ny:=y+d[i,<span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span> (min(nx,ny)&lt;<span class="number">0</span>) <span class="keyword">or</span> (nx&gt;=n) <span class="keyword">or</span> (ny&gt;=m) <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> dist[nx,ny]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> mp[nx,ny]&lt;x0 <span class="keyword">then</span> continue;</div><div class="line">            dist[nx,ny]:=dist[x,y]+<span class="number">1</span>;</div><div class="line">            q[t,<span class="number">0</span>]:=nx;q[t,<span class="number">1</span>]:=ny;inc(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    check:=dist[tx,ty]&lt;&gt;-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'escape.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'escape.out'</span>);rewrite(output);</div><div class="line">    fillchar(mp,sizeof(mp),<span class="number">255</span>);</div><div class="line">    <span class="keyword">read</span>(k,n,m,sx,sy,tx,ty);</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> k <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(x,y);</div><div class="line">        q[t,<span class="number">0</span>]:=x;q[t,<span class="number">1</span>]:=y;inc(t);</div><div class="line">        mp[x,y]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        x:=q[h,<span class="number">0</span>];y:=q[h,<span class="number">1</span>];inc(h);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            nx:=x+d[i,<span class="number">0</span>];ny:=y+d[i,<span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span> (min(nx,ny)&lt;<span class="number">0</span>) <span class="keyword">or</span> (nx&gt;=n) <span class="keyword">or</span> (ny&gt;=m) <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> mp[nx,ny]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> continue;</div><div class="line">            mp[nx,ny]:=mp[x,y]+<span class="number">1</span>;</div><div class="line">            q[t,<span class="number">0</span>]:=nx;q[t,<span class="number">1</span>]:=ny;inc(t);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    l:=<span class="number">0</span>;r:=n+m+<span class="number">2</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">            ans:=mid;mn:=dist[tx,ty];l:=mid+<span class="number">1</span>; </div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans,<span class="string">' '</span>,mn);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;password&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;折半枚举&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;formation&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;LIS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;escape&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;二分+bfs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-某种密码&quot;&gt;&lt;a href=&quot;#P1-某种密码&quot; class=&quot;headerlink&quot; title=&quot;P1 某种密码&quot;&gt;&lt;/a&gt;P1 某种密码&lt;/h1&gt;&lt;p&gt;关于某种密码有如下描述：某种密码的原文A是由N个数字组成，而密文B是一个长度为N的01数串，原文和密文的关联在于一个钥匙码KEY。若KEY=∑▒〖Ai*Bi〗，则密文就是原文的一组合法密码。&lt;br&gt;现在有原文和钥匙码，请编一个程序来帮助他统计到底有多少个符合条件的密文。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="线性DP" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%80%A7DP/"/>
    
      <category term="折半枚举" scheme="https://cothrax.github.io/tags/%E6%8A%98%E5%8D%8A%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo用原生html伪装复制源码的feature</title>
    <link href="https://cothrax.github.io/2016/09/16/hexo-ways-to-copy-code/"/>
    <id>https://cothrax.github.io/2016/09/16/hexo-ways-to-copy-code/</id>
    <published>2016-09-16T05:39:30.000Z</published>
    <updated>2016-09-16T11:24:27.235Z</updated>
    
    <content type="html"><![CDATA[<h2 id="优化源码复制"><a href="#优化源码复制" class="headerlink" title="优化源码复制"></a>优化源码复制</h2><p>之前在【<a href="/2016/08/12/Hexo初体验/" title="Hexo初体验">Hexo初体验</a>】中提到过<strong>代码复制到剪切板</strong>的替代方案，就是用一个link链接到源码文件，这样做对于一个OIer来说，好处有三：</p>
<ol>
<li>便于管理源码</li>
<li>方便复习模板题</li>
<li><del>显示逼格</del>（雾）</li>
</ol>
<a id="more"></a>
<p>但在代码块外面显示一个蓝色链接实在太丑太直接：</p>
<blockquote>
<img src="/2016/09/16/hexo-ways-to-copy-code/codeblock.jpg" alt="codeblock.jpg" title="">
</blockquote>
<p>于是今天我拿css伪装一下，代码如下：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="code">    .copy&#123;</span></div><div class="line"><span class="code">        position:relative;</span></div><div class="line"><span class="code">        z-index:10;</span></div><div class="line"><span class="code">        color:#000;</span></div><div class="line"><span class="code">        font-size:13px;</span></div><div class="line"><span class="code">        margin:0px 11px -98px 0px;</span></div><div class="line"><span class="code">        text-align:right;</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="code">    .copy a&#123;</span></div><div class="line"><span class="code">        color:rgb(153,153,153);</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="xml"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"copy"</span>&gt;</span></span></div><div class="line"><span class="code">    &#123;% asset_link *.pas &#123;Plain Text&#125; %&#125;</span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">&#123;% codeblock lang:delphi *.pas %&#125;</div><div class="line">//code here</div><div class="line">&#123;% endcodeblock %&#125;</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<blockquote>
<img src="/2016/09/16/hexo-ways-to-copy-code/new.png" alt="new.png" title="">
</blockquote>
<p>写可以把这段css写进<strong>主题的css</strong>里，jacman下就是<code>/home/wd/Hexo/themes/jacman/source/css/_partial/article.styl</code></p>
<p>其实照着这个思路，可以通过直接<strong>插入js</strong>来实现copy to clipboard的函数，有时间再试一试。</p>
<h2 id="我的prob模板"><a href="#我的prob模板" class="headerlink" title="我的prob模板"></a>我的prob模板</h2><p>附一份用来写题解的scaffold以供参考。<br><figure class="highlight markdown"><figcaption><span>prob.md</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">tags: [OI]</div><div class="line"><span class="section">categories: Problem Set</span></div><div class="line">---</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="code">    .copy&#123;</span></div><div class="line"><span class="code">        position:relative;</span></div><div class="line"><span class="code">        z-index:10;</span></div><div class="line"><span class="code">        color:#000;</span></div><div class="line"><span class="code">        font-size:13px;</span></div><div class="line"><span class="code">        margin:0px 11px -98px 0px;</span></div><div class="line"><span class="code">        text-align:right;</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="code">    .copy a&#123;</span></div><div class="line"><span class="code">        color:rgb(153,153,153);</span></div><div class="line"><span class="code">    &#125;</span></div><div class="line"><span class="xml"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></div><div class="line"><span class="section">## 描述</span></div><div class="line"><span class="xml"><span class="comment">&lt;!--more--&gt;</span></span></div><div class="line"><span class="section">## 格式</span></div><div class="line"><span class="section">### 输入格式</span></div><div class="line"><span class="section">### 输出格式</span></div><div class="line"><span class="section">## 样例</span></div><div class="line"><span class="section">### 样例输入</span></div><div class="line"><span class="quote">&gt;</span></div><div class="line">### 样例输出</div><div class="line"><span class="quote">&gt;</span></div><div class="line">## 提示​</div><div class="line"><span class="section">## 题解</span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"copy"</span>&gt;</span></span></div><div class="line"><span class="code">    &#123;% asset_link *.pas &#123;Plain Text&#125; %&#125;</span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">&#123;% codeblock lang:delphi *.pas %&#125;</div><div class="line">//code here</div><div class="line">&#123;% endcodeblock %&#125;</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h2 id="改主题的css"><a href="#改主题的css" class="headerlink" title="改主题的css"></a>改主题的css</h2><p>上面提到了改主题的css以实现一些神奇的效果。<br>实现奇怪效果的一般步骤是：</p>
<ol>
<li>在浏览器下检查元素，考虑如何定位到某个元素（如查看class,id,name）</li>
<li>google实现这种效果的css代码</li>
<li>把它稍作修改copy到主题source的css源文件里</li>
</ol>
<p>比如说把上面实现的.copy类的css写进去<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.copy</span>&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">z-index</span>:<span class="number">10</span>;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#000</span>;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">13px</span>;</div><div class="line">    <span class="attribute">margin</span>:<span class="number">0px</span> <span class="number">11px</span> -<span class="number">98px</span> <span class="number">0px</span>;</div><div class="line">    <span class="attribute">text-align</span>:right;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.copy</span> <span class="selector-tag">a</span>&#123;</div><div class="line">    <span class="attribute">color</span>:<span class="built_in">rgb</span>(153,153,153);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.copy</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#000</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>还可以实现标题hover的动态下划线效果<br>转自此处：<a href="https://eyehere.net/2015/css-sliding-underline/" target="_blank" rel="external">目光博客</a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">padding-bottom</span>: <span class="number">2px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">background</span>: transparent;</div><div class="line">    <span class="attribute">transition</span>: width .<span class="number">5s</span> ease, background-color .<span class="number">5s</span> ease;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">background</span>: blue;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">padding-bottom</span>: <span class="number">2px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">background</span>: transparent;</div><div class="line">    <span class="attribute">transition</span>: width .<span class="number">5s</span> ease, background-color .<span class="number">5s</span> ease;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.article-info</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">background</span>: color-blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>另外关于jacman主题色的修改，<code>_config.yml</code>提供的<code>theme</code>属性并不能修改文本的颜色，我们考虑直接修改css即<code>theme/jacman/source/css/_base/varible.styl</code><br>详见：<a href="http://ppting.me/2015/01/26/change-jacman-theme/" target="_blank" rel="external">修改jacman主题色</a></p>
<p>好像跑题了==</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;优化源码复制&quot;&gt;&lt;a href=&quot;#优化源码复制&quot; class=&quot;headerlink&quot; title=&quot;优化源码复制&quot;&gt;&lt;/a&gt;优化源码复制&lt;/h2&gt;&lt;p&gt;之前在【&lt;a href=&quot;/2016/08/12/Hexo初体验/&quot; title=&quot;Hexo初体验&quot;&gt;Hexo初体验&lt;/a&gt;】中提到过&lt;strong&gt;代码复制到剪切板&lt;/strong&gt;的替代方案，就是用一个link链接到源码文件，这样做对于一个OIer来说，好处有三：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;便于管理源码&lt;/li&gt;
&lt;li&gt;方便复习模板题&lt;/li&gt;
&lt;li&gt;&lt;del&gt;显示逼格&lt;/del&gt;（雾）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Tinkering Note" scheme="https://cothrax.github.io/categories/Tinkering-Note/"/>
    
    
      <category term="CSS" scheme="https://cothrax.github.io/tags/CSS/"/>
    
      <category term="Hexo" scheme="https://cothrax.github.io/tags/Hexo/"/>
    
      <category term="Html" scheme="https://cothrax.github.io/tags/Html/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 打地鼠游戏</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-8-2-mouse/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-8-2-mouse/</id>
    <published>2016-09-15T14:42:22.000Z</published>
    <updated>2016-09-16T09:29:52.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>伟大的2320学长特别喜欢打地鼠游戏，这个游戏开始后，会在地板上冒出一些地鼠来，你可以用榔头去敲击这些地鼠，每个地鼠被敲击后，将会增加相应的游戏分值。可是，所有地鼠只会在地上出现一段时间（而且消失后再也不会出现），每个地鼠都在0时刻冒出，但停留的时间可能是不同的，而且每个地鼠被敲击后增加的游戏分值也可能是不同。<br>最近2320学长经常玩这个游戏，以至于敲击每个地鼠只要1秒。他在想如何敲击能使总分最大。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入包含3行，第一行包含一个整数n（1&lt;=n&lt;=100000）表示有n个地鼠从地上冒出来，第二行n个用空格分隔的整数表示每个地鼠冒出后停留的时间（Maxt&lt;=50000），第三行n个用空格分隔的整数表示每个地鼠被敲击后会增加的分值v（v&lt;=1000）。每行中第i个数都表示第i个地鼠的信息。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，最大分值。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5<br>5 3 6 1 4<br>7 9 2 1 5</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>24</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>30%的数据保证n&lt;=100, t&lt;=500,v&lt;=50<br>60%的数据保证 n&lt;=10000,t&lt;=3000,v&lt;=500<br>100%的数据保证 n&lt;=100000,t&lt;=5000,v&lt;=1000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>以前在codevs上做过这道题，因为数据小写了背包</p>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-8-2-mouse/7166.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>7166.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,i,j,ans:longint;</div><div class="line">    t,w:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">101</span>] <span class="keyword">of</span> longint;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1010</span>] <span class="keyword">of</span> longint;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(b,e:longint)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x,tmp:longint;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=b;j:=e;x:=t[random(e-b)+b];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> t[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> t[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=t[i];t[i]:=t[j];t[j]:=tmp;</div><div class="line">            tmp:=w[i];w[i]:=w[j];w[j]:=tmp;</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;e <span class="keyword">then</span> qsort(i,e);</div><div class="line">    <span class="keyword">if</span> b&lt;j <span class="keyword">then</span> qsort(b,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(w[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);m:=t[n];</div><div class="line">    fillchar(f,sizeof(f),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=t[i] <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></div><div class="line">            f[j]:=max(f[j],f[j-<span class="number">1</span>]+w[i]);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> ans:=max(ans,f[i]);</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<p>但这次数据比较大，于是有两种贪心的思路</p>
<ul>
<li>按价值降序排列，1..n遍历，对于一个地鼠i，从t[i]..1遍历一遍，如果找到没有用过的1秒，用这1秒打这只地鼠。<br>但最坏复杂度为$O(maxT\cdot n)$，与dp相同</li>
</ul>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-8-2-mouse/mouse_che.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mouse_che.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,i,j:int;ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=a[random(r-l)+r];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> a[i]&gt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> a[j]&lt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(t[i],t[j]);swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line">    </div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mouse.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mouse.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        j:=t[i];</div><div class="line">        <span class="keyword">while</span> (j&gt;<span class="number">0</span>) <span class="keyword">and</span> used[j] <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> j&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> </div><div class="line">            inc(ans,a[i]);used[j]:=true;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>

<ul>
<li>按时间升序排列地鼠，1..n遍历，打地鼠并统计个数，如果个数超过当前时间，删除已打的地鼠中价值最小的，可以用堆维护。<br>复杂度为$O(NlogN)$</li>
</ul>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-8-2-mouse/mouse.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>mouse.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    n,sz,i,cnt:int;ans:int64;</div><div class="line">    a,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">heapify</span><span class="params">(i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> l,r,s:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=i*<span class="number">2</span>;r:=i*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=sz) <span class="keyword">and</span> (h[l]&lt;h[i]) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=i;</div><div class="line">    <span class="keyword">if</span> (r&lt;=sz) <span class="keyword">and</span> (h[r]&lt;h[s]) <span class="keyword">then</span> s:=r;</div><div class="line">    <span class="keyword">if</span> i&lt;&gt;s <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        swap(h[i],h[s]);heapify(s);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">extract</span><span class="params">()</span>:</span>int;</div><div class="line"><span class="keyword">begin</span> extract:=h[<span class="number">1</span>];h[<span class="number">1</span>]:=h[sz];dec(sz);heapify(<span class="number">1</span>) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sz);h[sz]:=x;i:=sz;</div><div class="line">    <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> (h[i]&lt;h[i <span class="keyword">shr</span> <span class="number">1</span>]) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        swap(h[i],h[i <span class="keyword">shr</span> <span class="number">1</span>]);i:=i <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=t[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> t[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> t[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(t[i],t[j]);swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'mouse.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'mouse.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(t[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    sz:=<span class="number">0</span>;cnt:=<span class="number">0</span>;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(cnt);inc(ans,a[i]);insert(a[i]);</div><div class="line">        <span class="keyword">while</span> cnt&gt;t[i] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            dec(cnt);dec(ans,extract);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;伟大的2320学长特别喜欢打地鼠游戏，这个游戏开始后，会在地板上冒出一些地鼠来，你可以用榔头去敲击这些地鼠，每个地鼠被敲击后，将会增加相应的游戏分值。可是，所有地鼠只会在地上出现一段时间（而且消失后再也不会出现），每个地鼠都在0时刻冒出，但停留的时间可能是不同的，而且每个地鼠被敲击后增加的游戏分值也可能是不同。&lt;br&gt;最近2320学长经常玩这个游戏，以至于敲击每个地鼠只要1秒。他在想如何敲击能使总分最大。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="堆" scheme="https://cothrax.github.io/tags/%E5%A0%86/"/>
    
      <category term="贪心" scheme="https://cothrax.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 交通</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-9-27-traffic/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-9-27-traffic/</id>
    <published>2016-09-15T12:55:31.000Z</published>
    <updated>2016-09-16T09:30:14.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>黄金大神国的首都位于hzwer河中的一座岛屿。一道上班的时候，成千上万辆汽车通过岛屿从西岸的住宅区（由桥连接岛的西部）到东岸的工业区（由桥连接岛的东部）。<br>该岛类似于矩形，它的边平行于主方向。故可将它看作是笛卡尔坐标系中的一个A*B的矩形，它的对角分别为（0, 0）和（A, B）。<br>岛上有n个交通节点（后宫建筑），编号为1…n，第i个节点坐标为(xi, yi)。如果一个节点的坐标为(0, y)，它就位于岛的西岸。类似的，坐标为(A, y)的节点位于岛的东岸。各个节点由街道连接，每条街道用线段连接两个节点。街道有单向行驶或双向行驶之分。除端点外任意两条街道都没有公共点。也没有桥梁或者隧道。<br>你不能对道路网络形状做任何其他假设。沿河岸的街道或节点可能没有入口或者出口街道。由于交通堵塞日趋严重，黄金大神想快速治理好他的国家，于是聘请你测试岛上当前的道路网是否足够。要求你写一个程序确定从岛的西岸的每个节点能够到达东岸的多少个节点。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行包含4个整数n, m, A, B，分别表示hzwer市中心的节点数，街道数和岛屿的尺寸。<br>接下来的n行，每行包含两个整数xi，yi (0≤xi≤A,0≤yi≤B)，表示第i个节点的坐标。任意两个节点的坐标都不相同。<br>再往下的m行表示街道，每条街道用3个整数ci, di, ki（1≤ci, di≤n, ci≠di, ki∈{1,2}），表示节点ci、di有街道连接，如果ki=1,表示从ci到di的街道是单向的，否则，这条街道可以双向行驶。每个无序对{ci, di}最多出现1次。<br>你可以假设西岸节点中至少有1个能够到达东岸的一些节点。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>为每个西岸节点输出1行，表示这个节点出发能够到达东岸的节点数目</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>12 13 7 9<br>0 1<br>0 3<br>2 2<br>5 2<br>7 1<br>7 4<br>7 6<br>7 7<br>3 5<br>0 5<br>0 9<br>3 9<br>1 3 2<br>3 2 1<br>3 4 1<br>4 5 1<br>5 6 1<br>9 3 1<br>9 4 1<br>9 7 1<br>9 12 2<br>10 9 1<br>11 12 1<br>12 8 1<br>12 10 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4<br>4<br>0<br>2</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，n, m≤6000<br>对于100%的数据，1≤n≤300000, 0≤m≤900000,1≤A,B≤10^9<br><img src="/2016/09/15/noip-2014-9-27-traffic/illu.png" alt="illu.png" title=""></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>第一遍看题目，发现除了两边的点以外的坐标毫无用处，然后yy缩点+各种数据结构的启发式合并，然后果断看了标程。<br>其实这个图的形式正是本题的关键所在：</p>
<blockquote>
<p>除端点外任意两条街道都没有公共点。也没有桥梁或者隧道。</p>
</blockquote>
<p>这是一个<strong>平面图</strong>：</p>
<blockquote>
<p>在图论中，平面图是可以画在平面上并且使得不同的边可以互不交叠的图。–Wikipedia</p>
</blockquote>
<p>先从西岸正向bfs，标记所有从西岸可达的点；对于可达点i，d[i]=1<br>考虑西岸的一个点i，记它能到达的东岸上最北边的点为u[i]，最南边的点为d[i]，那么，那么点i能够到达<strong>东岸上$y_j\in[y_{d[i]},y_{u[i]}]\ and\ d[j]=1$的所有点j</strong>：</p>
<blockquote>
<p>由于图上的边不能相交，<em>边i-&gt;u[i]</em>,<em>边i-&gt;d[i]</em>和<em>东岸</em>构成了一个封闭的三角形，位于其中的点j想与外界联通，必然要经过<span>$\{i,(a,d[i]),(a,u[i])\}$</span><!-- Has MathJax -->中的点，即与i连通<br>所以将东岸的点排序后，反向bfs，做两次标记算出d[i]和u[i]即可。</p>
</blockquote>
<p>平面图还有一些奇怪的性质，详见<a href="https://en.wikipedia.org/wiki/Planar_graph" target="_blank" rel="external">Wikipedia</a></p>
<div><br><div class="copy"><br>    <a href="/2016/09/15/noip-2014-9-27-traffic/traffic0.pas" title="{Plain Text}">{Plain Text}</a><br></div><br><div><br><figure class="highlight delphi"><figcaption><span>traffic0.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,next:int <span class="keyword">end</span>;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span></div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000010</span>] <span class="keyword">of</span> edge;</div><div class="line">    l,r,u,d,x,y,head,q:arr;</div><div class="line">    n,m,i,j,f,t,a,b:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f;g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(a,b,s:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> com:=((s=<span class="number">0</span>) <span class="keyword">and</span> (a&lt;b)) <span class="keyword">or</span> ((s=<span class="number">1</span>) <span class="keyword">and</span> (a&gt;b)) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(<span class="keyword">var</span> a:arr;l,r,s:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=y[a[random(r-l)+l]];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> com(y[a[i]],x,s) <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> com(x,y[a[j]],s) <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(a,i,r,s);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(a,l,j,s);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span><span class="params">(<span class="keyword">var</span> d:arr;s,k:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,v,u,h,t:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=s;d[s]:=k;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];inc(h);i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]=-<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=k;</div><div class="line">                q[t]:=u;inc(t);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cal</span><span class="params">(<span class="keyword">var</span> d:arr)</span>;</span></div><div class="line"><span class="keyword">var</span> j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(d,sizeof(d),<span class="number">255</span>);</div><div class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> r[<span class="number">0</span>] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> d[r[j]]&lt;&gt;-<span class="number">1</span> <span class="keyword">then</span> continue;</div><div class="line">        bfs(d,r[j],j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'traffic.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'traffic.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,a,b);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(x[i],y[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f,t,j);</div><div class="line">        add(f,t);<span class="keyword">if</span> j=<span class="number">2</span> <span class="keyword">then</span> add(t,f);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> x[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> inc(l[<span class="number">0</span>]);l[l[<span class="number">0</span>]]:=i <span class="keyword">end</span>;</div><div class="line">    qsort(l,<span class="number">1</span>,l[<span class="number">0</span>],<span class="number">1</span>);</div><div class="line">    fillchar(d,sizeof(d),<span class="number">255</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l[<span class="number">0</span>] <span class="keyword">do</span> </div><div class="line">        <span class="keyword">if</span> d[l[i]]=-<span class="number">1</span> <span class="keyword">then</span> bfs(d,l[i],<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> (x[i]=a) <span class="keyword">and</span> (d[i]=<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(r[<span class="number">0</span>]);r[r[<span class="number">0</span>]]:=i;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    m:=head[<span class="number">0</span>];</div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> add(g[i].t,g[i].f);</div><div class="line">    qsort(r,<span class="number">1</span>,r[<span class="number">0</span>],<span class="number">0</span>);cal(d);</div><div class="line">    qsort(r,<span class="number">1</span>,r[<span class="number">0</span>],<span class="number">1</span>);cal(u);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l[<span class="number">0</span>] <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> u[l[i]]=-<span class="number">1</span> <span class="keyword">then</span> writeln(<span class="number">0</span>)</div><div class="line">        <span class="keyword">else</span> writeln(r[<span class="number">0</span>]-u[l[i]]+<span class="number">2</span>-d[l[i]]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure><br><br></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;黄金大神国的首都位于hzwer河中的一座岛屿。一道上班的时候，成千上万辆汽车通过岛屿从西岸的住宅区（由桥连接岛的西部）到东岸的工业区（由桥连接岛的东部）。&lt;br&gt;该岛类似于矩形，它的边平行于主方向。故可将它看作是笛卡尔坐标系中的一个A*B的矩形，它的对角分别为（0, 0）和（A, B）。&lt;br&gt;岛上有n个交通节点（后宫建筑），编号为1…n，第i个节点坐标为(xi, yi)。如果一个节点的坐标为(0, y)，它就位于岛的西岸。类似的，坐标为(A, y)的节点位于岛的东岸。各个节点由街道连接，每条街道用线段连接两个节点。街道有单向行驶或双向行驶之分。除端点外任意两条街道都没有公共点。也没有桥梁或者隧道。&lt;br&gt;你不能对道路网络形状做任何其他假设。沿河岸的街道或节点可能没有入口或者出口街道。由于交通堵塞日趋严重，黄金大神想快速治理好他的国家，于是聘请你测试岛上当前的道路网是否足够。要求你写一个程序确定从岛的西岸的每个节点能够到达东岸的多少个节点。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="BFS" scheme="https://cothrax.github.io/tags/BFS/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="平面图" scheme="https://cothrax.github.io/tags/%E5%B9%B3%E9%9D%A2%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 人偶师</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-9-27-alice/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-9-27-alice/</id>
    <published>2016-09-15T09:18:05.000Z</published>
    <updated>2016-09-15T09:46:02.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>n点m双向边的图，每个点有2个状态：开和关。每次操作改变一个点的状态，以及与其有边直接相连的点的状态。问开启所有点至少需要多少次操作。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行2个整数n,m。<br>第二行n个整数，第i个数表示第i点的状态，0为关，1为开。<br>第3..m+2行，每行2个整数a,b，表示a和b直接相连，同一条边不会出现多次。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行一个整数k表示最少的操作次数，所有数据保证至少有一组可行解。<br>第二行k个整数，表示操作的点的编号。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 3<br>1 1 0 0<br>2 3<br>1 3<br>2 4</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>1 2 3</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于30%的数据，1&lt;=n&lt;=10，0&lt;=m&lt;=40<br>对于60%的数据，1&lt;=n&lt;=30，0&lt;=m&lt;=100<br>对于100%的数据，1&lt;=n&lt;=40，0&lt;=m&lt;=500</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>图上的反转问题，可以联想到如下题目：</p>
<ol>
<li>最小权匹配（状压dp）：<a href="/2016/09/04/欢乐赛-2014-5-31/" title="P3密码锁">P3密码锁</a></li>
<li>部分枚举+贪心：<a href="/2016/08/25/POJ-P3279-Fliptile/" title="关灯游戏">关灯游戏</a></li>
<li>状压dp：<a href="/2016/08/17/JSOI2016-提高2班-位运算/" title="P4黑客的攻击">P4黑客的攻击</a></li>
<li><del>这是线段树：<a href="/2016/08/22/JSOI2016-提高1班-Day6/" title="P3小W开关灯">P3小W开关灯</a></del></li>
</ol>
<p>关于本题，由n≤40<del>很容易</del>是<strong>折半枚举</strong>。<br>方案和状态可以压成int64，于是可以用位运算优化。<br>用hash拉链存第一次dfs的结果，然后第二次反过来dfs。<br>还有就是pascal的一个坑，下面程序的输出结果是-2147483648<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> i,a:int64;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=<span class="number">31</span>;a:=<span class="number">1</span> <span class="keyword">shl</span> i;</div><div class="line">    <span class="keyword">write</span>(a);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure></p>
<p>原因是shl操作时默认参数1为longint，所以会发生溢出，要强转<code>a:=int64(1) shl int64(i)</code>，参考了<a href="https://stackoverflow.com/questions/8127693/how-can-i-get-a-result-larger-than-232-from-shl" target="_blank" rel="external">stackoverflow</a></p>
<dir style="text-align:right"><a href="/2016/09/15/noip-2014-9-27-alice/alice.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>alice.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> z=<span class="number">500009</span>;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span></div><div class="line">    h,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500010</span>] <span class="keyword">of</span> int64;</div><div class="line">    c,next:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1500010</span>] <span class="keyword">of</span> int;</div><div class="line">    head:<span class="keyword">array</span>[<span class="number">0</span>..z] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">41</span>] <span class="keyword">of</span> int64;</div><div class="line">    i,j,k,n,m,sz,cnt,mn:int;lb,h0,f0,ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lsh</span><span class="params">(a,b:int64)</span>:</span>int64;</div><div class="line"><span class="keyword">begin</span> lsh:=int64(a) <span class="keyword">shl</span> int64(b) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(h0,f0:int64;cnt:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=h0 <span class="keyword">mod</span> z;</div><div class="line">    inc(sz);h[sz]:=h0;f[sz]:=f0;c[sz]:=cnt;</div><div class="line">    next[sz]:=head[i];head[i]:=sz;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(h0:int64)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=h0 <span class="keyword">mod</span> z;i:=head[i];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> h0=h[i] <span class="keyword">then</span> <span class="keyword">exit</span>(i);</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    query:=-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">print</span><span class="params">(ans:int64)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">while</span> ans&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        lb:=ans <span class="keyword">and</span> (-ans);</div><div class="line">        <span class="keyword">write</span>(round(ln(lb)/ln(<span class="number">2</span>))+<span class="number">1</span>,<span class="string">' '</span>);</div><div class="line">        dec(ans,lb);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(v,x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (x=<span class="number">0</span>) <span class="keyword">and</span> (v=k+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span> insert(h0,f0,cnt);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> (x=<span class="number">1</span>) <span class="keyword">and</span> (v=n+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        i:=query(h0);</div><div class="line">        <span class="keyword">if</span> (i&lt;&gt;-<span class="number">1</span>) <span class="keyword">and</span> (c[i]+cnt&lt;mn) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            mn:=c[i]+cnt;</div><div class="line">            ans:=f[i] <span class="keyword">or</span> f0;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    h0:=h0 xor g[v];f0:=f0 <span class="keyword">or</span> lsh(<span class="number">1</span>,v-<span class="number">1</span>);inc(cnt);</div><div class="line">    dfs(v+<span class="number">1</span>,x);</div><div class="line">    h0:=h0 xor g[v];f0:=f0-lsh(<span class="number">1</span>,v-<span class="number">1</span>);dec(cnt);</div><div class="line">    dfs(v+<span class="number">1</span>,x);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span> <span class="comment">&#123;main&#125;</span></div><div class="line">    assign(input,<span class="string">'alice.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'alice.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);h0:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j);inc(h0,lsh(<span class="number">1</span>,i-<span class="number">1</span>)*j);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> g[i]:=lsh(<span class="number">1</span>,i-<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(j,k);</div><div class="line">        inc(g[j],lsh(<span class="number">1</span>,k-<span class="number">1</span>));</div><div class="line">        inc(g[k],lsh(<span class="number">1</span>,j-<span class="number">1</span>));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    k:=n <span class="keyword">shr</span> <span class="number">1</span>;f0:=<span class="number">0</span>;cnt:=<span class="number">0</span>;sz:=<span class="number">0</span>;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    h0:=lsh(<span class="number">1</span>,n)-<span class="number">1</span>;f0:=<span class="number">0</span>;cnt:=<span class="number">0</span>;mn:=maxlongint;</div><div class="line">    dfs(k+<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">    </div><div class="line">    writeln(mn);print(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;n点m双向边的图，每个点有2个状态：开和关。每次操作改变一个点的状态，以及与其有边直接相连的点的状态。问开启所有点至少需要多少次操作。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="位运算" scheme="https://cothrax.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="折半枚举" scheme="https://cothrax.github.io/tags/%E6%8A%98%E5%8D%8A%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="Hash" scheme="https://cothrax.github.io/tags/Hash/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 舞蹈课</title>
    <link href="https://cothrax.github.io/2016/09/15/noip-2014-9-13-dancingLessons/"/>
    <id>https://cothrax.github.io/2016/09/15/noip-2014-9-13-dancingLessons/</id>
    <published>2016-09-15T02:18:52.000Z</published>
    <updated>2016-09-15T02:46:17.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>有 n 个人参加一个舞蹈课。每个人的舞蹈技术由整数 来决定。在舞蹈课的开始,他们从左到右站成一排。当这一排中至少有一对相邻的异性时,舞蹈技术相差最小的那一对会出列并开始跳舞。如果相差最小的不止一对,那么最左边的那一对出列。一对异性出列之后,队伍中的空白按原顺序补上(即:若队伍为 ABCD,那么 BC 出列之后队伍变为 AD)。舞蹈技术相差最小即是 的绝对值最小。<br>你的任务是,模拟以上过程,确定跳舞的配对及顺序。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为正整数n(1≤n≤2*10e5):队伍中的人数。下一行包含 n 个字<br>符 B 或者 G,B 代表男,G 代表女。下一行为 n 个整数ai(ai≤10e7)有信息按照从左到右的顺序给出。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第一行:出列的总对数 k。接下来输出 k 行,每行是两个整数。按跳舞顺序输出,两个整数代表这一对舞伴的编号(按输入顺序从左往右 1 至 n 编号)。请先输出较小的整数,再输出较大的整数。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4<br>BGBG<br>4 2 4 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2<br>3 4<br>1 2</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>用堆维护最小值，元素的删除用链表维护。<br>关于最小堆中任意元素的删除：</p>
<ol>
<li>将该元素的值设成inf，然后heapify</li>
<li>注意在维护下标映射时，不考虑值为inf的元素</li>
<li>如果堆的size=0或堆顶元素为inf，则已经为空</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/15/noip-2014-9-13-dancingLessons/dancingLessons.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>classroomLessons.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=maxlongint <span class="keyword">shr</span> <span class="number">2</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    nh=<span class="keyword">record</span> l,r,d:int <span class="keyword">end</span>;</div><div class="line">    nl=<span class="keyword">record</span> l,r:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    hp:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> nh;</div><div class="line">    lk:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> nl;</div><div class="line">    lh,a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> char;</div><div class="line">    ans:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,sh,cnt,l1,r1,l2,r2:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(i,j:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:nh;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> hp[i].d&lt;&gt;inf <span class="keyword">then</span> lh[hp[i].l]:=j;</div><div class="line">    <span class="keyword">if</span> hp[j].d&lt;&gt;inf <span class="keyword">then</span> lh[hp[j].l]:=i;</div><div class="line">    tmp:=hp[i];hp[i]:=hp[j];hp[j]:=tmp;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(p,c:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    com:=(hp[p].d&lt;hp[c].d) <span class="keyword">or</span> </div><div class="line">        ((hp[p].d=hp[c].d) <span class="keyword">and</span> (hp[p].l&lt;hp[c].l));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">heapify</span><span class="params">(i:int)</span>;</span></div><div class="line"><span class="keyword">var</span> l,r,s:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    l:=i <span class="keyword">shl</span> <span class="number">1</span>;r:=l <span class="keyword">or</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=sh) <span class="keyword">and</span> com(l,i) <span class="keyword">then</span> s:=l <span class="keyword">else</span> s:=i;</div><div class="line">    <span class="keyword">if</span> (r&lt;=sh) <span class="keyword">and</span> com(r,s) <span class="keyword">then</span> s:=r;</div><div class="line">    <span class="keyword">if</span> s&lt;&gt;i <span class="keyword">then</span> <span class="keyword">begin</span> swap(s,i);heapify(s) <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extract</span><span class="params">()</span>;</span></div><div class="line"><span class="keyword">begin</span> swap(<span class="number">1</span>,sh);dec(sh);heapify(<span class="number">1</span>) <span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">delete</span><span class="params">(x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span> i:=lh[x];hp[i].d:=inf;heapify(i) <span class="keyword">end</span>;</div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(sh);lh[x]:=sh;</div><div class="line">    hp[sh].l:=x;hp[sh].r:=y;</div><div class="line">    hp[sh].d:=abs(a[x]-a[y]);</div><div class="line">    i:=sh;</div><div class="line">    <span class="keyword">while</span> (i&gt;<span class="number">1</span>) <span class="keyword">and</span> com(i,i <span class="keyword">shr</span> <span class="number">1</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        swap(i,i <span class="keyword">shr</span> <span class="number">1</span>);i:=i <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'dancingLessons.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'dancingLessons.out'</span>);rewrite(output);</div><div class="line">    readln(n);sh:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(g[i]);readln;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i]);</div><div class="line">        lk[i].l:=i-<span class="number">1</span>;lk[i].r:=i+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    lk[n].r:=<span class="number">0</span>;lk[<span class="number">0</span>].r:=<span class="number">1</span>;lk[<span class="number">0</span>].l:=n;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> g[i]&lt;&gt;g[i-<span class="number">1</span>] <span class="keyword">then</span> insert(i-<span class="number">1</span>,i);</div><div class="line">    cnt:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (hp[<span class="number">1</span>].d&lt;&gt;inf) <span class="keyword">and</span> (sh&lt;&gt;<span class="number">0</span>) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(cnt);</div><div class="line">        l1:=hp[<span class="number">1</span>].l;r1:=hp[<span class="number">1</span>].r;extract;</div><div class="line">        l2:=lk[l1].l;r2:=lk[r1].r;</div><div class="line">        <span class="keyword">if</span> (l2&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (g[l1]&lt;&gt;g[l2]) <span class="keyword">then</span> delete(l2);</div><div class="line">        <span class="keyword">if</span> (r2&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (g[r1]&lt;&gt;g[r2]) <span class="keyword">then</span> delete(r1);</div><div class="line">        <span class="keyword">if</span> (min(l2,r2)&lt;&gt;<span class="number">0</span>) <span class="keyword">and</span> (g[l2]&lt;&gt;g[r2]) <span class="keyword">then</span></div><div class="line">            insert(l2,r2);</div><div class="line">        ans[cnt,<span class="number">0</span>]:=l1;ans[cnt,<span class="number">1</span>]:=r1;</div><div class="line">        lk[l2].r:=r2;lk[r2].l:=l2;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    writeln(cnt);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span> writeln(ans[i,<span class="number">0</span>],<span class="string">' '</span>,ans[i,<span class="number">1</span>]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;有 n 个人参加一个舞蹈课。每个人的舞蹈技术由整数 来决定。在舞蹈课的开始,他们从左到右站成一排。当这一排中至少有一对相邻的异性时,舞蹈技术相差最小的那一对会出列并开始跳舞。如果相差最小的不止一对,那么最左边的那一对出列。一对异性出列之后,队伍中的空白按原顺序补上(即:若队伍为 ABCD,那么 BC 出列之后队伍变为 AD)。舞蹈技术相差最小即是 的绝对值最小。&lt;br&gt;你的任务是,模拟以上过程,确定跳舞的配对及顺序。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="堆" scheme="https://cothrax.github.io/tags/%E5%A0%86/"/>
    
      <category term="链表" scheme="https://cothrax.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 皇帝的烦恼</title>
    <link href="https://cothrax.github.io/2016/09/14/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E7%9A%87%E5%B8%9D%E7%9A%84%E7%83%A6%E6%81%BC/"/>
    <id>https://cothrax.github.io/2016/09/14/NOIP模拟赛-皇帝的烦恼/</id>
    <published>2016-09-14T14:11:22.000Z</published>
    <updated>2016-09-14T14:20:09.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>经过多年的杀戮，秦皇终于统一了中国。为了抵御外来的侵略，他准备在国土边境安置n名将军。不幸的是这n名将军羽翼渐丰，开始展露他们的狼子野心了。他们拒绝述职、拒绝接受皇帝的圣旨。秦皇已经准备好了秘密处决这些无礼的边防大将。不过为防兵变，他决定先授予这些将军一些勋章，为自己赢得战略时间。将军们听说他们即将被授予勋章都很开心，他们纷纷上书表示感谢。第i个将军要求得到ai枚不同颜色的勋章。但是这些将军都很傲气，如果两个相邻的将军拥有颜色相同的勋章他们就会认为皇帝不尊重他们，会立即造反（编号为i的将军和编号为i+1的将军相邻；因为他们驻扎的边境可以类似看成一个圆形，所以编号1和编号n的将军也相邻）。皇帝不得不满足每个将军的要求，但对他们的飞扬跋扈感到很气愤。于是皇帝决定铸造尽量少种类的勋章来满足这些狂妄者的要求。请问他至少要铸造多少种颜色的勋章？<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行有一个整数n(1&lt;=n&lt;=20000)。接下来n行每行一个整数ai，表示第i个将军要求得到多少种勋章。(1&lt;=ai&lt;=100000) </p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数，即最少需要多少种勋章。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 2 2 1 1</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>4</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先容易想出答案=相邻两数和的最大值<br>但对于<strong>奇数个数</strong>的情况，由于是一个环，是不满足上述贪心性质的。<br><del>（这样能得60分）</del><br>最小化合法解，很容易想到<strong>二分答案</strong>，但判定解的<strong>dp</strong>很坑：</p>
<ol>
<li>lb[i]：第i个人与第1个人重复徽章数的最小值</li>
<li>ub[i]：…的最大值</li>
</ol>
<p>$O(1)$转移，方程看代码好了<br>注意二分的下界为相邻两数和的最大值。</p>
<dir style="text-align:right"><a href="/2016/09/14/NOIP模拟赛-皇帝的烦恼/trouble0.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>trouble0.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    a,lb,ub:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,l,r,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">jud</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    lb[<span class="number">1</span>]:=a[<span class="number">1</span>];ub[<span class="number">1</span>]:=a[<span class="number">1</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        ub[i]:=min(a[i],a[<span class="number">1</span>]-lb[i-<span class="number">1</span>]);</div><div class="line">        lb[i]:=max(<span class="number">0</span>,a[i]-(x-a[<span class="number">1</span>]+(a[i-<span class="number">1</span>]-ub[i-<span class="number">1</span>])));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    jud:=lb[n]=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'trouble.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'trouble.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(a[i]);</div><div class="line">        ans:=max(ans,a[i-<span class="number">1</span>]+a[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    l:=ans;r:=ans*<span class="number">2</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> jud(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;r:=mid-<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> l:=mid+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;经过多年的杀戮，秦皇终于统一了中国。为了抵御外来的侵略，他准备在国土边境安置n名将军。不幸的是这n名将军羽翼渐丰，开始展露他们的狼子野心了。他们拒绝述职、拒绝接受皇帝的圣旨。秦皇已经准备好了秘密处决这些无礼的边防大将。不过为防兵变，他决定先授予这些将军一些勋章，为自己赢得战略时间。将军们听说他们即将被授予勋章都很开心，他们纷纷上书表示感谢。第i个将军要求得到ai枚不同颜色的勋章。但是这些将军都很傲气，如果两个相邻的将军拥有颜色相同的勋章他们就会认为皇帝不尊重他们，会立即造反（编号为i的将军和编号为i+1的将军相邻；因为他们驻扎的边境可以类似看成一个圆形，所以编号1和编号n的将军也相邻）。皇帝不得不满足每个将军的要求，但对他们的飞扬跋扈感到很气愤。于是皇帝决定铸造尽量少种类的勋章来满足这些狂妄者的要求。请问他至少要铸造多少种颜色的勋章？&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 西行寺幽幽子</title>
    <link href="https://cothrax.github.io/2016/09/14/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E8%A5%BF%E8%A1%8C%E5%AF%BA%E5%B9%BD%E5%B9%BD%E5%AD%90/"/>
    <id>https://cothrax.github.io/2016/09/14/NOIP模拟赛-西行寺幽幽子/</id>
    <published>2016-09-14T14:07:14.000Z</published>
    <updated>2016-09-14T15:26:23.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>在幻想乡,西行寺幽幽子是以贪吃闻名的亡灵。不过幽幽子可不是只会吃,至少她还管理着亡灵界。话说在幽幽子居住的白玉楼有一颗常年不开花的樱树——西行妖。幽幽子决定去收集人间的春度,聚集起来让西行妖开花。很快,作为幽幽子家园艺师的魂魄妖梦收集到了 M 个单位的春度。并且在这段时间里,幽幽子计算出要让西行妖开出一朵花需要 N 个单位的春度。<br>现在幽幽子想要知道,使用所有的春度,能够让西行妖开出多少朵花。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第 1 行:一个正整数 M<br>第 2 行:一个正整数 N<br>N,M 的位数不超过 L,L 的范围在题目后面给出</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>第 1 行:一个整数 ans,表示能开出花的朵数</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>73861758<br>12471</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>5922</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>对于 60%的数据:L &lt;= 2,000 且 ans &lt;= 2,000<br>对于 100%的数据:L &lt;= 20,000 且 ans &lt;= 2,000,000,000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>双精度除法，但答案在int内，可以用二分+乘法做。<br>题解告诉我还可以用二进制拆分做（就是倍增枚举的思想）</p>
<dir style="text-align:right"><a href="/2016/09/14/NOIP模拟赛-西行寺幽幽子/spring.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>spring.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> bs=<span class="number">100000000</span>;p=<span class="number">8</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    big=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">5010</span>] <span class="keyword">of</span> int64;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m:big;</div><div class="line">    l,r,mid,ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(a,b:big)</span>:</span>int64;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=max(a[<span class="number">0</span>],b[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">while</span> (a[i]=b[i]) <span class="keyword">and</span> (i&gt;<span class="number">0</span>) <span class="keyword">do</span> dec(i);</div><div class="line">    com:=a[i]-b[i];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">rd</span><span class="params">()</span>:</span>big;</div><div class="line"><span class="keyword">var</span> s:ansistring;f,b:int64;i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(rd,sizeof(rd),<span class="number">0</span>);</div><div class="line">    readln(s);f:=<span class="number">0</span>;b:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=length(s) <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(f,(ord(s[i])-ord(<span class="string">'0'</span>))*b);b:=b*<span class="number">10</span>;</div><div class="line">        <span class="keyword">if</span> b=bs <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            inc(rd[<span class="number">0</span>]);rd[rd[<span class="number">0</span>]]:=f;f:=<span class="number">0</span>;b:=<span class="number">1</span>;</div><div class="line">        <span class="keyword">end</span>; </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> f&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(rd[<span class="number">0</span>]);rd[rd[<span class="number">0</span>]]:=f;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span><span class="params">(a:big;b:int64)</span>:</span>big;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(mul,sizeof(mul),<span class="number">0</span>);</div><div class="line">    mul[<span class="number">0</span>]:=a[<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> a[<span class="number">0</span>] <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(mul[i],a[i]*b);</div><div class="line">        inc(mul[i+<span class="number">1</span>],mul[i] <span class="keyword">div</span> bs);</div><div class="line">        mul[i]:=mul[i] <span class="keyword">mod</span> bs;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> mul[mul[<span class="number">0</span>]+<span class="number">1</span>]&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(mul[<span class="number">0</span>]);</div><div class="line">        inc(mul[mul[<span class="number">0</span>]+<span class="number">1</span>],mul[mul[<span class="number">0</span>]] <span class="keyword">div</span> bs);</div><div class="line">        mul[mul[<span class="number">0</span>]]:=mul[mul[<span class="number">0</span>]] <span class="keyword">mod</span> bs;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'spring.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'spring.out'</span>);rewrite(output);</div><div class="line">    m:=rd();n:=rd();</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">2000000000</span>;</div><div class="line">    <span class="keyword">if</span> com(m,n)&lt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="number">0</span>);halt <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> com(m,mul(n,mid))&gt;=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;在幻想乡,西行寺幽幽子是以贪吃闻名的亡灵。不过幽幽子可不是只会吃,至少她还管理着亡灵界。话说在幽幽子居住的白玉楼有一颗常年不开花的樱树——西行妖。幽幽子决定去收集人间的春度,聚集起来让西行妖开花。很快,作为幽幽子家园艺师的魂魄妖梦收集到了 M 个单位的春度。并且在这段时间里,幽幽子计算出要让西行妖开出一朵花需要 N 个单位的春度。&lt;br&gt;现在幽幽子想要知道,使用所有的春度,能够让西行妖开出多少朵花。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="高精度" scheme="https://cothrax.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 藏妹子之处</title>
    <link href="https://cothrax.github.io/2016/09/14/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E8%97%8F%E5%A6%B9%E5%AD%90%E4%B9%8B%E5%A4%84/"/>
    <id>https://cothrax.github.io/2016/09/14/NOIP模拟赛-藏妹子之处/</id>
    <published>2016-09-14T13:53:17.000Z</published>
    <updated>2016-09-14T14:23:23.729Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>今天CZY又找到了三个妹子，有着收藏爱好的他想要找三个地方将妹子们藏起来，将一片空地抽象成一个R行C列的表格，CZY要选出3个单元格。但要满足如下的两个条件：<br>（1）任意两个单元格都不在同一行。<br>（2）任意两个单元格都不在同一列。<br>选取格子存在一个花费，而这个花费是三个格子两两之间曼哈顿距离的和（如(x1,y1)和(x,y2)的曼哈顿距离为|x1-x2|+|y1-y2|）。狗狗想知道的是，花费在minT到maxT之间的方案数有多少。<br>答案模1000000007。所谓的两种不同方案是指：只要它选中的单元格有一个不同，就认为是不同的方案。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一行，4个整数，R、C、minT、maxT。3≤R,C≤4000, 1≤minT≤maxT≤20000。<br>对于30%的数据,  3 ≤ R, C ≤ 70。    </p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p> 一个整数，表示不同的选择方案数量模1000000007后的结果。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><table>
<thead>
<tr>
<th>输入样例</th>
<th>3 3 1 20000</th>
<th>3 3 4 7</th>
<th>4 6 9 12</th>
<th>7 5 13 18</th>
<th>4000 4000 4000  14000</th>
</tr>
</thead>
<tbody>
<tr>
<td>输出样例</td>
<td>6</td>
<td>0</td>
<td>264</td>
<td>1212</td>
<td>859690013</td>
</tr>
</tbody>
</table>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>拿到手DP想了好久。。。结果正解是乱搞<br>考虑曼哈顿距离的数学含义：</p>
<ol>
<li>对于(x1,y1),(x2,y2),(x3,y3)来说（$x_i&lt;x_{i+1}$,y同理），三点的距离和为$2(x3-x1)(y3-y1)$</li>
<li>因此，对于一个矩形r*c，取左上角为(x1,y1)，取右下角为(x3,y3)，在中间（与前两个点行列不同）取点(x2,y2)，那么这三个点的费用是一定的，这个矩形对答案的贡献=(x2,y2)的个数$\cdot P^3_3$</li>
<li>而这样的矩形在整个网格中的位置共有$(n-r+1)(m-c+1)$种</li>
<li>综上，r*c的矩形对答案的总贡献为$6(r-2)(c-2)(n-r+1)(m-c+1)$；这样枚举合法矩形（即曼哈顿距离在[minT,maxT]中）的r和c就能统计出答案。</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/14/NOIP模拟赛-藏妹子之处/excel.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>excel.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000007</span>;</div><div class="line"><span class="keyword">var</span> n,m,i,j,mi,mx:int;ans:qword;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'excel.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'excel.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m,mi,mx);</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">3</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=<span class="number">3</span> <span class="keyword">to</span> m <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> (<span class="number">2</span>*(i+j-<span class="number">2</span>)&gt;=mi) <span class="keyword">and</span> (<span class="number">2</span>*(i+j-<span class="number">2</span>)&lt;=mx) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                ans:=ans+<span class="number">6</span>*(i-<span class="number">2</span>)*(j-<span class="number">2</span>)*(n-i+<span class="number">1</span>)*(m-j+<span class="number">1</span>);</div><div class="line">                <span class="keyword">if</span> ans&gt;inf <span class="keyword">then</span> ans:=ans <span class="keyword">mod</span> inf;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;今天CZY又找到了三个妹子，有着收藏爱好的他想要找三个地方将妹子们藏起来，将一片空地抽象成一个R行C列的表格，CZY要选出3个单元格。但要满足如下的两个条件：&lt;br&gt;（1）任意两个单元格都不在同一行。&lt;br&gt;（2）任意两个单元格都不在同一列。&lt;br&gt;选取格子存在一个花费，而这个花费是三个格子两两之间曼哈顿距离的和（如(x1,y1)和(x,y2)的曼哈顿距离为|x1-x2|+|y1-y2|）。狗狗想知道的是，花费在minT到maxT之间的方案数有多少。&lt;br&gt;答案模1000000007。所谓的两种不同方案是指：只要它选中的单元格有一个不同，就认为是不同的方案。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="枚举" scheme="https://cothrax.github.io/tags/%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="数学" scheme="https://cothrax.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 还教室</title>
    <link href="https://cothrax.github.io/2016/09/12/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E8%BF%98%E6%95%99%E5%AE%A4/"/>
    <id>https://cothrax.github.io/2016/09/12/NOIP模拟赛-还教室/</id>
    <published>2016-09-12T15:27:18.000Z</published>
    <updated>2016-09-14T14:41:41.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><img src="/2016/09/12/NOIP模拟赛-还教室/desc.png" alt="desc.png" title="">
<a id="more"></a>
<img src="/2016/09/12/NOIP模拟赛-还教室/samp.png" alt="samp.png" title="">
<img src="/2016/09/12/NOIP模拟赛-还教室/expl.png" alt="expl.png" title="">
<img src="/2016/09/12/NOIP模拟赛-还教室/data.png" alt="data.png" title="">
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>裸的线段树操作，维护区间和sum和平方和squ<br>平均数显然是<span>$\dfrac{\sum_{i=l}^ra[i]}{r-l+1}$</span><!-- Has MathJax --><br>方差可以变形：<br>记<span>$n=r-l+1,su=\sum_{i=l}^ra[i],sq=\sum_{i=l}^ra[i]^2,M=su/n$</span><!-- Has MathJax --><br><span>$V[l,r]=\dfrac{\sum_{i=l}^r(a[i]-M)^2}{n}$</span><!-- Has MathJax --><br><span>$=\dfrac{\sum_{i=l}^ra[i]^2-2\sum_{i=l}^ra[i]M+nM^2}{n}$</span><!-- Has MathJax --><br><span>$=\dfrac{sq-2su\cdot M+n^2M^2}{n}$</span><!-- Has MathJax --><br><span>$=\dfrac{n\cdot sq-su^2}{n^2}$</span><!-- Has MathJax --><br>方差=平方的平均数-平均数的平方</p>
<ol>
<li>开始错用了一个int做中间量结果wa</li>
<li>第二次被int64坑，大量mod和div千万不要用int64，说不准就会出现精度误差，开始int64+gcd最后一个点wa，换成qword就好。</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/12/NOIP模拟赛-还教室/classroom.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>classroom.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    tag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">400010</span>] <span class="keyword">of</span> qword;</div><div class="line">    seg:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">400010</span>,<span class="number">0</span>..<span class="number">1</span>] <span class="keyword">of</span> qword;</div><div class="line">    a:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,c,l,r:int;d,su,sq,g,k:qword;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:qword)</span>:</span>qword;</div><div class="line"><span class="keyword">begin</span> <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> min:=a <span class="keyword">else</span> min:=b <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(i,b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> b=e <span class="keyword">then</span> <span class="keyword">begin</span> seg[i,<span class="number">0</span>]:=a[b];seg[i,<span class="number">1</span>]:=sqr(a[b]);<span class="keyword">exit</span> <span class="keyword">end</span>;</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    build(i <span class="keyword">shl</span> <span class="number">1</span>,b,mid);</div><div class="line">    build(i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,mid+<span class="number">1</span>,e);</div><div class="line">    seg[i,<span class="number">0</span>]:=seg[i <span class="keyword">shl</span> <span class="number">1</span>,<span class="number">0</span>]+seg[i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,<span class="number">0</span>];</div><div class="line">    seg[i,<span class="number">1</span>]:=seg[i <span class="keyword">shl</span> <span class="number">1</span>,<span class="number">1</span>]+seg[i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,<span class="number">1</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(i,b,e:int)</span>;</span></div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">deal</span><span class="params">(j,b,e:int)</span>;</span></div><div class="line">    <span class="keyword">begin</span></div><div class="line">        inc(tag[j],tag[i]);</div><div class="line">        inc(seg[j,<span class="number">1</span>],<span class="number">2</span>*tag[i]*seg[j,<span class="number">0</span>]+(e-b+<span class="number">1</span>)*sqr(tag[i]));</div><div class="line">        inc(seg[j,<span class="number">0</span>],(e-b+<span class="number">1</span>)*tag[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    deal(i <span class="keyword">shl</span> <span class="number">1</span>,b,mid);</div><div class="line">    deal(i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,mid+<span class="number">1</span>,e);</div><div class="line">    tag[i]:=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(i,b,e,l,r,x:int)</span>:</span>qword;</div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (r&lt;b) <span class="keyword">or</span> (e&lt;l) <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> (l&lt;=b) <span class="keyword">and</span> (e&lt;=r) <span class="keyword">then</span> <span class="keyword">exit</span>(seg[i,x]);</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> tag[i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(i,b,e);</div><div class="line">    query:=query(i <span class="keyword">shl</span> <span class="number">1</span>,b,mid,l,r,x);</div><div class="line">    inc(query,query(i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,mid+<span class="number">1</span>,e,l,r,x));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(i,b,e,l,r,x:int)</span>;</span></div><div class="line"><span class="keyword">var</span> mid:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> (r&lt;b) <span class="keyword">or</span> (e&lt;l) <span class="keyword">then</span> <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">if</span> (l&lt;=b) <span class="keyword">and</span> (e&lt;=r) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">        inc(tag[i],x);</div><div class="line">        inc(seg[i,<span class="number">1</span>],<span class="number">2</span>*x*seg[i,<span class="number">0</span>]+(e-b+<span class="number">1</span>)*sqr(x));</div><div class="line">        inc(seg[i,<span class="number">0</span>],(e-b+<span class="number">1</span>)*x);</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    mid:=(b+e) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> tag[i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(i,b,e);</div><div class="line">    modify(i <span class="keyword">shl</span> <span class="number">1</span>,b,mid,l,r,x);</div><div class="line">    modify(i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,mid+<span class="number">1</span>,e,l,r,x);</div><div class="line">    seg[i,<span class="number">0</span>]:=seg[i <span class="keyword">shl</span> <span class="number">1</span>,<span class="number">0</span>]+seg[i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,<span class="number">0</span>];</div><div class="line">    seg[i,<span class="number">1</span>]:=seg[i <span class="keyword">shl</span> <span class="number">1</span>,<span class="number">1</span>]+seg[i <span class="keyword">shl</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>,<span class="number">1</span>];</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:qword)</span>:</span>qword;</div><div class="line"><span class="keyword">begin</span> <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> gcd:=a <span class="keyword">else</span> gcd:=gcd(b,a <span class="keyword">mod</span> b) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'classroom.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'classroom.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c,l,r);</div><div class="line">        <span class="keyword">case</span> c <span class="keyword">of</span></div><div class="line">            <span class="number">1</span>:<span class="keyword">begin</span> <span class="keyword">read</span>(d);modify(<span class="number">1</span>,<span class="number">1</span>,n,l,r,d) <span class="keyword">end</span>;</div><div class="line">            <span class="number">2</span>:<span class="keyword">begin</span> </div><div class="line">                su:=query(<span class="number">1</span>,<span class="number">1</span>,n,l,r,<span class="number">0</span>);k:=r-l+<span class="number">1</span>;</div><div class="line">                <span class="keyword">if</span> min(su,k)=<span class="number">0</span> <span class="keyword">then</span> writeln(<span class="string">'0/1'</span>)</div><div class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">                    g:=gcd(su,k);</div><div class="line">                    writeln(su <span class="keyword">div</span> g,<span class="string">'/'</span>,k <span class="keyword">div</span> g);</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            <span class="number">3</span>:<span class="keyword">begin</span></div><div class="line">                su:=query(<span class="number">1</span>,<span class="number">1</span>,n,l,r,<span class="number">0</span>);k:=r-l+<span class="number">1</span>;</div><div class="line">                sq:=query(<span class="number">1</span>,<span class="number">1</span>,n,l,r,<span class="number">1</span>);d:=k*sq-sqr(su);</div><div class="line">                <span class="keyword">if</span> min(d,sqr(k))=<span class="number">0</span> <span class="keyword">then</span> writeln(<span class="string">'0/1'</span>)</div><div class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">                    g:=gcd(d,sqr(k));</div><div class="line">                    writeln(d <span class="keyword">div</span> g,<span class="string">'/'</span>,sqr(k) <span class="keyword">div</span> g);</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;img src=&quot;/2016/09/12/NOIP模拟赛-还教室/desc.png&quot; alt=&quot;desc.png&quot; title=&quot;&quot;&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="线段树" scheme="https://cothrax.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 穿越七色虹</title>
    <link href="https://cothrax.github.io/2016/09/11/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E7%A9%BF%E8%B6%8A%E4%B8%83%E8%89%B2%E8%99%B9/"/>
    <id>https://cothrax.github.io/2016/09/11/NOIP模拟赛-穿越七色虹/</id>
    <published>2016-09-11T15:20:02.000Z</published>
    <updated>2016-09-14T13:46:20.780Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><img src="/2016/09/11/NOIP模拟赛-穿越七色虹/desc.png" alt="desc.png" title="">
<a id="more"></a>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个实数 h、x0,表示身高和目的地横坐标。 接下来七行每行两个实数 xi、ri,表示七座半圆形彩虹的圆心和半径。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出最小的 r,四舍五入保留 2 位小数。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4.0 36.0<br>0.0 4.0<br>6.0 4.0<br>12.0 4.0<br>18.0 4.0<br>24.0 4.0<br>30.0 4.0<br>36.0 4.0</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1.00</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>数据范围与约定<br>对于 100% 的数据,满足 0&lt;=xi,x0&lt;=10000,0&lt;h&lt;100。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>二分r+初中几何题<br>确定r后，每个半圆能覆盖的区域都是一个线段，然后排序+扫一边判断，注意终点的判断。<br>另外，用sqrt(n)时要保证n&gt;0</p>
<dir style="text-align:right"><a href="/2016/09/11/NOIP模拟赛-穿越七色虹/rainbow.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>rainbow.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> n=<span class="number">7</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    p,a,b,e:<span class="keyword">array</span>[<span class="number">0</span>..n] <span class="keyword">of</span> double;</div><div class="line">    h,t,l,r,mid:double;</div><div class="line">    i:int;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(i,j:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> com:=(b[i]&lt;b[j]) <span class="keyword">or</span> ((b[i]=b[j]) <span class="keyword">and</span> (e[i]&lt;e[j])) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(i,j:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:double;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    tmp:=b[i];b[i]:=b[j];b[j]:=tmp;</div><div class="line">    tmp:=e[i];e[i]:=e[j];e[j]:=tmp;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:double)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j:int;last:double;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        b[i]:=p[i]-sqrt(max(<span class="number">0</span>,sqr(a[i]+x)-sqr(h)));</div><div class="line">        e[i]:=p[i]+sqrt(max(<span class="number">0</span>,sqr(a[i]+x)-sqr(h)));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> </div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> com(j,i) <span class="keyword">then</span> swap(i,j);</div><div class="line">    j:=n+<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> e[i]&gt;=t <span class="keyword">then</span> <span class="keyword">begin</span> j:=i;break <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> j=n+<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">    last:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> j <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> b[i]&gt;last <span class="keyword">then</span> <span class="keyword">exit</span>(false);</div><div class="line">        last:=max(last,e[i]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    check:=true;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'rainbow.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'rainbow.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(h,t);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(p[i],a[i]);</div><div class="line">    l:=<span class="number">0</span>;r:=<span class="number">1000000</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">100</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r)/<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> r:=mid <span class="keyword">else</span> l:=mid;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(r:<span class="number">0</span>:<span class="number">2</span>);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;img src=&quot;/2016/09/11/NOIP模拟赛-穿越七色虹/desc.png&quot; alt=&quot;desc.png&quot; title=&quot;&quot;&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="二分答案" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 梦幻布丁</title>
    <link href="https://cothrax.github.io/2016/09/11/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E6%A2%A6%E5%B9%BB%E5%B8%83%E4%B8%81/"/>
    <id>https://cothrax.github.io/2016/09/11/NOIP模拟赛-梦幻布丁/</id>
    <published>2016-09-11T03:48:48.000Z</published>
    <updated>2016-09-11T04:01:53.091Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>N个布丁摆成一行,进行M次操作.每次将某个颜色的布丁全部变成另一种颜色的,然后再询问当前一共有多少段颜色.例如颜色分别为1,2,2,1的四个布丁一共有3段颜色.</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行给出N,M表示布丁的个数和好友的操作次数. 第二行N个数A1,A2…An表示第i个布丁的颜色从第三行起有M行,对于每个操作,若第一个数字是1表示要对颜色进行改变，其后的两个整数X,Y表示将所有颜色为X的变为Y，X可能等于Y. 若第一个数字为2表示要进行询问当前有多少段颜色，这时你应该输出一个整数. 0</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>针对第二类操作即询问，依次输出当前有多少段颜色.<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 3<br>1 2 2 1<br>2<br>1 2 1<br>2</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3<br>1</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>n,m&lt;=100000 x,y&lt;=1000000</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><strong>链表+启发式合并</strong><br>启发式合并就是将size小的链表中的元素一个个取出来插进size大的链表，由于每次操作size小的链表，合并后的size至少为原来的两倍。<br>因此，考虑一个元素，它被从一个链表插进另一个链表的次数最多为$O(logN)$次，所以总的复杂度为$O(NlogN)$<br>树、set、并查集等都可以启发式合并。<br>关于本题：<br>将颜色相同的串成链表，记当前的段数为ans；每次把颜色a改成b相当于合并两个链表。<br>暴力修改a和b中size小的那个链表，把它接到大的上面去，检查相邻颜色维护ans。<br>当size[a]&gt;size[b]的时候，会把颜色b修改成a，这与题意不符，因此要用f[i]记录颜色i当前是多少，如在这种情况下f[b]=a,f[a]=b</p>
<dir style="text-align:right"><a href="/2016/09/11/NOIP模拟赛-梦幻布丁/pudding.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>pudding.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    h,t,s,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000010</span>] <span class="keyword">of</span> int;</div><div class="line">    c,next:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,x,a,b,ans:int;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">merge</span><span class="params">(a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=h[a];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span> c[i-<span class="number">1</span>]=b <span class="keyword">then</span> dec(ans);</div><div class="line">        <span class="keyword">if</span> c[i+<span class="number">1</span>]=b <span class="keyword">then</span> dec(ans);</div><div class="line">        i:=next[i];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    i:=h[a];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span> c[i]:=b;i:=next[i] <span class="keyword">end</span>;</div><div class="line">    next[t[b]]:=h[a];t[b]:=t[a];inc(s[b],s[a]);</div><div class="line">    s[a]:=<span class="number">0</span>;h[a]:=<span class="number">0</span>;t[a]:=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'pudding.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'pudding.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(c[i]);</div><div class="line">        <span class="keyword">if</span> c[i]&lt;&gt;c[i-<span class="number">1</span>] <span class="keyword">then</span> inc(ans);</div><div class="line">        f[c[i]]:=c[i];</div><div class="line">        <span class="keyword">if</span> h[c[i]]=<span class="number">0</span> <span class="keyword">then</span> t[c[i]]:=i;</div><div class="line">        inc(s[c[i]]);next[i]:=h[c[i]];h[c[i]]:=i;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(x);</div><div class="line">        <span class="keyword">if</span> x=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(a,b);</div><div class="line">            <span class="keyword">if</span> a=b <span class="keyword">then</span> continue;</div><div class="line">            <span class="keyword">if</span> s[f[a]]&gt;s[f[b]] <span class="keyword">then</span> swap(f[a],f[b]);</div><div class="line">            a:=f[a];b:=f[b];</div><div class="line">            <span class="keyword">if</span> s[a]=<span class="number">0</span> <span class="keyword">then</span> continue;</div><div class="line">            merge(a,b);</div><div class="line">        <span class="keyword">end</span> <span class="keyword">else</span> writeln(ans);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;N个布丁摆成一行,进行M次操作.每次将某个颜色的布丁全部变成另一种颜色的,然后再询问当前一共有多少段颜色.例如颜色分别为1,2,2,1的四个布丁一共有3段颜色.&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行给出N,M表示布丁的个数和好友的操作次数. 第二行N个数A1,A2…An表示第i个布丁的颜色从第三行起有M行,对于每个操作,若第一个数字是1表示要对颜色进行改变，其后的两个整数X,Y表示将所有颜色为X的变为Y，X可能等于Y. 若第一个数字为2表示要进行询问当前有多少段颜色，这时你应该输出一个整数. 0&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;针对第二类操作即询问，依次输出当前有多少段颜色.&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="链表" scheme="https://cothrax.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
      <category term="启发式合并" scheme="https://cothrax.github.io/tags/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 黑魔法师之门</title>
    <link href="https://cothrax.github.io/2016/09/10/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%BB%91%E9%AD%94%E6%B3%95%E5%B8%88%E4%B9%8B%E9%97%A8/"/>
    <id>https://cothrax.github.io/2016/09/10/NOIP模拟赛-黑魔法师之门/</id>
    <published>2016-09-10T15:22:00.000Z</published>
    <updated>2016-09-10T15:36:03.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>经过了 16 个工作日的紧张忙碌,未来的人类终于收集到了足够的能源。然而在与 Violet星球的战争中,由于 Z 副官的愚蠢,地球的领袖 applepi 被邪恶的黑魔法师 Vani 囚禁在了Violet 星球。为了重启 Nescafé这一宏伟的科技工程,人类派出了一支由 XLk、Poet_shy 和lydrainbowcat 三人组成的精英队伍,穿越时空隧道,去往 Violet 星球拯救领袖 applepi。<br>applepi 被囚禁的地点只有一扇门,当地人称它为“黑魔法师之门”。这扇门上画着一张无向无权图,而打开这扇门的密码就是<strong>图中每个点的度数大于零且都是偶数的子图的个数对 1000000009 取模的值</strong>。此处子图 (V, E) 定义为:点集 V 和边集 E 都是原图的任意子集,其中 E 中的边的端点都在 V 中。<br>但是 Vani 认为这样的密码过于简单,因此门上的图是动态的。起初图中只有 N 个顶点而没有边。Vani 建造的门控系统共操作 M 次,每次往图中添加一条边。你必须在每次操作后都填写正确的密码,才能够打开黑魔法师的牢狱,去拯救伟大的领袖 applepi。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个整数 N 和 M。<br>接下来 M 行,每行两个整数 A 和 B,代表门控系统添加了一条无向边 (A, B)。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一共 M 行,表示每次操作后的密码。<br><a id="more"></a></p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 8<br>3 1<br>3 2<br>2 1<br>2 1<br>1 3<br>1 4<br>2 4<br>2 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>0<br>0<br>13<br>7<br>7<br>15<br>31</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><h3 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h3><p>第三次添加之后,存在一个满足条件的子图 {1, 2, 3}(其中 1, 2, 3 是数据中边的标号)。<br>第四次添加之后,存在三个子图 {1, 2, 3},{1, 2, 4},{3, 4}。<br>„„</p>
<h3 id="数据范围与约定"><a href="#数据范围与约定" class="headerlink" title="数据范围与约定"></a>数据范围与约定</h3><p>对于 30% 的数据,N, M≤10。<br>对于 100% 的数据,N≤200000,M≤300000。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>构造（找规律）后并查集，容易发现一个满足题意的子图是有环的，且都可以看做是多个简单环拼接起来，实际上答案=2^(简单环的个数)-1<br>有以下几种思路：</p>
<ol>
<li>考虑边e(x,y)，如果x和y已经连通，那么将e加进去会形成一个简单环，将这个环加入已有的子图中会构造出新的答案，于是ans=ans*2+1</li>
<li>或者说，由于答案的子图都是由简单环组合出来的，二项式定理可得答案是$\sum_{i=1}^{n}C(n,i)=2^n-1$，同样可以算出来</li>
<li>题解提供了一种奇怪的构造思路：<blockquote>
<p>因为一个环里每个点的度数都是大于零的偶数,我们可以这样来构造答案:每个环有选和不选两种选择,如果选择了该环,那么环上所有边的“选择次数” +1。最后取所有“选择次数”为奇数的边构成一个边集,就是一个答案。可以证明这样构造出来的解不重复且涵盖了所有情况。因此答案就是 2^(图中”元”环的个数)。实现方法非常简单,只需要一个并查集即可。</p>
</blockquote>
</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-黑魔法师之门/magician.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>magician.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">const</span> z=<span class="number">1000000009</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,i,ans,x,y:int;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span> par[x]:=find(par[x]);find:=par[x] <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span> x:=find(x);y:=find(y);par[x]:=y <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(x)=find(y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'magician.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'magician.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> par[i]:=i;</div><div class="line">    ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(x,y);</div><div class="line">        <span class="keyword">if</span> same(x,y) <span class="keyword">then</span> ans:=(ans*<span class="number">2</span>+<span class="number">1</span>) <span class="keyword">mod</span> z <span class="keyword">else</span> union(x,y);</div><div class="line">        writeln(ans); </div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;经过了 16 个工作日的紧张忙碌,未来的人类终于收集到了足够的能源。然而在与 Violet星球的战争中,由于 Z 副官的愚蠢,地球的领袖 applepi 被邪恶的黑魔法师 Vani 囚禁在了Violet 星球。为了重启 Nescafé这一宏伟的科技工程,人类派出了一支由 XLk、Poet_shy 和lydrainbowcat 三人组成的精英队伍,穿越时空隧道,去往 Violet 星球拯救领袖 applepi。&lt;br&gt;applepi 被囚禁的地点只有一扇门,当地人称它为“黑魔法师之门”。这扇门上画着一张无向无权图,而打开这扇门的密码就是&lt;strong&gt;图中每个点的度数大于零且都是偶数的子图的个数对 1000000009 取模的值&lt;/strong&gt;。此处子图 (V, E) 定义为:点集 V 和边集 E 都是原图的任意子集,其中 E 中的边的端点都在 V 中。&lt;br&gt;但是 Vani 认为这样的密码过于简单,因此门上的图是动态的。起初图中只有 N 个顶点而没有边。Vani 建造的门控系统共操作 M 次,每次往图中添加一条边。你必须在每次操作后都填写正确的密码,才能够打开黑魔法师的牢狱,去拯救伟大的领袖 applepi。&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;h3 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h3&gt;&lt;p&gt;第一行包含两个整数 N 和 M。&lt;br&gt;接下来 M 行,每行两个整数 A 和 B,代表门控系统添加了一条无向边 (A, B)。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;输出一共 M 行,表示每次操作后的密码。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="并查集" scheme="https://cothrax.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-06-28</title>
    <link href="https://cothrax.github.io/2016/09/10/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-2014-06-28/"/>
    <id>https://cothrax.github.io/2016/09/10/NOIP模拟赛-2014-06-28/</id>
    <published>2016-09-10T07:05:25.000Z</published>
    <updated>2016-09-11T04:01:36.942Z</updated>
    
    <content type="html"><![CDATA[<p>三道图论题。</p>
<table>
<thead>
<tr>
<th>题目</th>
<th>思路</th>
</tr>
</thead>
<tbody>
<tr>
<td>魔术球问题弱化版</td>
<td>二分+最大流(匈牙利算法)</td>
</tr>
<tr>
<td>征兵</td>
<td>最大生成树</td>
</tr>
<tr>
<td>坑爹的GPS</td>
<td>三次最短路</td>
</tr>
</tbody>
</table>
<h1 id="P1-魔术球问题弱化版"><a href="#P1-魔术球问题弱化版" class="headerlink" title="P1 魔术球问题弱化版"></a>P1 魔术球问题弱化版</h1><p>假设有 n 根柱子,现要按下述规则在这 n 根柱子中依次放入编号为 1,2,3,…的球。</p>
<ol>
<li>每次只能在某根柱子的最上面放球。</li>
<li>在同一根柱子中,任何 2 个相邻球的编号之和为完全平方数。</li>
</ol>
<p>试设计一个算法,计算出在 n 根柱子上最多能放多少个球。例如,在 4 根柱子上最多可放 11 个球。<br>对于给定的 n,计算在 n 根柱子上最多能放多少个球。<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第 1 行有 1 个正整数 n,表示柱子数。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行表示可以放的最大球数</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>11</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>题目限制(为什么说弱化版就在这里)<br>N&lt;=60,时限为 3s;比起原题还有弱化在不用打出方案,方案太坑了</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>先二分答案，对于给定球数建图：如果i+j(i&lt;j)为完全平方数，从i向j连边。<br>然后求图上的<strong>最小路径覆盖数x</strong>，判断$x\leq n$<br>求DAG上的路径覆盖可以规约为求对应二分图的最大匹配，详见此处：<a href="http://www.cnblogs.com/justPassBy/p/5369930.html" target="_blank" rel="external">http://www.cnblogs.com/justPassBy/p/5369930.html</a><br>上述方法只适用于DAG</p>
<ol>
<li>二分图只能表示简单路径，环会被看成两条简单路径</li>
<li>连通无向图除非是树，必然有环。</li>
</ol>
<p>最好写的匈牙利算法，极限数据1.5s</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/ball.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>ball.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> eps=<span class="number">0.00000000001</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,match:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4010</span>] <span class="keyword">of</span> int;</div><div class="line">    used:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,l,r,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f;g[m].t:=t;</div><div class="line">    g[m].next:=head[f];head[f]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(v:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=head[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> used[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            used[u]:=true;</div><div class="line">            <span class="keyword">if</span> (match[u]=<span class="number">0</span>) <span class="keyword">or</span> dfs(match[u]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                match[u]:=v;match[v]:=u;</div><div class="line">                <span class="keyword">exit</span>(true);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">exit</span>(false);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j,cnt:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> abs(sqrt(i+j)-round(sqrt(i+j)))&lt;eps <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                add(i,j+x);add(j+x,i);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    fillchar(match,[i]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            fillchar(used,sizeof(used),false);</div><div class="line">            <span class="keyword">if</span> dfs(i) <span class="keyword">then</span> inc(cnt);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> x-cnt&lt;=n <span class="keyword">then</span> check:=true <span class="keyword">else</span> check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'ball.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'ball.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">2000</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<p>最大流比匈牙利快5倍。。。（可能是我写丑了）</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/ball00.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>ball00.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    eps=<span class="number">0.00000000001</span>;</div><div class="line">    inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> t,c,rev,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,d,iter,q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4020</span>] <span class="keyword">of</span> int;</div><div class="line">    n,l,r,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">adde</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="keyword">var</span> m:int;</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        m:=head[<span class="number">0</span>];</div><div class="line">        g[m].t:=t;g[m].c:=c;</div><div class="line">        g[m].next:=head[f];head[f]:=m;</div><div class="line">        inc(head[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">begin</span> adde(f,t,c);adde(t,f,<span class="number">0</span>) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bfs</span><span class="params">(s,t0:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    h,t,i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(d,sizeof(d),<span class="number">255</span>);</div><div class="line">    h:=<span class="number">0</span>;t:=<span class="number">1</span>;q[h]:=s;d[s]:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> (g[i].c&gt;<span class="number">0</span>) <span class="keyword">and</span> (d[u]=-<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+<span class="number">1</span>;</div><div class="line">                q[t]:=u;</div><div class="line">                inc(t);<span class="keyword">if</span> t&gt;<span class="number">4020</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;    </div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">4020</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    bfs:=d[t0]&lt;&gt;-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(v,t,f:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> u,i,tmp:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> v=t <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">    dfs:=<span class="number">0</span>;i:=iter[v];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> (g[i].c&gt;<span class="number">0</span>) <span class="keyword">and</span> (d[u]=d[v]+<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=dfs(u,t,min(g[i].c,f-dfs));</div><div class="line">            dec(g[i].c,tmp);</div><div class="line">            <span class="keyword">if</span> g[i].c&gt;<span class="number">0</span> <span class="keyword">then</span> iter[v]:=i;</div><div class="line">            inc(g[i xor <span class="number">1</span>].c,tmp);</div><div class="line">            inc(dfs,tmp);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">if</span> dfs=<span class="number">0</span> <span class="keyword">then</span> d[i]:=-<span class="number">1</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxflow</span><span class="params">(s,t:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> i:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    maxflow:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> bfs(s,t) <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span> iter[i]:=head[i];</div><div class="line">        inc(maxflow,dfs(s,t,inf));</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> abs(sqrt(i+j)-round(sqrt(i+j)))&lt;eps <span class="keyword">then</span></div><div class="line">                add(i,j+x,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(<span class="number">2</span>*x+<span class="number">1</span>,i,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(i+x,<span class="number">2</span>*x+<span class="number">2</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> x-maxflow(<span class="number">2</span>*x+<span class="number">1</span>,<span class="number">2</span>*x+<span class="number">2</span>)&lt;=n <span class="keyword">then</span> check:=true </div><div class="line">    <span class="keyword">else</span> check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'ball.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'ball.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">2000</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<p>其实二分图完全没有用dinic的必要，直接上ford-fulkerson就好了。</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/ball0.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>ball0.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> </div><div class="line">    eps=<span class="number">0.00000000001</span>;</div><div class="line">    inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,c,next:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200010</span>] <span class="keyword">of</span> edge;</div><div class="line">    head,flag:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4020</span>] <span class="keyword">of</span> int;</div><div class="line">    n,l,r,cur,mid,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">adde</span><span class="params">(f,t,c:int)</span>;</span></div><div class="line">    <span class="keyword">var</span> m:int;</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        m:=head[<span class="number">0</span>];</div><div class="line">        g[m].f:=f;g[m].t:=t;g[m].c:=c;</div><div class="line">        g[m].next:=head[f];head[f]:=m;</div><div class="line">        inc(head[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    adde(f,t,c);adde(t,f,<span class="number">0</span>);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(s,t,f:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> u,i,d:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> s=t <span class="keyword">then</span> <span class="keyword">exit</span>(f);</div><div class="line">    dfs:=<span class="number">0</span>;</div><div class="line">    flag[s]:=cur;</div><div class="line">    i:=head[s];</div><div class="line">    <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        u:=g[i].t;</div><div class="line">        <span class="keyword">if</span> (flag[u]&lt;cur) <span class="keyword">and</span> (g[i].c&gt;<span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            d:=dfs(u,t,min(f-dfs,g[i].c));</div><div class="line">            <span class="keyword">if</span> d&gt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                dec(g[i].c,d);</div><div class="line">                inc(g[i xor <span class="number">1</span>].c,d);</div><div class="line">                inc(dfs,d);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        i:=g[i].next;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxflow</span><span class="params">(s,t:int)</span>:</span>int;</div><div class="line"><span class="keyword">var</span> f:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    maxflow:=<span class="number">0</span>;</div><div class="line">    fillchar(flag,sizeof(flag),<span class="number">0</span>);cur:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> true <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        inc(cur);</div><div class="line">        f:=dfs(s,t,inf);</div><div class="line">        <span class="keyword">if</span> f=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(maxflow);</div><div class="line">        inc(maxflow,f);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">var</span> i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(head,sizeof(head),<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">        <span class="keyword">for</span> j:=i+<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> abs(sqrt(i+j)-round(sqrt(i+j)))&lt;eps <span class="keyword">then</span></div><div class="line">                add(i,j+x,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(<span class="number">2</span>*x+<span class="number">1</span>,i,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> x <span class="keyword">do</span> add(i+x,<span class="number">2</span>*x+<span class="number">2</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> x-maxflow(<span class="number">2</span>*x+<span class="number">1</span>,<span class="number">2</span>*x+<span class="number">2</span>)&lt;=n <span class="keyword">then</span> check:=true </div><div class="line">    <span class="keyword">else</span> check:=false;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'ball.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'ball.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">2000</span>;</div><div class="line">    <span class="keyword">while</span> l&lt;=r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        mid:=(l+r) <span class="keyword">shr</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> check(mid) <span class="keyword">then</span> <span class="keyword">begin</span> ans:=mid;l:=mid+<span class="number">1</span> <span class="keyword">end</span></div><div class="line">        <span class="keyword">else</span> r:=mid-<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-征兵"><a href="#P2-征兵" class="headerlink" title="P2 征兵"></a>P2 征兵</h1><p>一个国王,他拥有一个国家。最近他因为国库里钱太多了,闲着蛋疼要征集一只部队要保卫<br>国家。他选定了 N 个女兵和 M 个男兵,但事实上每征集一个兵他就要花 10000RMB,即使国库<br>里钱再多也伤不起啊。他发现,某男兵和某女兵之间有某种关系(往正常方面想,一共 R 种<br>关系),这种关系可以使 KING 少花一些钱就可以征集到兵,不过国王也知道,在征兵的时候,<br>每一个兵只能使用一种关系来少花钱。这时国王向你求助,问他最少要花多少的钱。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行:T,一共 T 组数据。<br>接下来 T 组数据,<br>第一行包括 N,M,R<br>接下来的 R 行 包括 Xi,Yi,Vi 表示如果招了第 Xi 个女兵,再招第 Yi 个男兵能省 Vi 元(同样表示如果招了第 Yi 个男兵,再招第 Xi 个女兵能也省 Vi 元)</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>共 T 行,表示每组数据的最终花费是多少(因为国库里的钱只有 2^31-1,所以保证最终花费在 maxlongint 范围内)</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>2<br>5 5 8<br>4 3 6831<br>1 3 4583<br>0 0 6592<br>0 1 3063<br>3 3 4975<br>1 3 2049<br>4 2 2104<br>2 2 781<br>5 5 10<br>2 4 9820<br>3 2 6236<br>3 1 8864<br>2 4 8326<br>2 0 5156<br>2 0 1463<br>4 1 2439<br>0 4 4373<br>3 4 8889<br>2 4 3133</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>71071<br>54223</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>数据范围<br>数据保证 T&lt;=5 ,m,n&lt;=10000,r&lt;=50000,Xi&lt;=m,Yi&lt;=n,Vi&lt;=10000,结果&lt;=2^31-1</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>最大生成树</p>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/conscription.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>conscription.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,w:int <span class="keyword">end</span>;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> edge;</div><div class="line">    par:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">20010</span>] <span class="keyword">of</span> int;</div><div class="line">    n,m,r,i,t:int;ans:int64;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;tmp:edge;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=g[random(r-l)+l].w;</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> g[i].w&gt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> g[j].w&lt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=g[i];g[i]:=g[j];g[j]:=tmp;</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:int)</span>:</span>int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> par[x]=x <span class="keyword">then</span> find:=x</div><div class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></div><div class="line">        par[x]:=find(par[x]);</div><div class="line">        find:=par[x];</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(x,y:int)</span>;</span></div><div class="line"><span class="keyword">begin</span> x:=find(x);y:=find(y);par[x]:=y <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">same</span><span class="params">(x,y:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span> same:=find(x)=find(y) <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">read</span>(t);</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        </div><div class="line">        <span class="keyword">read</span>(n,m,r);</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            <span class="keyword">read</span>(g[i].f,g[i].t,g[i].w);</div><div class="line">            inc(g[i].t,n);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n+m-<span class="number">1</span> <span class="keyword">do</span> par[i]:=i;</div><div class="line">        qsort(<span class="number">1</span>,r);ans:=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> same(g[i].f,g[i].t) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                union(g[i].f,g[i].t);</div><div class="line">                inc(ans,g[i].w);</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">        writeln((n+m)*<span class="number">10000</span>-ans);</div><div class="line">        dec(t);</div><div class="line">    <span class="keyword">until</span> t=<span class="number">0</span>;</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P3-坑爹的-GPS"><a href="#P3-坑爹的-GPS" class="headerlink" title="P3 坑爹的 GPS"></a>P3 坑爹的 GPS</h1><p>有一天,FJ 买了一辆车,但是,他一手下载了两个 GPS 系统。好了现在麻烦的事情来了,GPS有一个功能大概大家也知道,如果 FJ 没有按照 GPS 内置地图的最短路走,GPS 就会报错来骚扰你。现在 FJ 准备从他的农舍(在 1 这个点)开车到他的谷屋(n 这个点)。FJ 给了你两个<br>GPS 系统内置地图的信息,他想知道,他最少会听到多少次报错(如果 FJ 走的路同时不满足两个 GPS,报错次数+2)</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行:n,k;n 表示有 FJ 的谷屋在哪,同时保证 GPS 内置地图里的点没有超过 n 的点。K 表示 GPS 内置地图里的路有多少条,如果两个点没有连接则表明这不是一条通路。接下来 k 行,每行 4 个数 X,Y,A,B 分别表示从 X 到 Y 在第一个 GPS 地图里的距离是 A,在第二个 GPS 地图里的是 B。注意由于地形的其他因素 GPS 给出的边是有向边。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出:一个值,表示 FJ 最少听到的报错次数。</p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 7<br>3 4 7 1<br>1 3 2 20<br>1 4 17 18<br>4 5 25 3<br>1 2 10 13 5 4 14<br>2 4 6 5</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>1</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>FJ 选择的路线是 1 2 4 5,但是 GPS 1 认为的最短路是 1 到 3,所以报错一次,对于剩下的2 4 5,两个 GPS 都不会报错。<br>数据范围<br>N&lt;=10000,至于路有多少条自己算吧。数据保证所有的距离都在 2^31-1 以内。</p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>三次最短路：</p>
<ol>
<li>第一个gps从终点反向spfa</li>
<li>第二个gps同理</li>
<li>扫一边所有边构图，边权为该边的报错次数（0..2)，从起点spfa</li>
</ol>
<dir style="text-align:right"><a href="/2016/09/10/NOIP模拟赛-2014-06-28/gpsduel.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>gpsduel.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">const</span> inf=<span class="number">1000000000</span>;</div><div class="line"><span class="keyword">type</span> </div><div class="line">    int=longint;</div><div class="line">    edge=<span class="keyword">record</span> f,t,w,next:int <span class="keyword">end</span>;</div><div class="line">    graph=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50010</span>] <span class="keyword">of</span> edge;</div><div class="line">    arr=<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> int;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    ga,gb,g:graph;</div><div class="line">    ha,hb,head,da,db,q:arr;</div><div class="line">    inq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    n,m,i,cnt,f0,t0,a0,b0:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> g:graph;<span class="keyword">var</span> head:arr;f0,t0,w0:int)</span>;</span></div><div class="line"><span class="keyword">var</span> m:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    inc(head[<span class="number">0</span>]);m:=head[<span class="number">0</span>];</div><div class="line">    g[m].f:=f0;g[m].t:=t0;g[m].w:=w0;</div><div class="line">    g[m].next:=head[f0];head[f0]:=m;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">spfa</span><span class="params">(g:graph;head:arr;x:int;<span class="keyword">var</span> d:arr)</span>;</span></div><div class="line"><span class="keyword">var</span> h,t,i,v,u:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    fillchar(inq,sizeof(inq),false);</div><div class="line">    filldword(d,sizeof(d) <span class="keyword">div</span> <span class="number">4</span>,inf);</div><div class="line">    h:=<span class="number">1</span>;t:=<span class="number">2</span>;q[h]:=x;d[x]:=<span class="number">0</span>;inq[x]:=true;</div><div class="line">    <span class="keyword">while</span> h&lt;&gt;t <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        v:=q[h];i:=head[v];</div><div class="line">        <span class="keyword">while</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            u:=g[i].t;</div><div class="line">            <span class="keyword">if</span> d[u]&gt;d[v]+g[i].w <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                d[u]:=d[v]+g[i].w;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> inq[u] <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                    inq[u]:=true;q[t]:=u;</div><div class="line">                    inc(t);<span class="keyword">if</span> t&gt;<span class="number">10010</span> <span class="keyword">then</span> t:=<span class="number">0</span>;</div><div class="line">                <span class="keyword">end</span>;</div><div class="line">            <span class="keyword">end</span>;</div><div class="line">            i:=g[i].next;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">        inq[v]:=false;</div><div class="line">        inc(h);<span class="keyword">if</span> h&gt;<span class="number">10010</span> <span class="keyword">then</span> h:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'gpsduel.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'gpsduel.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,m);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(f0,t0,a0,b0);</div><div class="line">        add(ga,ha,t0,f0,a0);</div><div class="line">        add(gb,hb,t0,f0,b0);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    spfa(ga,ha,n,da);spfa(gb,hb,n,db);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        cnt:=<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span> da[ga[i].t]=da[ga[i].f]+ga[i].w <span class="keyword">then</span> dec(cnt);</div><div class="line">        <span class="keyword">if</span> db[gb[i].t]=db[gb[i].f]+gb[i].w <span class="keyword">then</span> dec(cnt);</div><div class="line">        add(g,head,ga[i].t,gb[i].f,cnt);</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    spfa(g,head,<span class="number">1</span>,da);</div><div class="line">    <span class="keyword">write</span>(da[n]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;三道图论题。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题目&lt;/th&gt;
&lt;th&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;魔术球问题弱化版&lt;/td&gt;
&lt;td&gt;二分+最大流(匈牙利算法)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;征兵&lt;/td&gt;
&lt;td&gt;最大生成树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;坑爹的GPS&lt;/td&gt;
&lt;td&gt;三次最短路&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-魔术球问题弱化版&quot;&gt;&lt;a href=&quot;#P1-魔术球问题弱化版&quot; class=&quot;headerlink&quot; title=&quot;P1 魔术球问题弱化版&quot;&gt;&lt;/a&gt;P1 魔术球问题弱化版&lt;/h1&gt;&lt;p&gt;假设有 n 根柱子,现要按下述规则在这 n 根柱子中依次放入编号为 1,2,3,…的球。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每次只能在某根柱子的最上面放球。&lt;/li&gt;
&lt;li&gt;在同一根柱子中,任何 2 个相邻球的编号之和为完全平方数。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;试设计一个算法,计算出在 n 根柱子上最多能放多少个球。例如,在 4 根柱子上最多可放 11 个球。&lt;br&gt;对于给定的 n,计算在 n 根柱子上最多能放多少个球。&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="图论" scheme="https://cothrax.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="最短路" scheme="https://cothrax.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="生成树" scheme="https://cothrax.github.io/tags/%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="网络流" scheme="https://cothrax.github.io/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="最大流" scheme="https://cothrax.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
      <category term="二分图" scheme="https://cothrax.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>NOIP模拟赛 2014-7-18</title>
    <link href="https://cothrax.github.io/2016/09/08/NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B-2014-7-18/"/>
    <id>https://cothrax.github.io/2016/09/08/NOIP模拟赛-2014-7-18/</id>
    <published>2016-09-08T07:37:45.000Z</published>
    <updated>2016-09-10T14:14:32.444Z</updated>
    
    <content type="html"><![CDATA[<p>一共五道题，有一道裸的二分和一个树形背包没有写。</p>
<table>
<thead>
<tr>
<th>题目</th>
<th>思路</th>
</tr>
</thead>
<tbody>
<tr>
<td>czy的后宫3</td>
<td>无修改莫队/各种数据结构</td>
</tr>
<tr>
<td>czy的后宫4</td>
<td>坑爹dp</td>
</tr>
<tr>
<td>蒟蒻czy又被D飞了</td>
<td>变形背包</td>
</tr>
</tbody>
</table>
<h1 id="P1-czy的后宫4"><a href="#P1-czy的后宫4" class="headerlink" title="P1 czy的后宫4"></a>P1 czy的后宫4</h1><p>上次czy在机房妥善安排了他的后宫之后，他发现可以将他的妹子分为c种，他经常会考虑这样一个问题：在[l,r]的妹子中间，能挑选出多少不同类型的妹子呢？<br>注意：由于czy非常丧尸，所以他要求在所挑选的妹子类型在[l,r]中出现次数为正偶数，你懂得。<br>问题简述:n个数，m次询问，每次问[l,r]区间有多少个数恰好出现正偶数次<br><a id="more"></a></p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行3个整数，表示n,c,m<br>第二行n个数，每个数Ai在[1,c]之间，表示一个Ai类型的妹子<br>接下来m行，每行两个整数l,r，表示询问[l,r]这个区间的答案</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>有m行，表示第i次询问的答案</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>5 5 3<br>1 1 2 2 3<br>1 5<br>3 4<br>2 3</p>
</blockquote>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>2<br>1<br>0</p>
</blockquote>
<h2 id="提示​"><a href="#提示​" class="headerlink" title="提示​"></a>提示​</h2><p>共有10组测试数据<br>1-4组n,m=500，2000，5000，10000，c=1000<br>5-7组n,m=20000，30000，40000，c=10000<br>8-10组n,m=50000，80000，100000，c=100000<br>数据保证随机生成</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>离线做，裸的无修改莫队</p>
<dir style="text-align:right"><a href="/2016/09/08/NOIP模拟赛-2014-7-18/harem.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>harem.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,m,k,b,i,j,l,r,tot:int;</div><div class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>,<span class="number">0</span>..<span class="number">3</span>] <span class="keyword">of</span> int;</div><div class="line">    a,ans,cnt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100010</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">com</span><span class="params">(i,j:int)</span>:</span>boolean;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    com:=(q[i,<span class="number">3</span>]&lt;q[j,<span class="number">3</span>]) <span class="keyword">or</span> ((q[i,<span class="number">3</span>]=q[j,<span class="number">3</span>]) <span class="keyword">and</span> (q[i,<span class="number">2</span>]&lt;q[j,<span class="number">2</span>]));</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> </div><div class="line">    tmp:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">3</span>] <span class="keyword">of</span> int;</div><div class="line">    i,j:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;q[<span class="number">0</span>]:=q[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> com(i,<span class="number">0</span>) <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> com(<span class="number">0</span>,j) <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            tmp:=q[i];q[i]:=q[j];q[j]:=tmp;</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(i,x:int)</span>;</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> odd(cnt[i]) <span class="keyword">and</span> (cnt[i]&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span> dec(tot);</div><div class="line">    inc(cnt[i],x);</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> odd(cnt[i]) <span class="keyword">and</span> (cnt[i]&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span> inc(tot);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'harem.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'harem.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,k,m);b:=floor(sqrt(n));</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">read</span>(q[i,<span class="number">1</span>],q[i,<span class="number">2</span>]);</div><div class="line">        q[i,<span class="number">0</span>]:=i;</div><div class="line">        q[i,<span class="number">3</span>]:=(q[i,<span class="number">1</span>]-<span class="number">1</span>) <span class="keyword">div</span> b+<span class="number">1</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    qsort(<span class="number">1</span>,m);</div><div class="line">    l:=<span class="number">1</span>;r:=<span class="number">0</span>;tot:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        <span class="keyword">for</span> j:=r+<span class="number">1</span> <span class="keyword">to</span> q[i,<span class="number">2</span>] <span class="keyword">do</span> update(a[j],<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=r <span class="keyword">downto</span> q[i,<span class="number">2</span>]+<span class="number">1</span> <span class="keyword">do</span> update(a[j],-<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=l <span class="keyword">to</span> q[i,<span class="number">1</span>]-<span class="number">1</span> <span class="keyword">do</span> update(a[j],-<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span> j:=l-<span class="number">1</span> <span class="keyword">downto</span> q[i,<span class="number">1</span>] <span class="keyword">do</span> update(a[j],<span class="number">1</span>);</div><div class="line">        l:=q[i,<span class="number">1</span>];r:=q[i,<span class="number">2</span>];</div><div class="line">        ans[q[i,<span class="number">0</span>]]:=tot;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(ans[i]);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P2-czy的后宫4"><a href="#P2-czy的后宫4" class="headerlink" title="P2 czy的后宫4"></a>P2 czy的后宫4</h1><p>czy有很多妹子，妹子虽然数量很多，但是质量不容乐观，她们的美丽值全部为负数（喜闻乐见）。<br>czy每天都要带N个妹子到机房，她们都有一个独一无二的美丽值，美丽值为-1到-N之间的整数。他想要把这些妹子排成一个波动序列，这样相对“漂亮”（美丽值的绝对值较小）的妹子可以与她旁边的两个美丽值的绝对值较大的妹子形成鲜明的对比，整个序列相对将更加“美观”（不再那么无法直视）。<br>一个序列是波动序列仅当序列中的每个数比周围的两个数都大或都小（如果有的话）。<br>现在czy希望知道，长度为N的波动序列有多少种。两种序列A和B不同当且仅当存在一个i，使得Ai≠Bi。由于这个数目可能很大，你只对它除以P的余数感兴趣。</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入文件czy.in仅含一行，两个正整数N, P。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出文件czy.out仅含一行，一个非负整数，表示你所求的答案对P取余之后的结果。<br><!--more--></p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>4 7</p>
</blockquote>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>3</p>
</blockquote>
<h2 id="提示​-1"><a href="#提示​-1" class="headerlink" title="提示​"></a>提示​</h2><p>说明：共有10种可能的序列，它们是：  1324 1423 2143 2314 2413  3142 3241 3412 4132 4231<br>(忽略负号)<br>【数据规模和约定】<br>对于20%的数据，满足N≤10；<br>对于40%的数据，满足N≤18；<br>对于70%的数据，满足N≤550；<br>对于100%的数据，满足3≤N≤4200，P≤10^9。</p>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>异常坑的dp：</p>
<ol>
<li><p>$f[i,j]$：<span>$a{1..i}$</span><!-- Has MathJax -->的序列以$x\in[1..i]$开头，且<span>$a_1&lt;a_2$</span><!-- Has MathJax -->（序列第一个<strong>上升</strong>）的方案数</p>
</li>
<li><p><span>$g[i,j]$</span><!-- Has MathJax -->：<span>$a{1..i}$</span><!-- Has MathJax -->的序列以$x\in[j..i]$开头，且<span>$a_1&gt;a_2$</span><!-- Has MathJax -->（序列第一个<strong>下降</strong>）的方案数</p>
</li>
</ol>
<p>结论：$$f[i,j]=f[i,j-1]+g[i-1,j]$$</p>
<ol>
<li>$f[i,j-1]$：把$1..j-1$开头的方案加上去</li>
<li>$g[i-1,j]$：考虑序列以j开头，要求<span>$a_2&gt;j$</span><!-- Has MathJax -->，则<span>$a_2\in[j+1,i]$</span><!-- Has MathJax -->，从<span>$a_2$</span><!-- Has MathJax -->开始是上升序列，j已经用掉了，剩下<span>$\{1..j-1,j+1..i\}$</span><!-- Has MathJax -->离散为<span>$\{1..i-1\}$</span><!-- Has MathJax -->，原来的j+1离散为1..i-1中的j，所以方案数为$g[i-1,j]$</li>
</ol>
<p>f和g是对称的：考虑将f的一个序列a中的$a_i$换成$i-a_i+1$，就对应g中的一个序列。</p>
<p>于是：$$f[i,j]=f[i,j-1]+f[i-1,i-j]$$</p>
<dir style="text-align:right"><a href="/2016/09/08/NOIP模拟赛-2014-7-18/czy.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>czy.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    n,i,j,c,p:int;</div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>,<span class="number">0</span>..<span class="number">4210</span>] <span class="keyword">of</span> int;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'czy.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'czy.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n,p);</div><div class="line">    <span class="keyword">if</span> n=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span> <span class="keyword">write</span>(<span class="number">1</span>);halt <span class="keyword">end</span>;</div><div class="line">    f[<span class="number">1</span>,<span class="number">1</span>]:=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        c:=i <span class="keyword">and</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> i <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">            f[c,j]:=f[c,j-<span class="number">1</span>]+f[c xor <span class="number">1</span>,i-j];</div><div class="line">            <span class="keyword">if</span> f[c,j]&gt;p <span class="keyword">then</span> f[c,j]:=f[c,j] <span class="keyword">mod</span> p;</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(f[n <span class="keyword">and</span> <span class="number">1</span>,n]*<span class="number">2</span> <span class="keyword">mod</span> p);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
<h1 id="P5-蒟蒻czy又被D飞了"><a href="#P5-蒟蒻czy又被D飞了" class="headerlink" title="P5 蒟蒻czy又被D飞了"></a>P5 蒟蒻czy又被D飞了</h1><p>机房里的各路巨神天天D蒟蒻CZY，早已是他们的日常任务了。（今天的机房也是很和平呢）<br>这一次他们安排好了一种方式来D蒟蒻Czy。每个人每次都能把Czy D飞一个高度（让Czy的高度+a[i]），由于他们的精力有限，要保留体力应对接下来的战斗，所以他们每个人只会D Czy k[i]次。由于他们每个人的D人能力不同，各有所长，所以他们每个人都在Czy到一定高度h[i]以后良心发现，任由Czy自生自灭，回去玩达尔文进化岛了。<br>所以Czy想知道他的速度是否能达到第二宇宙速度，离开这个可怕的地方。但是Czy太弱了，所以这个问题就交给了未来集训队的你。但是你这么吊，哪里屑解答Czy蒟蒻的问题。于是你打算只告诉他最高会飞到什么高度，让他自己算自己的速度去。</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第1行：1个整数N（1&lt;=N&lt;=100）N表示机房里有多少人今天要D 蒟蒻Czy<br>接下里N行，每行描述一个神犇的信息  a[i] h[i] k[i]</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>第1行：1个整数H，表示Czy最高会被神犇们D到哪里去<br><!--more--></p>
<h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote>
<p>7<br>8 35 1<br>5 35 1<br>15 35 1<br>8 35 1<br>10 35 1<br>4 35 1<br>2 35 1</p>
</blockquote>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote>
<p>35</p>
</blockquote>
<h2 id="提示​-2"><a href="#提示​-2" class="headerlink" title="提示​"></a>提示​</h2><p>对于100%的数据  1&lt;=k[i]&lt;=30，1&lt;=h[i]&lt;=10000,  1&lt;=a[i]&lt;=200 </p>
<h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>带限制的背包</p>
<dir style="text-align:right"><a href="/2016/09/08/NOIP模拟赛-2014-7-18/fly.pas" title="复制代码">复制代码</a></dir>

<figure class="highlight delphi"><figcaption><span>fly.pas</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">uses</span> math;</div><div class="line"><span class="keyword">type</span> int=longint;</div><div class="line"><span class="keyword">var</span> </div><div class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">15010</span>] <span class="keyword">of</span> boolean;</div><div class="line">    g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">15010</span>] <span class="keyword">of</span> int;</div><div class="line">    a,k,h:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110</span>] <span class="keyword">of</span> int;</div><div class="line">    n,i,j,ans:int;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:int)</span>;</span></div><div class="line"><span class="keyword">var</span> tmp:int;</div><div class="line"><span class="keyword">begin</span> tmp:=a;a:=b;b:=tmp <span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:int)</span>;</span></div><div class="line"><span class="keyword">var</span> i,j,x:int;</div><div class="line"><span class="keyword">begin</span></div><div class="line">    i:=l;j:=r;x:=h[random(r-l)+l];</div><div class="line">    <span class="keyword">repeat</span></div><div class="line">        <span class="keyword">while</span> h[i]&lt;x <span class="keyword">do</span> inc(i);</div><div class="line">        <span class="keyword">while</span> h[j]&gt;x <span class="keyword">do</span> dec(j);</div><div class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">            swap(a[i],a[j]);</div><div class="line">            swap(h[i],h[j]);</div><div class="line">            swap(k[i],k[j]);</div><div class="line">            inc(i);dec(j);</div><div class="line">        <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">until</span> i&gt;j;</div><div class="line">    <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</div><div class="line">    <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</div><div class="line"><span class="keyword">end</span>;</div><div class="line"></div><div class="line"><span class="keyword">begin</span></div><div class="line">    assign(input,<span class="string">'fly.in'</span>);reset(input);</div><div class="line">    assign(output,<span class="string">'fly.out'</span>);rewrite(output);</div><div class="line">    <span class="keyword">read</span>(n);</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i],h[i],k[i]);</div><div class="line">    qsort(<span class="number">1</span>,n);</div><div class="line">    fillchar(f,sizeof(f),false);</div><div class="line">    f[<span class="number">0</span>]:=true;ans:=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">begin</span></div><div class="line">        fillchar(g,sizeof(g),<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> j:=a[i] <span class="keyword">to</span> h[i] <span class="keyword">do</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> f[j] <span class="keyword">and</span> f[j-a[i]] <span class="keyword">and</span> </div><div class="line">                (g[j-a[i]]&lt;k[i]) <span class="keyword">then</span> <span class="keyword">begin</span></div><div class="line">                f[j]:=true;</div><div class="line">                g[j]:=g[j-a[i]]+<span class="number">1</span>;</div><div class="line">                ans:=max(ans,j);            </div><div class="line">            <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">end</span>;</div><div class="line">    <span class="keyword">write</span>(ans);</div><div class="line">    close(input);close(output);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一共五道题，有一道裸的二分和一个树形背包没有写。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题目&lt;/th&gt;
&lt;th&gt;思路&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;czy的后宫3&lt;/td&gt;
&lt;td&gt;无修改莫队/各种数据结构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;czy的后宫4&lt;/td&gt;
&lt;td&gt;坑爹dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;蒟蒻czy又被D飞了&lt;/td&gt;
&lt;td&gt;变形背包&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;P1-czy的后宫4&quot;&gt;&lt;a href=&quot;#P1-czy的后宫4&quot; class=&quot;headerlink&quot; title=&quot;P1 czy的后宫4&quot;&gt;&lt;/a&gt;P1 czy的后宫4&lt;/h1&gt;&lt;p&gt;上次czy在机房妥善安排了他的后宫之后，他发现可以将他的妹子分为c种，他经常会考虑这样一个问题：在[l,r]的妹子中间，能挑选出多少不同类型的妹子呢？&lt;br&gt;注意：由于czy非常丧尸，所以他要求在所挑选的妹子类型在[l,r]中出现次数为正偶数，你懂得。&lt;br&gt;问题简述:n个数，m次询问，每次问[l,r]区间有多少个数恰好出现正偶数次&lt;br&gt;
    
    </summary>
    
      <category term="Problem Set" scheme="https://cothrax.github.io/categories/Problem-Set/"/>
    
    
      <category term="OI" scheme="https://cothrax.github.io/tags/OI/"/>
    
      <category term="数据结构" scheme="https://cothrax.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="DP" scheme="https://cothrax.github.io/tags/DP/"/>
    
      <category term="背包" scheme="https://cothrax.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="离线" scheme="https://cothrax.github.io/tags/%E7%A6%BB%E7%BA%BF/"/>
    
      <category term="莫队" scheme="https://cothrax.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
  </entry>
  
</feed>
